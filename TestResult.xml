<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-run id="2" testcasecount="965" result="Failed" label="Invalid" total="965" passed="961" failed="0" inconclusive="0" skipped="4" asserts="1869" engine-version="3.4.1.0" clr-version="4.0.30319.42000" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:23:17Z" duration="19.147292">
  <command-line><![CDATA["D:\code\FSharpx.Extras\packages\test\NUnit.ConsoleRunner\tools\nunit3-console.exe" "--noheader" "--timeout=1200000" "D:\code\FSharpx.Extras\tests\FSharpx.CSharpTests\bin\Release\FSharpx.CSharpTests.dll" "D:\code\FSharpx.Extras\tests\FSharpx.Http.Tests\bin\Release\FSharpx.Http.Tests.dll" "D:\code\FSharpx.Extras\tests\FSharpx.Observable.Tests\bin\Release\FSharpx.Observable.Tests.dll" "D:\code\FSharpx.Extras\tests\FSharpx.Tests\bin\Release\FSharpx.CSharpTests.dll" "D:\code\FSharpx.Extras\tests\FSharpx.Tests\bin\Release\FSharpx.Tests.dll" ]]></command-line>
  <test-suite type="Assembly" id="1-1143" name="FSharpx.CSharpTests.dll" fullname="D:\code\FSharpx.Extras\tests\FSharpx.CSharpTests\bin\Release\FSharpx.CSharpTests.dll" runstate="Runnable" testcasecount="124" result="Skipped" label="Ignored" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:23:00Z" duration="2.089101" total="124" passed="123" failed="0" inconclusive="0" skipped="1" asserts="132">
    <environment framework-version="3.4.1.0" clr-version="4.0.30319.42000" os-version="Microsoft Windows NT 10.0.10586.0" platform="Win32NT" cwd="D:\code\FSharpx.Extras" machine-name="GOODEWIND" user="Steffen" user-domain="GOODEWIND" culture="de-DE" uiculture="de-DE" os-architecture="x64" />
    <settings>
      <setting name="DefaultTimeout" value="1200000" />
      <setting name="WorkDirectory" value="D:\code\FSharpx.Extras" />
      <setting name="ImageRuntimeVersion" value="4.0.30319" />
      <setting name="ImageTargetFrameworkName" value=".NETFramework,Version=v4.5" />
      <setting name="ImageRequiresX86" value="False" />
      <setting name="ImageRequiresDefaultAppDomainAssemblyResolver" value="False" />
      <setting name="NumberOfTestWorkers" value="8" />
    </settings>
    <properties>
      <property name="_PID" value="22220" />
      <property name="_APPDOMAIN" value="test-domain-FSharpx.CSharpTests.dll" />
    </properties>
    <reason>
      <message><![CDATA[One or more child tests were ignored]]></message>
    </reason>
    <test-suite type="TestSuite" id="1-1144" name="FSharpx" fullname="FSharpx" runstate="Runnable" testcasecount="124" result="Skipped" label="Ignored" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:23:00Z" duration="2.070198" total="124" passed="123" failed="0" inconclusive="0" skipped="1" asserts="132">
      <reason>
        <message><![CDATA[One or more child tests were ignored]]></message>
      </reason>
      <test-suite type="TestSuite" id="1-1149" name="CSharpTests" fullname="FSharpx.CSharpTests" runstate="Runnable" testcasecount="82" result="Skipped" label="Ignored" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:23:00Z" duration="1.868146" total="82" passed="81" failed="0" inconclusive="0" skipped="1" asserts="90">
        <reason>
          <message><![CDATA[One or more child tests were ignored]]></message>
        </reason>
        <test-suite type="TestFixture" id="1-1044" name="ArrayTests" fullname="FSharpx.CSharpTests.ArrayTests" classname="FSharpx.CSharpTests.ArrayTests" runstate="Runnable" testcasecount="1" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.016694" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
          <test-case id="1-1045" name="Does_not_conflict_with_System_Array" fullname="FSharpx.CSharpTests.ArrayTests.Does_not_conflict_with_System_Array" methodname="Does_not_conflict_with_System_Array" classname="FSharpx.CSharpTests.ArrayTests" runstate="Runnable" seed="379034585" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.004324" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" id="1-1046" name="AsyncTests" fullname="FSharpx.CSharpTests.AsyncTests" classname="FSharpx.CSharpTests.AsyncTests" runstate="Runnable" testcasecount="5" result="Skipped" label="Ignored" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:59Z" duration="1.233950" total="5" passed="4" failed="0" inconclusive="0" skipped="1" asserts="3">
          <reason>
            <message><![CDATA[One or more child tests were ignored]]></message>
          </reason>
          <test-case id="1-1050" name="Example" fullname="FSharpx.CSharpTests.AsyncTests.Example" methodname="Example" classname="FSharpx.CSharpTests.AsyncTests" runstate="Runnable" seed="1411562361" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.083544" asserts="1" />
          <test-case id="1-1051" name="Example2" fullname="FSharpx.CSharpTests.AsyncTests.Example2" methodname="Example2" classname="FSharpx.CSharpTests.AsyncTests" runstate="Ignored" seed="1300944641" result="Skipped" label="Ignored" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.001327" asserts="0">
            <properties>
              <property name="_SKIPREASON" value="just an example" />
            </properties>
            <reason>
              <message><![CDATA[just an example]]></message>
            </reason>
          </test-case>
          <test-case id="1-1047" name="LINQ" fullname="FSharpx.CSharpTests.AsyncTests.LINQ" methodname="LINQ" classname="FSharpx.CSharpTests.AsyncTests" runstate="Runnable" seed="1755241946" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:59Z" duration="0.987438" asserts="1" />
          <test-case id="1-1048" name="Parallel" fullname="FSharpx.CSharpTests.AsyncTests.Parallel" methodname="Parallel" classname="FSharpx.CSharpTests.AsyncTests" runstate="Runnable" seed="1250261483" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.142359" asserts="1" />
          <test-case id="1-1049" name="ToAsync" fullname="FSharpx.CSharpTests.AsyncTests.ToAsync" methodname="ToAsync" classname="FSharpx.CSharpTests.AsyncTests" runstate="Runnable" seed="1238134664" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.002401" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" id="1-1120" name="ChoiceTests" fullname="FSharpx.CSharpTests.ChoiceTests" classname="FSharpx.CSharpTests.ChoiceTests" runstate="Runnable" testcasecount="16" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.132650" total="16" passed="16" failed="0" inconclusive="0" skipped="0" asserts="15">
          <test-case id="1-1129" name="Cast_Exception" fullname="FSharpx.CSharpTests.ChoiceTests.Cast_Exception" methodname="Cast_Exception" classname="FSharpx.CSharpTests.ChoiceTests" runstate="Runnable" seed="1585063994" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.005381" asserts="0" />
          <test-case id="1-1128" name="Cast_OK" fullname="FSharpx.CSharpTests.ChoiceTests.Cast_OK" methodname="Cast_OK" classname="FSharpx.CSharpTests.ChoiceTests" runstate="Runnable" seed="83952129" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.000632" asserts="1" />
          <test-case id="1-1130" name="ChoiceToOption" fullname="FSharpx.CSharpTests.ChoiceTests.ChoiceToOption" methodname="ChoiceToOption" classname="FSharpx.CSharpTests.ChoiceTests" runstate="Runnable" seed="1020820766" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.007761" asserts="1" />
          <test-case id="1-1121" name="Match" fullname="FSharpx.CSharpTests.ChoiceTests.Match" methodname="Match" classname="FSharpx.CSharpTests.ChoiceTests" runstate="Runnable" seed="1569752252" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.001620" asserts="1" />
          <test-case id="1-1122" name="MatchAction" fullname="FSharpx.CSharpTests.ChoiceTests.MatchAction" methodname="MatchAction" classname="FSharpx.CSharpTests.ChoiceTests" runstate="Runnable" seed="746065371" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.001202" asserts="0">
            <output><![CDATA[1
]]></output>
          </test-case>
          <test-case id="1-1123" name="New" fullname="FSharpx.CSharpTests.ChoiceTests.New" methodname="New" classname="FSharpx.CSharpTests.ChoiceTests" runstate="Runnable" seed="1263937938" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.001552" asserts="2" />
          <test-case id="1-1131" name="OptionToChoice" fullname="FSharpx.CSharpTests.ChoiceTests.OptionToChoice" methodname="OptionToChoice" classname="FSharpx.CSharpTests.ChoiceTests" runstate="Runnable" seed="1899185909" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.006487" asserts="1" />
          <test-case id="1-1124" name="Select" fullname="FSharpx.CSharpTests.ChoiceTests.Select" methodname="Select" classname="FSharpx.CSharpTests.ChoiceTests" runstate="Runnable" seed="2099918039" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.001756" asserts="1" />
          <test-case id="1-1125" name="Select2" fullname="FSharpx.CSharpTests.ChoiceTests.Select2" methodname="Select2" classname="FSharpx.CSharpTests.ChoiceTests" runstate="Runnable" seed="611786110" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.000765" asserts="1" />
          <test-case id="1-1133" name="SelectSecond_Error" fullname="FSharpx.CSharpTests.ChoiceTests.SelectSecond_Error" methodname="SelectSecond_Error" classname="FSharpx.CSharpTests.ChoiceTests" runstate="Runnable" seed="1013912560" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.001056" asserts="1" />
          <test-case id="1-1132" name="SelectSecond_OK" fullname="FSharpx.CSharpTests.ChoiceTests.SelectSecond_OK" methodname="SelectSecond_OK" classname="FSharpx.CSharpTests.ChoiceTests" runstate="Runnable" seed="1735063411" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.003473" asserts="1" />
          <test-case id="1-1134" name="Try" fullname="FSharpx.CSharpTests.ChoiceTests.Try" methodname="Try" classname="FSharpx.CSharpTests.ChoiceTests" runstate="Runnable" seed="80514724" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.001530" asserts="0" />
          <test-case id="1-1136" name="Try_as_extension_method_applying_function" fullname="FSharpx.CSharpTests.ChoiceTests.Try_as_extension_method_applying_function" methodname="Try_as_extension_method_applying_function" classname="FSharpx.CSharpTests.ChoiceTests" runstate="Runnable" seed="370131284" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.003897" asserts="1" />
          <test-case id="1-1135" name="Try_as_extension_method_creating_a_new_function" fullname="FSharpx.CSharpTests.ChoiceTests.Try_as_extension_method_creating_a_new_function" methodname="Try_as_extension_method_creating_a_new_function" classname="FSharpx.CSharpTests.ChoiceTests" runstate="Runnable" seed="649248930" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.000511" asserts="1" />
          <test-case id="1-1126" name="Validation_Errors" fullname="FSharpx.CSharpTests.ChoiceTests.Validation_Errors" methodname="Validation_Errors" classname="FSharpx.CSharpTests.ChoiceTests" runstate="Runnable" seed="1487648691" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.032356" asserts="1">
            <output><![CDATA[FSharpx.Collections.NonEmptyList`1[System.String]
]]></output>
          </test-case>
          <test-case id="1-1127" name="Validation_OK" fullname="FSharpx.CSharpTests.ChoiceTests.Validation_OK" methodname="Validation_OK" classname="FSharpx.CSharpTests.ChoiceTests" runstate="Runnable" seed="2063530289" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.002299" asserts="2" />
        </test-suite>
        <test-suite type="TestFixture" id="1-1078" name="DictionaryTests" fullname="FSharpx.CSharpTests.DictionaryTests" classname="FSharpx.CSharpTests.DictionaryTests" runstate="Runnable" testcasecount="1" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.004987" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="1">
          <test-case id="1-1079" name="TryFind" fullname="FSharpx.CSharpTests.DictionaryTests.TryFind" methodname="TryFind" classname="FSharpx.CSharpTests.DictionaryTests" runstate="Runnable" seed="2054726899" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.001786" asserts="1" />
        </test-suite>
        <test-suite type="TestFixture" id="1-1052" name="EnumerableTests" fullname="FSharpx.CSharpTests.EnumerableTests" classname="FSharpx.CSharpTests.EnumerableTests" runstate="Runnable" testcasecount="2" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.010618" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="2">
          <test-case id="1-1053" name="FirstOrNone_None" fullname="FSharpx.CSharpTests.EnumerableTests.FirstOrNone_None" methodname="FirstOrNone_None" classname="FSharpx.CSharpTests.EnumerableTests" runstate="Runnable" seed="712031593" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.000889" asserts="1" />
          <test-case id="1-1054" name="FirstOrNone_Some" fullname="FSharpx.CSharpTests.EnumerableTests.FirstOrNone_Some" methodname="FirstOrNone_Some" classname="FSharpx.CSharpTests.EnumerableTests" runstate="Runnable" seed="539182201" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.000645" asserts="1" />
        </test-suite>
        <test-suite type="TestFixture" id="1-1080" name="FuncTests" fullname="FSharpx.CSharpTests.FuncTests" classname="FSharpx.CSharpTests.FuncTests" runstate="Runnable" testcasecount="6" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.026561" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="5">
          <test-case id="1-1083" name="ActionTuple" fullname="FSharpx.CSharpTests.FuncTests.ActionTuple" methodname="ActionTuple" classname="FSharpx.CSharpTests.FuncTests" runstate="Runnable" seed="1688917458" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.001272" asserts="1" />
          <test-case id="1-1084" name="ActionUntuple" fullname="FSharpx.CSharpTests.FuncTests.ActionUntuple" methodname="ActionUntuple" classname="FSharpx.CSharpTests.FuncTests" runstate="Runnable" seed="858811324" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.001400" asserts="1" />
          <test-case id="1-1086" name="AndThen" fullname="FSharpx.CSharpTests.FuncTests.AndThen" methodname="AndThen" classname="FSharpx.CSharpTests.FuncTests" runstate="Runnable" seed="328240375" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.001894" asserts="1" />
          <test-case id="1-1085" name="Compose" fullname="FSharpx.CSharpTests.FuncTests.Compose" methodname="Compose" classname="FSharpx.CSharpTests.FuncTests" runstate="Runnable" seed="2030628733" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.001356" asserts="1" />
          <test-case id="1-1081" name="FromAction" fullname="FSharpx.CSharpTests.FuncTests.FromAction" methodname="FromAction" classname="FSharpx.CSharpTests.FuncTests" runstate="Runnable" seed="747689305" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.000626" asserts="1" />
          <test-case id="1-1082" name="FromActionEta" fullname="FSharpx.CSharpTests.FuncTests.FromActionEta" methodname="FromActionEta" classname="FSharpx.CSharpTests.FuncTests" runstate="Runnable" seed="1626983382" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.000653" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" id="1-1055" name="LazyTests" fullname="FSharpx.CSharpTests.LazyTests" classname="FSharpx.CSharpTests.LazyTests" runstate="Runnable" testcasecount="2" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.012619" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="3">
          <test-case id="1-1056" name="Create" fullname="FSharpx.CSharpTests.LazyTests.Create" methodname="Create" classname="FSharpx.CSharpTests.LazyTests" runstate="Runnable" seed="1480657811" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.004032" asserts="2" />
          <test-case id="1-1057" name="Singleton" fullname="FSharpx.CSharpTests.LazyTests.Singleton" methodname="Singleton" classname="FSharpx.CSharpTests.LazyTests" runstate="Runnable" seed="1496773370" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.002306" asserts="1" />
        </test-suite>
        <test-suite type="TestFixture" id="1-1105" name="ListTests" fullname="FSharpx.CSharpTests.ListTests" classname="FSharpx.CSharpTests.ListTests" runstate="Runnable" testcasecount="8" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.040990" total="8" passed="8" failed="0" inconclusive="0" skipped="0" asserts="7">
          <test-case id="1-1109" name="Choose" fullname="FSharpx.CSharpTests.ListTests.Choose" methodname="Choose" classname="FSharpx.CSharpTests.ListTests" runstate="Runnable" seed="621588007" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.003708" asserts="1" />
          <test-case id="1-1110" name="Cons" fullname="FSharpx.CSharpTests.ListTests.Cons" methodname="Cons" classname="FSharpx.CSharpTests.ListTests" runstate="Runnable" seed="257113497" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.002525" asserts="2" />
          <test-case id="1-1106" name="Match_empty" fullname="FSharpx.CSharpTests.ListTests.Match_empty" methodname="Match_empty" classname="FSharpx.CSharpTests.ListTests" runstate="Runnable" seed="1254207018" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.001147" asserts="1" />
          <test-case id="1-1107" name="Match_non_empty" fullname="FSharpx.CSharpTests.ListTests.Match_non_empty" methodname="Match_non_empty" classname="FSharpx.CSharpTests.ListTests" runstate="Runnable" seed="361209523" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.001206" asserts="1" />
          <test-case id="1-1108" name="NewList" fullname="FSharpx.CSharpTests.ListTests.NewList" methodname="NewList" classname="FSharpx.CSharpTests.ListTests" runstate="Runnable" seed="1095664479" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.000605" asserts="1" />
          <test-case id="1-1111" name="ToFSharpList" fullname="FSharpx.CSharpTests.ListTests.ToFSharpList" methodname="ToFSharpList" classname="FSharpx.CSharpTests.ListTests" runstate="Runnable" seed="539213852" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.000520" asserts="1" />
          <test-case id="1-1112" name="TryFind_predicate" fullname="FSharpx.CSharpTests.ListTests.TryFind_predicate" methodname="TryFind_predicate" classname="FSharpx.CSharpTests.ListTests" runstate="Runnable" seed="1940543434" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.001809" asserts="0" />
          <test-case id="1-1113" name="TryFind_value" fullname="FSharpx.CSharpTests.ListTests.TryFind_value" methodname="TryFind_value" classname="FSharpx.CSharpTests.ListTests" runstate="Runnable" seed="383606774" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.001163" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" id="1-1114" name="MapTests" fullname="FSharpx.CSharpTests.MapTests" classname="FSharpx.CSharpTests.MapTests" runstate="Runnable" testcasecount="2" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.026022" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="2">
          <test-case id="1-1115" name="New" fullname="FSharpx.CSharpTests.MapTests.New" methodname="New" classname="FSharpx.CSharpTests.MapTests" runstate="Runnable" seed="1569397443" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.016147" asserts="1" />
          <test-case id="1-1116" name="TryFind" fullname="FSharpx.CSharpTests.MapTests.TryFind" methodname="TryFind" classname="FSharpx.CSharpTests.MapTests" runstate="Runnable" seed="329060352" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.002734" asserts="1" />
        </test-suite>
        <test-suite type="TestFixture" id="1-1087" name="NameValueCollectionTests" fullname="FSharpx.CSharpTests.NameValueCollectionTests" classname="FSharpx.CSharpTests.NameValueCollectionTests" runstate="Runnable" testcasecount="5" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.069002" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="15">
          <test-case id="1-1091" name="AsDictionary" fullname="FSharpx.CSharpTests.NameValueCollectionTests.AsDictionary" methodname="AsDictionary" classname="FSharpx.CSharpTests.NameValueCollectionTests" runstate="Runnable" seed="1149712039" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.028367" asserts="2" />
          <test-case id="1-1092" name="AsLookup" fullname="FSharpx.CSharpTests.NameValueCollectionTests.AsLookup" methodname="AsLookup" classname="FSharpx.CSharpTests.NameValueCollectionTests" runstate="Runnable" seed="1807099336" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.003130" asserts="5" />
          <test-case id="1-1088" name="Concat" fullname="FSharpx.CSharpTests.NameValueCollectionTests.Concat" methodname="Concat" classname="FSharpx.CSharpTests.NameValueCollectionTests" runstate="Runnable" seed="1333787050" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.001173" asserts="3" />
          <test-case id="1-1089" name="ToEnumerable" fullname="FSharpx.CSharpTests.NameValueCollectionTests.ToEnumerable" methodname="ToEnumerable" classname="FSharpx.CSharpTests.NameValueCollectionTests" runstate="Runnable" seed="2120023801" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.013026" asserts="2" />
          <test-case id="1-1090" name="ToLookup" fullname="FSharpx.CSharpTests.NameValueCollectionTests.ToLookup" methodname="ToLookup" classname="FSharpx.CSharpTests.NameValueCollectionTests" runstate="Runnable" seed="970344758" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.004842" asserts="3" />
        </test-suite>
        <test-suite type="TestFixture" id="1-1058" name="NonEmptyListTests" fullname="FSharpx.CSharpTests.NonEmptyListTests" classname="FSharpx.CSharpTests.NonEmptyListTests" runstate="Runnable" testcasecount="12" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:23:00Z" duration="0.057570" total="12" passed="12" failed="0" inconclusive="0" skipped="0" asserts="15">
          <test-case id="1-1064" name="Concat_FSharpList" fullname="FSharpx.CSharpTests.NonEmptyListTests.Concat_FSharpList" methodname="Concat_FSharpList" classname="FSharpx.CSharpTests.NonEmptyListTests" runstate="Runnable" seed="123191181" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.002608" asserts="1" />
          <test-case id="1-1066" name="Concat_FSharpList_extension" fullname="FSharpx.CSharpTests.NonEmptyListTests.Concat_FSharpList_extension" methodname="Concat_FSharpList_extension" classname="FSharpx.CSharpTests.NonEmptyListTests" runstate="Runnable" seed="174478865" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.000591" asserts="1" />
          <test-case id="1-1065" name="Concat_NonEmptyList" fullname="FSharpx.CSharpTests.NonEmptyListTests.Concat_NonEmptyList" methodname="Concat_NonEmptyList" classname="FSharpx.CSharpTests.NonEmptyListTests" runstate="Runnable" seed="380125189" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.001336" asserts="1" />
          <test-case id="1-1067" name="Concat_NonEmptyList_extension" fullname="FSharpx.CSharpTests.NonEmptyListTests.Concat_NonEmptyList_extension" methodname="Concat_NonEmptyList_extension" classname="FSharpx.CSharpTests.NonEmptyListTests" runstate="Runnable" seed="596993419" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000582" asserts="1" />
          <test-case id="1-1068" name="Cons" fullname="FSharpx.CSharpTests.NonEmptyListTests.Cons" methodname="Cons" classname="FSharpx.CSharpTests.NonEmptyListTests" runstate="Runnable" seed="1180912286" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001158" asserts="1" />
          <test-case id="1-1059" name="Create" fullname="FSharpx.CSharpTests.NonEmptyListTests.Create" methodname="Create" classname="FSharpx.CSharpTests.NonEmptyListTests" runstate="Runnable" seed="1841266937" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.002042" asserts="2" />
          <test-case id="1-1061" name="HeadTail" fullname="FSharpx.CSharpTests.NonEmptyListTests.HeadTail" methodname="HeadTail" classname="FSharpx.CSharpTests.NonEmptyListTests" runstate="Runnable" seed="498171163" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001266" asserts="2" />
          <test-case id="1-1069" name="Reverse" fullname="FSharpx.CSharpTests.NonEmptyListTests.Reverse" methodname="Reverse" classname="FSharpx.CSharpTests.NonEmptyListTests" runstate="Runnable" seed="712855807" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001147" asserts="1" />
          <test-case id="1-1070" name="Select" fullname="FSharpx.CSharpTests.NonEmptyListTests.Select" methodname="Select" classname="FSharpx.CSharpTests.NonEmptyListTests" runstate="Runnable" seed="218638281" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.003819" asserts="2" />
          <test-case id="1-1060" name="Singleton" fullname="FSharpx.CSharpTests.NonEmptyListTests.Singleton" methodname="Singleton" classname="FSharpx.CSharpTests.NonEmptyListTests" runstate="Runnable" seed="1462314238" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000561" asserts="1" />
          <test-case id="1-1063" name="ToArray" fullname="FSharpx.CSharpTests.NonEmptyListTests.ToArray" methodname="ToArray" classname="FSharpx.CSharpTests.NonEmptyListTests" runstate="Runnable" seed="455322252" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001320" asserts="1" />
          <test-case id="1-1062" name="ToFSharpList" fullname="FSharpx.CSharpTests.NonEmptyListTests.ToFSharpList" methodname="ToFSharpList" classname="FSharpx.CSharpTests.NonEmptyListTests" runstate="Runnable" seed="1008784354" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000522" asserts="1" />
        </test-suite>
        <test-suite type="TestFixture" id="1-1117" name="SetTests" fullname="FSharpx.CSharpTests.SetTests" classname="FSharpx.CSharpTests.SetTests" runstate="Runnable" testcasecount="2" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.017019" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="2">
          <test-case id="1-1118" name="Create" fullname="FSharpx.CSharpTests.SetTests.Create" methodname="Create" classname="FSharpx.CSharpTests.SetTests" runstate="Runnable" seed="1635105714" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.008659" asserts="1" />
          <test-case id="1-1119" name="ToFSharpSet" fullname="FSharpx.CSharpTests.SetTests.ToFSharpSet" methodname="ToFSharpSet" classname="FSharpx.CSharpTests.SetTests" runstate="Runnable" seed="724151793" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001536" asserts="1" />
        </test-suite>
        <test-suite type="TestFixture" id="1-1071" name="StringsTests" fullname="FSharpx.CSharpTests.StringsTests" classname="FSharpx.CSharpTests.StringsTests" runstate="Runnable" testcasecount="6" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.025004" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="10">
          <test-case id="1-1072" name="WhenDetectingIfStringStartsWithHelloAndItDoes" fullname="FSharpx.CSharpTests.StringsTests.WhenDetectingIfStringStartsWithHelloAndItDoes" methodname="WhenDetectingIfStringStartsWithHelloAndItDoes" classname="FSharpx.CSharpTests.StringsTests" runstate="Runnable" seed="107091029" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001070" asserts="1" />
          <test-case id="1-1073" name="WhenDetectingIfStringStartsWithHelloAndItDoesnt" fullname="FSharpx.CSharpTests.StringsTests.WhenDetectingIfStringStartsWithHelloAndItDoesnt" methodname="WhenDetectingIfStringStartsWithHelloAndItDoesnt" classname="FSharpx.CSharpTests.StringsTests" runstate="Runnable" seed="467671507" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000647" asserts="1" />
          <test-case id="1-1074" name="WhenReplacingSimplePatternInStringWhichContainsThePattern" fullname="FSharpx.CSharpTests.StringsTests.WhenReplacingSimplePatternInStringWhichContainsThePattern" methodname="WhenReplacingSimplePatternInStringWhichContainsThePattern" classname="FSharpx.CSharpTests.StringsTests" runstate="Runnable" seed="1881696508" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000308" asserts="1" />
          <test-case id="1-1075" name="WhenReplacingSimplePatternInStringWhichDoesntContainThePattern" fullname="FSharpx.CSharpTests.StringsTests.WhenReplacingSimplePatternInStringWhichDoesntContainThePattern" methodname="WhenReplacingSimplePatternInStringWhichDoesntContainThePattern" classname="FSharpx.CSharpTests.StringsTests" runstate="Runnable" seed="241822620" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000250" asserts="1" />
          <test-case id="1-1076" name="WhenSplittingAStringWithEmptyGroup" fullname="FSharpx.CSharpTests.StringsTests.WhenSplittingAStringWithEmptyGroup" methodname="WhenSplittingAStringWithEmptyGroup" classname="FSharpx.CSharpTests.StringsTests" runstate="Runnable" seed="1449993452" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000538" asserts="3" />
          <test-case id="1-1077" name="WhenSplittingAStringWithQuestionMark" fullname="FSharpx.CSharpTests.StringsTests.WhenSplittingAStringWithQuestionMark" methodname="WhenSplittingAStringWithQuestionMark" classname="FSharpx.CSharpTests.StringsTests" runstate="Runnable" seed="769191438" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000251" asserts="3" />
        </test-suite>
        <test-suite type="TestSuite" id="1-1150" name="ValidationExample" fullname="FSharpx.CSharpTests.ValidationExample" runstate="Runnable" testcasecount="3" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:23:00Z" duration="1.795941" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="8">
          <test-suite type="TestFixture" id="1-1137" name="Test1" fullname="FSharpx.CSharpTests.ValidationExample.Test1" classname="FSharpx.CSharpTests.ValidationExample.Test1" runstate="Runnable" testcasecount="1" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.025507" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="5">
            <test-case id="1-1138" name="Part1" fullname="FSharpx.CSharpTests.ValidationExample.Test1.Part1" methodname="Part1" classname="FSharpx.CSharpTests.ValidationExample.Test1" runstate="Runnable" seed="935126235" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.022391" asserts="5" />
          </test-suite>
          <test-suite type="TestFixture" id="1-1139" name="Test2" fullname="FSharpx.CSharpTests.ValidationExample.Test2" classname="FSharpx.CSharpTests.ValidationExample.Test2" runstate="Runnable" testcasecount="1" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.013565" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="2">
            <test-case id="1-1140" name="Part2" fullname="FSharpx.CSharpTests.ValidationExample.Test2.Part2" methodname="Part2" classname="FSharpx.CSharpTests.ValidationExample.Test2" runstate="Runnable" seed="1888084777" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.010308" asserts="2" />
          </test-suite>
          <test-suite type="TestFixture" id="1-1141" name="Test3" fullname="FSharpx.CSharpTests.ValidationExample.Test3" classname="FSharpx.CSharpTests.ValidationExample.Test3" runstate="Runnable" testcasecount="1" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.015033" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="1">
            <test-case id="1-1142" name="Part3" fullname="FSharpx.CSharpTests.ValidationExample.Test3.Part3" methodname="Part3" classname="FSharpx.CSharpTests.ValidationExample.Test3" runstate="Runnable" seed="291096416" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.011805" asserts="1" />
          </test-suite>
        </test-suite>
        <test-suite type="TestFixture" id="1-1093" name="ValidationTests" fullname="FSharpx.CSharpTests.ValidationTests" classname="FSharpx.CSharpTests.ValidationTests" runstate="Runnable" testcasecount="11" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.063209" total="11" passed="11" failed="0" inconclusive="0" skipped="0" asserts="2">
          <test-case id="1-1103" name="AddressWithLine1AndLine2" fullname="FSharpx.CSharpTests.ValidationTests.AddressWithLine1AndLine2" methodname="AddressWithLine1AndLine2" classname="FSharpx.CSharpTests.ValidationTests" runstate="Runnable" seed="1933627901" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.002950" asserts="0" />
          <test-case id="1-1102" name="AddressWithLine1AndNoLine2" fullname="FSharpx.CSharpTests.ValidationTests.AddressWithLine1AndNoLine2" methodname="AddressWithLine1AndNoLine2" classname="FSharpx.CSharpTests.ValidationTests" runstate="Runnable" seed="1171174647" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000451" asserts="0" />
          <test-case id="1-1104" name="AddressWithLine2AndNoLine1" fullname="FSharpx.CSharpTests.ValidationTests.AddressWithLine2AndNoLine1" methodname="AddressWithLine2AndNoLine1" classname="FSharpx.CSharpTests.ValidationTests" runstate="Runnable" seed="1960614815" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001044" asserts="2" />
          <test-case id="1-1101" name="AddressWithoutLine1" fullname="FSharpx.CSharpTests.ValidationTests.AddressWithoutLine1" methodname="AddressWithoutLine1" classname="FSharpx.CSharpTests.ValidationTests" runstate="Runnable" seed="2127195871" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000715" asserts="0" />
          <test-case id="1-1096" name="Test1_either" fullname="FSharpx.CSharpTests.ValidationTests.Test1_either" methodname="Test1_either" classname="FSharpx.CSharpTests.ValidationTests" runstate="Runnable" seed="1554818820" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000597" asserts="0">
            <output><![CDATA[Error: Invalid User ID
]]></output>
          </test-case>
          <test-case id="1-1094" name="Test1_Imperative" fullname="FSharpx.CSharpTests.ValidationTests.Test1_Imperative" methodname="Test1_Imperative" classname="FSharpx.CSharpTests.ValidationTests" runstate="Runnable" seed="1033683747" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000271" asserts="0">
            <output><![CDATA[Error: Invalid User ID
]]></output>
          </test-case>
          <test-case id="1-1095" name="Test1_option" fullname="FSharpx.CSharpTests.ValidationTests.Test1_option" methodname="Test1_option" classname="FSharpx.CSharpTests.ValidationTests" runstate="Runnable" seed="1583693712" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000411" asserts="0">
            <output><![CDATA[Error: Invalid User ID
]]></output>
          </test-case>
          <test-case id="1-1098" name="Test2_either" fullname="FSharpx.CSharpTests.ValidationTests.Test2_either" methodname="Test2_either" classname="FSharpx.CSharpTests.ValidationTests" runstate="Runnable" seed="1613282919" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.003929" asserts="0">
            <output><![CDATA[Error: Invalid User ID
Error: Invalid ID
]]></output>
          </test-case>
          <test-case id="1-1099" name="Test2_either_LINQ" fullname="FSharpx.CSharpTests.ValidationTests.Test2_either_LINQ" methodname="Test2_either_LINQ" classname="FSharpx.CSharpTests.ValidationTests" runstate="Runnable" seed="90651267" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001726" asserts="0">
            <output><![CDATA[Error: Invalid User ID
Error: Invalid ID
]]></output>
          </test-case>
          <test-case id="1-1097" name="Test2_imperative" fullname="FSharpx.CSharpTests.ValidationTests.Test2_imperative" methodname="Test2_imperative" classname="FSharpx.CSharpTests.ValidationTests" runstate="Runnable" seed="834714672" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000393" asserts="0">
            <output><![CDATA[Error: Invalid user ID
Error: Invalid ID
]]></output>
          </test-case>
          <test-case id="1-1100" name="Test3" fullname="FSharpx.CSharpTests.ValidationTests.Test3" methodname="Test3" classname="FSharpx.CSharpTests.ValidationTests" runstate="Runnable" seed="1912801900" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.012506" asserts="0">
            <output><![CDATA[FSharpx.Collections.NonEmptyList`1[System.String]
]]></output>
          </test-case>
        </test-suite>
      </test-suite>
      <test-suite type="TestSuite" id="1-1145" name="Functional" fullname="FSharpx.Functional" runstate="Runnable" testcasecount="41" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:23:00Z" duration="2.049705" total="41" passed="41" failed="0" inconclusive="0" skipped="0" asserts="41">
        <test-suite type="TestSuite" id="1-1146" name="CSharpTests" fullname="FSharpx.Functional.CSharpTests" runstate="Runnable" testcasecount="41" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:23:00Z" duration="2.046203" total="41" passed="41" failed="0" inconclusive="0" skipped="0" asserts="41">
          <test-suite type="TestFixture" id="1-1000" name="OptionTests" fullname="FSharpx.Functional.CSharpTests.OptionTests" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" testcasecount="41" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.179557" total="41" passed="41" failed="0" inconclusive="0" skipped="0" asserts="41">
            <test-case id="1-1026" name="CastInt" fullname="FSharpx.Functional.CSharpTests.OptionTests.CastInt" methodname="CastInt" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="948943849" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000930" asserts="1" />
            <test-case id="1-1027" name="CastInt_null" fullname="FSharpx.Functional.CSharpTests.OptionTests.CastInt_null" methodname="CastInt_null" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="1081063552" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000344" asserts="1" />
            <test-case id="1-1028" name="DBNull_is_None" fullname="FSharpx.Functional.CSharpTests.OptionTests.DBNull_is_None" methodname="DBNull_is_None" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="1983561651" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000593" asserts="1" />
            <test-case id="1-1020" name="Do" fullname="FSharpx.Functional.CSharpTests.OptionTests.Do" methodname="Do" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="1493513879" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001094" asserts="1" />
            <test-case id="1-1021" name="Dont" fullname="FSharpx.Functional.CSharpTests.OptionTests.Dont" methodname="Dont" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="1044061481" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000371" asserts="0" />
            <test-case id="1-1004" name="FromNullable_WithoutValue" fullname="FSharpx.Functional.CSharpTests.OptionTests.FromNullable_WithoutValue" methodname="FromNullable_WithoutValue" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="895578359" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001094" asserts="1" />
            <test-case id="1-1003" name="FromNullable_WithValue" fullname="FSharpx.Functional.CSharpTests.OptionTests.FromNullable_WithValue" methodname="FromNullable_WithValue" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="1409911420" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000475" asserts="1" />
            <test-case id="1-1034" name="GetOrDefault_ReferenceType" fullname="FSharpx.Functional.CSharpTests.OptionTests.GetOrDefault_ReferenceType" methodname="GetOrDefault_ReferenceType" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="557078763" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000547" asserts="1" />
            <test-case id="1-1035" name="GetOrDefault_ValueType" fullname="FSharpx.Functional.CSharpTests.OptionTests.GetOrDefault_ValueType" methodname="GetOrDefault_ValueType" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="1902440034" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000325" asserts="1" />
            <test-case id="1-1033" name="GetOrDefault_WithValue" fullname="FSharpx.Functional.CSharpTests.OptionTests.GetOrDefault_WithValue" methodname="GetOrDefault_WithValue" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="915583178" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000233" asserts="1" />
            <test-case id="1-1031" name="GetOrElse" fullname="FSharpx.Functional.CSharpTests.OptionTests.GetOrElse" methodname="GetOrElse" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="1062958130" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000832" asserts="1" />
            <test-case id="1-1032" name="GetOrElse_function" fullname="FSharpx.Functional.CSharpTests.OptionTests.GetOrElse_function" methodname="GetOrElse_function" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="146540895" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000755" asserts="1" />
            <test-case id="1-1001" name="HasValue" fullname="FSharpx.Functional.CSharpTests.OptionTests.HasValue" methodname="HasValue" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="294156518" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000224" asserts="1" />
            <test-case id="1-1011" name="LINQ_Aggregate" fullname="FSharpx.Functional.CSharpTests.OptionTests.LINQ_Aggregate" methodname="LINQ_Aggregate" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="752060174" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001996" asserts="1" />
            <test-case id="1-1012" name="LINQ_Aggregate_None" fullname="FSharpx.Functional.CSharpTests.OptionTests.LINQ_Aggregate_None" methodname="LINQ_Aggregate_None" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="1665612538" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000576" asserts="1" />
            <test-case id="1-1007" name="LINQ_Select" fullname="FSharpx.Functional.CSharpTests.OptionTests.LINQ_Select" methodname="LINQ_Select" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="797584024" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001292" asserts="1" />
            <test-case id="1-1008" name="LINQ_SelectMany" fullname="FSharpx.Functional.CSharpTests.OptionTests.LINQ_SelectMany" methodname="LINQ_SelectMany" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="2012792858" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001590" asserts="1" />
            <test-case id="1-1009" name="LINQ_SelectMany2" fullname="FSharpx.Functional.CSharpTests.OptionTests.LINQ_SelectMany2" methodname="LINQ_SelectMany2" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="405263129" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000706" asserts="1" />
            <test-case id="1-1010" name="LINQ_SelectMany2_with_none" fullname="FSharpx.Functional.CSharpTests.OptionTests.LINQ_SelectMany2_with_none" methodname="LINQ_SelectMany2_with_none" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="797556183" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000884" asserts="1" />
            <test-case id="1-1013" name="LINQ_Where" fullname="FSharpx.Functional.CSharpTests.OptionTests.LINQ_Where" methodname="LINQ_Where" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="1530351265" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000802" asserts="1" />
            <test-case id="1-1014" name="LINQ_Where2" fullname="FSharpx.Functional.CSharpTests.OptionTests.LINQ_Where2" methodname="LINQ_Where2" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="1414066635" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000529" asserts="1" />
            <test-case id="1-1015" name="LINQ_Where3" fullname="FSharpx.Functional.CSharpTests.OptionTests.LINQ_Where3" methodname="LINQ_Where3" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="266438520" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000327" asserts="1" />
            <test-case id="1-1019" name="Match_Action" fullname="FSharpx.Functional.CSharpTests.OptionTests.Match_Action" methodname="Match_Action" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="2050721045" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000278" asserts="0">
              <output><![CDATA[5
]]></output>
            </test-case>
            <test-case id="1-1017" name="Match_None" fullname="FSharpx.Functional.CSharpTests.OptionTests.Match_None" methodname="Match_None" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="1849481023" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000877" asserts="1" />
            <test-case id="1-1016" name="Match_Some" fullname="FSharpx.Functional.CSharpTests.OptionTests.Match_Some" methodname="Match_Some" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="1514837857" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000644" asserts="1" />
            <test-case id="1-1018" name="Match_Value" fullname="FSharpx.Functional.CSharpTests.OptionTests.Match_Value" methodname="Match_Value" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="1329973086" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000689" asserts="1" />
            <test-case id="1-1002" name="NotHasValue" fullname="FSharpx.Functional.CSharpTests.OptionTests.NotHasValue" methodname="NotHasValue" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="987701596" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000194" asserts="1" />
            <test-case id="1-1029" name="OrElse" fullname="FSharpx.Functional.CSharpTests.OptionTests.OrElse" methodname="OrElse" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="234730755" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000603" asserts="1" />
            <test-case id="1-1030" name="OrElse_None" fullname="FSharpx.Functional.CSharpTests.OptionTests.OrElse_None" methodname="OrElse_None" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="125611339" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000474" asserts="1" />
            <test-case id="1-1037" name="Sequence_None" fullname="FSharpx.Functional.CSharpTests.OptionTests.Sequence_None" methodname="Sequence_None" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="1510670278" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.004192" asserts="1" />
            <test-case id="1-1036" name="Sequence_Some" fullname="FSharpx.Functional.CSharpTests.OptionTests.Sequence_Some" methodname="Sequence_Some" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="1005862727" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001941" asserts="1" />
            <test-case id="1-1005" name="Some" fullname="FSharpx.Functional.CSharpTests.OptionTests.Some" methodname="Some" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="1172944059" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000273" asserts="1" />
            <test-case id="1-1006" name="SomeExtensionMethod" fullname="FSharpx.Functional.CSharpTests.OptionTests.SomeExtensionMethod" methodname="SomeExtensionMethod" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="731428096" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000311" asserts="1" />
            <test-case id="1-1040" name="ToArray_None" fullname="FSharpx.Functional.CSharpTests.OptionTests.ToArray_None" methodname="ToArray_None" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="1431817512" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000519" asserts="1" />
            <test-case id="1-1041" name="ToArray_Some" fullname="FSharpx.Functional.CSharpTests.OptionTests.ToArray_Some" methodname="ToArray_Some" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="819448749" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000809" asserts="2" />
            <test-case id="1-1038" name="ToFSharpList_None" fullname="FSharpx.Functional.CSharpTests.OptionTests.ToFSharpList_None" methodname="ToFSharpList_None" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="781131920" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000685" asserts="1" />
            <test-case id="1-1039" name="ToFSharpList_Some" fullname="FSharpx.Functional.CSharpTests.OptionTests.ToFSharpList_Some" methodname="ToFSharpList_Some" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="1074843750" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001451" asserts="2" />
            <test-case id="1-1023" name="TryParseDec" fullname="FSharpx.Functional.CSharpTests.OptionTests.TryParseDec" methodname="TryParseDec" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="983759461" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001858" asserts="1" />
            <test-case id="1-1024" name="TryParseDouble" fullname="FSharpx.Functional.CSharpTests.OptionTests.TryParseDouble" methodname="TryParseDouble" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="2144971626" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001684" asserts="1" />
            <test-case id="1-1025" name="TryParseFloat" fullname="FSharpx.Functional.CSharpTests.OptionTests.TryParseFloat" methodname="TryParseFloat" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="1463926209" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001815" asserts="1" />
            <test-case id="1-1022" name="TryParseInt" fullname="FSharpx.Functional.CSharpTests.OptionTests.TryParseInt" methodname="TryParseInt" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="640570945" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000302" asserts="1" />
          </test-suite>
        </test-suite>
      </test-suite>
      <test-suite type="TestSuite" id="1-1147" name="IO" fullname="FSharpx.IO" runstate="Runnable" testcasecount="1" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:23:00Z" duration="2.054700" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="1">
        <test-suite type="TestSuite" id="1-1148" name="CSharpTests" fullname="FSharpx.IO.CSharpTests" runstate="Runnable" testcasecount="1" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:23:00Z" duration="2.051207" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="1">
          <test-suite type="TestFixture" id="1-1042" name="IOTests" fullname="FSharpx.IO.CSharpTests.IOTests" classname="FSharpx.IO.CSharpTests.IOTests" runstate="Runnable" testcasecount="1" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.002986" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="1">
            <test-case id="1-1043" name="WhenConvertingTextToWindowsLineBreaks" fullname="FSharpx.IO.CSharpTests.IOTests.WhenConvertingTextToWindowsLineBreaks" methodname="WhenConvertingTextToWindowsLineBreaks" classname="FSharpx.IO.CSharpTests.IOTests" runstate="Runnable" seed="1261517721" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000459" asserts="1" />
          </test-suite>
        </test-suite>
      </test-suite>
    </test-suite>
  </test-suite>
  <test-suite type="Assembly" id="2-1" name="FSharpx.Http.Tests.dll" fullname="D:\code\FSharpx.Extras\tests\FSharpx.Http.Tests\bin\Release\FSharpx.Http.Tests.dll" testcasecount="0" runstate="NotRunnable" result="Failed" label="Invalid">
    <properties>
      <property name="_SKIPREASON" value="No suitable tests found in 'D:\code\FSharpx.Extras\tests\FSharpx.Http.Tests\bin\Release\FSharpx.Http.Tests.dll'.&#xA;Either assembly contains no tests or proper test driver has not been found." />
    </properties>
    <reason>
      <message>No suitable tests found in 'D:\code\FSharpx.Extras\tests\FSharpx.Http.Tests\bin\Release\FSharpx.Http.Tests.dll'.
Either assembly contains no tests or proper test driver has not been found.</message>
    </reason>
  </test-suite>
  <test-suite type="Assembly" id="3-1" name="FSharpx.Observable.Tests.dll" fullname="D:\code\FSharpx.Extras\tests\FSharpx.Observable.Tests\bin\Release\FSharpx.Observable.Tests.dll" testcasecount="0" runstate="NotRunnable" result="Failed" label="Invalid">
    <properties>
      <property name="_SKIPREASON" value="No suitable tests found in 'D:\code\FSharpx.Extras\tests\FSharpx.Observable.Tests\bin\Release\FSharpx.Observable.Tests.dll'.&#xA;Either assembly contains no tests or proper test driver has not been found." />
    </properties>
    <reason>
      <message>No suitable tests found in 'D:\code\FSharpx.Extras\tests\FSharpx.Observable.Tests\bin\Release\FSharpx.Observable.Tests.dll'.
Either assembly contains no tests or proper test driver has not been found.</message>
    </reason>
  </test-suite>
  <test-suite type="Assembly" id="4-1143" name="FSharpx.CSharpTests.dll" fullname="D:\code\FSharpx.Extras\tests\FSharpx.Tests\bin\Release\FSharpx.CSharpTests.dll" runstate="Runnable" testcasecount="124" result="Skipped" label="Ignored" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:23:00Z" duration="2.149239" total="124" passed="123" failed="0" inconclusive="0" skipped="1" asserts="132">
    <environment framework-version="3.4.1.0" clr-version="4.0.30319.42000" os-version="Microsoft Windows NT 10.0.10586.0" platform="Win32NT" cwd="D:\code\FSharpx.Extras" machine-name="GOODEWIND" user="Steffen" user-domain="GOODEWIND" culture="de-DE" uiculture="de-DE" os-architecture="x64" />
    <settings>
      <setting name="DefaultTimeout" value="1200000" />
      <setting name="WorkDirectory" value="D:\code\FSharpx.Extras" />
      <setting name="ImageRuntimeVersion" value="4.0.30319" />
      <setting name="ImageTargetFrameworkName" value=".NETFramework,Version=v4.5" />
      <setting name="ImageRequiresX86" value="False" />
      <setting name="ImageRequiresDefaultAppDomainAssemblyResolver" value="False" />
      <setting name="NumberOfTestWorkers" value="8" />
    </settings>
    <properties>
      <property name="_PID" value="18756" />
      <property name="_APPDOMAIN" value="test-domain-FSharpx.CSharpTests.dll" />
    </properties>
    <reason>
      <message><![CDATA[One or more child tests were ignored]]></message>
    </reason>
    <test-suite type="TestSuite" id="4-1144" name="FSharpx" fullname="FSharpx" runstate="Runnable" testcasecount="124" result="Skipped" label="Ignored" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:23:00Z" duration="2.130707" total="124" passed="123" failed="0" inconclusive="0" skipped="1" asserts="132">
      <reason>
        <message><![CDATA[One or more child tests were ignored]]></message>
      </reason>
      <test-suite type="TestSuite" id="4-1149" name="CSharpTests" fullname="FSharpx.CSharpTests" runstate="Runnable" testcasecount="82" result="Skipped" label="Ignored" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:23:00Z" duration="1.923153" total="82" passed="81" failed="0" inconclusive="0" skipped="1" asserts="90">
        <reason>
          <message><![CDATA[One or more child tests were ignored]]></message>
        </reason>
        <test-suite type="TestFixture" id="4-1044" name="ArrayTests" fullname="FSharpx.CSharpTests.ArrayTests" classname="FSharpx.CSharpTests.ArrayTests" runstate="Runnable" testcasecount="1" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.015356" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="0">
          <test-case id="4-1045" name="Does_not_conflict_with_System_Array" fullname="FSharpx.CSharpTests.ArrayTests.Does_not_conflict_with_System_Array" methodname="Does_not_conflict_with_System_Array" classname="FSharpx.CSharpTests.ArrayTests" runstate="Runnable" seed="1321964396" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.004419" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" id="4-1046" name="AsyncTests" fullname="FSharpx.CSharpTests.AsyncTests" classname="FSharpx.CSharpTests.AsyncTests" runstate="Runnable" testcasecount="5" result="Skipped" label="Ignored" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:59Z" duration="1.302964" total="5" passed="4" failed="0" inconclusive="0" skipped="1" asserts="3">
          <reason>
            <message><![CDATA[One or more child tests were ignored]]></message>
          </reason>
          <test-case id="4-1050" name="Example" fullname="FSharpx.CSharpTests.AsyncTests.Example" methodname="Example" classname="FSharpx.CSharpTests.AsyncTests" runstate="Runnable" seed="254597681" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.058435" asserts="1" />
          <test-case id="4-1051" name="Example2" fullname="FSharpx.CSharpTests.AsyncTests.Example2" methodname="Example2" classname="FSharpx.CSharpTests.AsyncTests" runstate="Ignored" seed="2088901199" result="Skipped" label="Ignored" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.000547" asserts="0">
            <properties>
              <property name="_SKIPREASON" value="just an example" />
            </properties>
            <reason>
              <message><![CDATA[just an example]]></message>
            </reason>
          </test-case>
          <test-case id="4-1047" name="LINQ" fullname="FSharpx.CSharpTests.AsyncTests.LINQ" methodname="LINQ" classname="FSharpx.CSharpTests.AsyncTests" runstate="Runnable" seed="39388574" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:59Z" duration="1.090546" asserts="1" />
          <test-case id="4-1048" name="Parallel" fullname="FSharpx.CSharpTests.AsyncTests.Parallel" methodname="Parallel" classname="FSharpx.CSharpTests.AsyncTests" runstate="Runnable" seed="217905784" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.133638" asserts="1" />
          <test-case id="4-1049" name="ToAsync" fullname="FSharpx.CSharpTests.AsyncTests.ToAsync" methodname="ToAsync" classname="FSharpx.CSharpTests.AsyncTests" runstate="Runnable" seed="228088681" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.002528" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" id="4-1120" name="ChoiceTests" fullname="FSharpx.CSharpTests.ChoiceTests" classname="FSharpx.CSharpTests.ChoiceTests" runstate="Runnable" testcasecount="16" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.117686" total="16" passed="16" failed="0" inconclusive="0" skipped="0" asserts="15">
          <test-case id="4-1129" name="Cast_Exception" fullname="FSharpx.CSharpTests.ChoiceTests.Cast_Exception" methodname="Cast_Exception" classname="FSharpx.CSharpTests.ChoiceTests" runstate="Runnable" seed="131731789" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.005332" asserts="0" />
          <test-case id="4-1128" name="Cast_OK" fullname="FSharpx.CSharpTests.ChoiceTests.Cast_OK" methodname="Cast_OK" classname="FSharpx.CSharpTests.ChoiceTests" runstate="Runnable" seed="1177530379" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.000657" asserts="1" />
          <test-case id="4-1130" name="ChoiceToOption" fullname="FSharpx.CSharpTests.ChoiceTests.ChoiceToOption" methodname="ChoiceToOption" classname="FSharpx.CSharpTests.ChoiceTests" runstate="Runnable" seed="1386499472" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.008026" asserts="1" />
          <test-case id="4-1121" name="Match" fullname="FSharpx.CSharpTests.ChoiceTests.Match" methodname="Match" classname="FSharpx.CSharpTests.ChoiceTests" runstate="Runnable" seed="1127581538" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.001211" asserts="1" />
          <test-case id="4-1122" name="MatchAction" fullname="FSharpx.CSharpTests.ChoiceTests.MatchAction" methodname="MatchAction" classname="FSharpx.CSharpTests.ChoiceTests" runstate="Runnable" seed="562256982" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.001037" asserts="0">
            <output><![CDATA[1
]]></output>
          </test-case>
          <test-case id="4-1123" name="New" fullname="FSharpx.CSharpTests.ChoiceTests.New" methodname="New" classname="FSharpx.CSharpTests.ChoiceTests" runstate="Runnable" seed="471434958" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.002066" asserts="2" />
          <test-case id="4-1131" name="OptionToChoice" fullname="FSharpx.CSharpTests.ChoiceTests.OptionToChoice" methodname="OptionToChoice" classname="FSharpx.CSharpTests.ChoiceTests" runstate="Runnable" seed="2134582654" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.006622" asserts="1" />
          <test-case id="4-1124" name="Select" fullname="FSharpx.CSharpTests.ChoiceTests.Select" methodname="Select" classname="FSharpx.CSharpTests.ChoiceTests" runstate="Runnable" seed="1089988659" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.002278" asserts="1" />
          <test-case id="4-1125" name="Select2" fullname="FSharpx.CSharpTests.ChoiceTests.Select2" methodname="Select2" classname="FSharpx.CSharpTests.ChoiceTests" runstate="Runnable" seed="2036662376" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.001167" asserts="1" />
          <test-case id="4-1133" name="SelectSecond_Error" fullname="FSharpx.CSharpTests.ChoiceTests.SelectSecond_Error" methodname="SelectSecond_Error" classname="FSharpx.CSharpTests.ChoiceTests" runstate="Runnable" seed="1715257609" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.001885" asserts="1" />
          <test-case id="4-1132" name="SelectSecond_OK" fullname="FSharpx.CSharpTests.ChoiceTests.SelectSecond_OK" methodname="SelectSecond_OK" classname="FSharpx.CSharpTests.ChoiceTests" runstate="Runnable" seed="149768792" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.003216" asserts="1" />
          <test-case id="4-1134" name="Try" fullname="FSharpx.CSharpTests.ChoiceTests.Try" methodname="Try" classname="FSharpx.CSharpTests.ChoiceTests" runstate="Runnable" seed="817081736" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.001595" asserts="0" />
          <test-case id="4-1136" name="Try_as_extension_method_applying_function" fullname="FSharpx.CSharpTests.ChoiceTests.Try_as_extension_method_applying_function" methodname="Try_as_extension_method_applying_function" classname="FSharpx.CSharpTests.ChoiceTests" runstate="Runnable" seed="1189457458" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.003251" asserts="1" />
          <test-case id="4-1135" name="Try_as_extension_method_creating_a_new_function" fullname="FSharpx.CSharpTests.ChoiceTests.Try_as_extension_method_creating_a_new_function" methodname="Try_as_extension_method_creating_a_new_function" classname="FSharpx.CSharpTests.ChoiceTests" runstate="Runnable" seed="1470640353" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.000569" asserts="1" />
          <test-case id="4-1126" name="Validation_Errors" fullname="FSharpx.CSharpTests.ChoiceTests.Validation_Errors" methodname="Validation_Errors" classname="FSharpx.CSharpTests.ChoiceTests" runstate="Runnable" seed="1588514143" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.014140" asserts="1">
            <output><![CDATA[FSharpx.Collections.NonEmptyList`1[System.String]
]]></output>
          </test-case>
          <test-case id="4-1127" name="Validation_OK" fullname="FSharpx.CSharpTests.ChoiceTests.Validation_OK" methodname="Validation_OK" classname="FSharpx.CSharpTests.ChoiceTests" runstate="Runnable" seed="339600057" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.003237" asserts="2" />
        </test-suite>
        <test-suite type="TestFixture" id="4-1078" name="DictionaryTests" fullname="FSharpx.CSharpTests.DictionaryTests" classname="FSharpx.CSharpTests.DictionaryTests" runstate="Runnable" testcasecount="1" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.004522" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="1">
          <test-case id="4-1079" name="TryFind" fullname="FSharpx.CSharpTests.DictionaryTests.TryFind" methodname="TryFind" classname="FSharpx.CSharpTests.DictionaryTests" runstate="Runnable" seed="314596622" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.001913" asserts="1" />
        </test-suite>
        <test-suite type="TestFixture" id="4-1052" name="EnumerableTests" fullname="FSharpx.CSharpTests.EnumerableTests" classname="FSharpx.CSharpTests.EnumerableTests" runstate="Runnable" testcasecount="2" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.009843" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="2">
          <test-case id="4-1053" name="FirstOrNone_None" fullname="FSharpx.CSharpTests.EnumerableTests.FirstOrNone_None" methodname="FirstOrNone_None" classname="FSharpx.CSharpTests.EnumerableTests" runstate="Runnable" seed="454043943" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.000866" asserts="1" />
          <test-case id="4-1054" name="FirstOrNone_Some" fullname="FSharpx.CSharpTests.EnumerableTests.FirstOrNone_Some" methodname="FirstOrNone_Some" classname="FSharpx.CSharpTests.EnumerableTests" runstate="Runnable" seed="820064810" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.000472" asserts="1" />
        </test-suite>
        <test-suite type="TestFixture" id="4-1080" name="FuncTests" fullname="FSharpx.CSharpTests.FuncTests" classname="FSharpx.CSharpTests.FuncTests" runstate="Runnable" testcasecount="6" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.027989" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="5">
          <test-case id="4-1083" name="ActionTuple" fullname="FSharpx.CSharpTests.FuncTests.ActionTuple" methodname="ActionTuple" classname="FSharpx.CSharpTests.FuncTests" runstate="Runnable" seed="1583160318" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.001206" asserts="1" />
          <test-case id="4-1084" name="ActionUntuple" fullname="FSharpx.CSharpTests.FuncTests.ActionUntuple" methodname="ActionUntuple" classname="FSharpx.CSharpTests.FuncTests" runstate="Runnable" seed="800798487" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.001490" asserts="1" />
          <test-case id="4-1086" name="AndThen" fullname="FSharpx.CSharpTests.FuncTests.AndThen" methodname="AndThen" classname="FSharpx.CSharpTests.FuncTests" runstate="Runnable" seed="1052859713" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.001838" asserts="1" />
          <test-case id="4-1085" name="Compose" fullname="FSharpx.CSharpTests.FuncTests.Compose" methodname="Compose" classname="FSharpx.CSharpTests.FuncTests" runstate="Runnable" seed="1610129916" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.001229" asserts="1" />
          <test-case id="4-1081" name="FromAction" fullname="FSharpx.CSharpTests.FuncTests.FromAction" methodname="FromAction" classname="FSharpx.CSharpTests.FuncTests" runstate="Runnable" seed="17894523" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.000826" asserts="1" />
          <test-case id="4-1082" name="FromActionEta" fullname="FSharpx.CSharpTests.FuncTests.FromActionEta" methodname="FromActionEta" classname="FSharpx.CSharpTests.FuncTests" runstate="Runnable" seed="842498275" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.000764" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" id="4-1055" name="LazyTests" fullname="FSharpx.CSharpTests.LazyTests" classname="FSharpx.CSharpTests.LazyTests" runstate="Runnable" testcasecount="2" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.015021" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="3">
          <test-case id="4-1056" name="Create" fullname="FSharpx.CSharpTests.LazyTests.Create" methodname="Create" classname="FSharpx.CSharpTests.LazyTests" runstate="Runnable" seed="976690772" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.005356" asserts="2" />
          <test-case id="4-1057" name="Singleton" fullname="FSharpx.CSharpTests.LazyTests.Singleton" methodname="Singleton" classname="FSharpx.CSharpTests.LazyTests" runstate="Runnable" seed="453609882" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.002258" asserts="1" />
        </test-suite>
        <test-suite type="TestFixture" id="4-1105" name="ListTests" fullname="FSharpx.CSharpTests.ListTests" classname="FSharpx.CSharpTests.ListTests" runstate="Runnable" testcasecount="8" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.036532" total="8" passed="8" failed="0" inconclusive="0" skipped="0" asserts="7">
          <test-case id="4-1109" name="Choose" fullname="FSharpx.CSharpTests.ListTests.Choose" methodname="Choose" classname="FSharpx.CSharpTests.ListTests" runstate="Runnable" seed="1449411369" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.003630" asserts="1" />
          <test-case id="4-1110" name="Cons" fullname="FSharpx.CSharpTests.ListTests.Cons" methodname="Cons" classname="FSharpx.CSharpTests.ListTests" runstate="Runnable" seed="354722285" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.002305" asserts="2" />
          <test-case id="4-1106" name="Match_empty" fullname="FSharpx.CSharpTests.ListTests.Match_empty" methodname="Match_empty" classname="FSharpx.CSharpTests.ListTests" runstate="Runnable" seed="811416497" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.001872" asserts="1" />
          <test-case id="4-1107" name="Match_non_empty" fullname="FSharpx.CSharpTests.ListTests.Match_non_empty" methodname="Match_non_empty" classname="FSharpx.CSharpTests.ListTests" runstate="Runnable" seed="2037559531" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.000969" asserts="1" />
          <test-case id="4-1108" name="NewList" fullname="FSharpx.CSharpTests.ListTests.NewList" methodname="NewList" classname="FSharpx.CSharpTests.ListTests" runstate="Runnable" seed="874824347" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.000353" asserts="1" />
          <test-case id="4-1111" name="ToFSharpList" fullname="FSharpx.CSharpTests.ListTests.ToFSharpList" methodname="ToFSharpList" classname="FSharpx.CSharpTests.ListTests" runstate="Runnable" seed="433503526" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.000351" asserts="1" />
          <test-case id="4-1112" name="TryFind_predicate" fullname="FSharpx.CSharpTests.ListTests.TryFind_predicate" methodname="TryFind_predicate" classname="FSharpx.CSharpTests.ListTests" runstate="Runnable" seed="484410282" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.001931" asserts="0" />
          <test-case id="4-1113" name="TryFind_value" fullname="FSharpx.CSharpTests.ListTests.TryFind_value" methodname="TryFind_value" classname="FSharpx.CSharpTests.ListTests" runstate="Runnable" seed="345110763" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.000912" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" id="4-1114" name="MapTests" fullname="FSharpx.CSharpTests.MapTests" classname="FSharpx.CSharpTests.MapTests" runstate="Runnable" testcasecount="2" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.031008" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="2">
          <test-case id="4-1115" name="New" fullname="FSharpx.CSharpTests.MapTests.New" methodname="New" classname="FSharpx.CSharpTests.MapTests" runstate="Runnable" seed="972344539" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.022085" asserts="1" />
          <test-case id="4-1116" name="TryFind" fullname="FSharpx.CSharpTests.MapTests.TryFind" methodname="TryFind" classname="FSharpx.CSharpTests.MapTests" runstate="Runnable" seed="325803688" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.001933" asserts="1" />
        </test-suite>
        <test-suite type="TestFixture" id="4-1087" name="NameValueCollectionTests" fullname="FSharpx.CSharpTests.NameValueCollectionTests" classname="FSharpx.CSharpTests.NameValueCollectionTests" runstate="Runnable" testcasecount="5" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:23:00Z" duration="0.070658" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="15">
          <test-case id="4-1091" name="AsDictionary" fullname="FSharpx.CSharpTests.NameValueCollectionTests.AsDictionary" methodname="AsDictionary" classname="FSharpx.CSharpTests.NameValueCollectionTests" runstate="Runnable" seed="60543983" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.029084" asserts="2" />
          <test-case id="4-1092" name="AsLookup" fullname="FSharpx.CSharpTests.NameValueCollectionTests.AsLookup" methodname="AsLookup" classname="FSharpx.CSharpTests.NameValueCollectionTests" runstate="Runnable" seed="2066133959" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.003335" asserts="5" />
          <test-case id="4-1088" name="Concat" fullname="FSharpx.CSharpTests.NameValueCollectionTests.Concat" methodname="Concat" classname="FSharpx.CSharpTests.NameValueCollectionTests" runstate="Runnable" seed="44605087" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001064" asserts="3" />
          <test-case id="4-1089" name="ToEnumerable" fullname="FSharpx.CSharpTests.NameValueCollectionTests.ToEnumerable" methodname="ToEnumerable" classname="FSharpx.CSharpTests.NameValueCollectionTests" runstate="Runnable" seed="2001150126" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.013736" asserts="2" />
          <test-case id="4-1090" name="ToLookup" fullname="FSharpx.CSharpTests.NameValueCollectionTests.ToLookup" methodname="ToLookup" classname="FSharpx.CSharpTests.NameValueCollectionTests" runstate="Runnable" seed="476806921" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.005321" asserts="3" />
        </test-suite>
        <test-suite type="TestFixture" id="4-1058" name="NonEmptyListTests" fullname="FSharpx.CSharpTests.NonEmptyListTests" classname="FSharpx.CSharpTests.NonEmptyListTests" runstate="Runnable" testcasecount="12" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.058000" total="12" passed="12" failed="0" inconclusive="0" skipped="0" asserts="15">
          <test-case id="4-1064" name="Concat_FSharpList" fullname="FSharpx.CSharpTests.NonEmptyListTests.Concat_FSharpList" methodname="Concat_FSharpList" classname="FSharpx.CSharpTests.NonEmptyListTests" runstate="Runnable" seed="957436520" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.002420" asserts="1" />
          <test-case id="4-1066" name="Concat_FSharpList_extension" fullname="FSharpx.CSharpTests.NonEmptyListTests.Concat_FSharpList_extension" methodname="Concat_FSharpList_extension" classname="FSharpx.CSharpTests.NonEmptyListTests" runstate="Runnable" seed="1600097766" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001130" asserts="1" />
          <test-case id="4-1065" name="Concat_NonEmptyList" fullname="FSharpx.CSharpTests.NonEmptyListTests.Concat_NonEmptyList" methodname="Concat_NonEmptyList" classname="FSharpx.CSharpTests.NonEmptyListTests" runstate="Runnable" seed="1580201827" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000673" asserts="1" />
          <test-case id="4-1067" name="Concat_NonEmptyList_extension" fullname="FSharpx.CSharpTests.NonEmptyListTests.Concat_NonEmptyList_extension" methodname="Concat_NonEmptyList_extension" classname="FSharpx.CSharpTests.NonEmptyListTests" runstate="Runnable" seed="779715974" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000775" asserts="1" />
          <test-case id="4-1068" name="Cons" fullname="FSharpx.CSharpTests.NonEmptyListTests.Cons" methodname="Cons" classname="FSharpx.CSharpTests.NonEmptyListTests" runstate="Runnable" seed="1478873314" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000882" asserts="1" />
          <test-case id="4-1059" name="Create" fullname="FSharpx.CSharpTests.NonEmptyListTests.Create" methodname="Create" classname="FSharpx.CSharpTests.NonEmptyListTests" runstate="Runnable" seed="1950387195" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.002526" asserts="2" />
          <test-case id="4-1061" name="HeadTail" fullname="FSharpx.CSharpTests.NonEmptyListTests.HeadTail" methodname="HeadTail" classname="FSharpx.CSharpTests.NonEmptyListTests" runstate="Runnable" seed="1556324100" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000941" asserts="2" />
          <test-case id="4-1069" name="Reverse" fullname="FSharpx.CSharpTests.NonEmptyListTests.Reverse" methodname="Reverse" classname="FSharpx.CSharpTests.NonEmptyListTests" runstate="Runnable" seed="622256745" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000921" asserts="1" />
          <test-case id="4-1070" name="Select" fullname="FSharpx.CSharpTests.NonEmptyListTests.Select" methodname="Select" classname="FSharpx.CSharpTests.NonEmptyListTests" runstate="Runnable" seed="1613515892" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.004542" asserts="2" />
          <test-case id="4-1060" name="Singleton" fullname="FSharpx.CSharpTests.NonEmptyListTests.Singleton" methodname="Singleton" classname="FSharpx.CSharpTests.NonEmptyListTests" runstate="Runnable" seed="441947673" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000397" asserts="1" />
          <test-case id="4-1063" name="ToArray" fullname="FSharpx.CSharpTests.NonEmptyListTests.ToArray" methodname="ToArray" classname="FSharpx.CSharpTests.NonEmptyListTests" runstate="Runnable" seed="1144940177" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001459" asserts="1" />
          <test-case id="4-1062" name="ToFSharpList" fullname="FSharpx.CSharpTests.NonEmptyListTests.ToFSharpList" methodname="ToFSharpList" classname="FSharpx.CSharpTests.NonEmptyListTests" runstate="Runnable" seed="2097340034" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000561" asserts="1" />
        </test-suite>
        <test-suite type="TestFixture" id="4-1117" name="SetTests" fullname="FSharpx.CSharpTests.SetTests" classname="FSharpx.CSharpTests.SetTests" runstate="Runnable" testcasecount="2" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.016001" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="2">
          <test-case id="4-1118" name="Create" fullname="FSharpx.CSharpTests.SetTests.Create" methodname="Create" classname="FSharpx.CSharpTests.SetTests" runstate="Runnable" seed="1841170826" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.008302" asserts="1" />
          <test-case id="4-1119" name="ToFSharpSet" fullname="FSharpx.CSharpTests.SetTests.ToFSharpSet" methodname="ToFSharpSet" classname="FSharpx.CSharpTests.SetTests" runstate="Runnable" seed="1627005128" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001914" asserts="1" />
        </test-suite>
        <test-suite type="TestFixture" id="4-1071" name="StringsTests" fullname="FSharpx.CSharpTests.StringsTests" classname="FSharpx.CSharpTests.StringsTests" runstate="Runnable" testcasecount="6" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.024151" total="6" passed="6" failed="0" inconclusive="0" skipped="0" asserts="10">
          <test-case id="4-1072" name="WhenDetectingIfStringStartsWithHelloAndItDoes" fullname="FSharpx.CSharpTests.StringsTests.WhenDetectingIfStringStartsWithHelloAndItDoes" methodname="WhenDetectingIfStringStartsWithHelloAndItDoes" classname="FSharpx.CSharpTests.StringsTests" runstate="Runnable" seed="169711390" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001312" asserts="1" />
          <test-case id="4-1073" name="WhenDetectingIfStringStartsWithHelloAndItDoesnt" fullname="FSharpx.CSharpTests.StringsTests.WhenDetectingIfStringStartsWithHelloAndItDoesnt" methodname="WhenDetectingIfStringStartsWithHelloAndItDoesnt" classname="FSharpx.CSharpTests.StringsTests" runstate="Runnable" seed="756151202" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000645" asserts="1" />
          <test-case id="4-1074" name="WhenReplacingSimplePatternInStringWhichContainsThePattern" fullname="FSharpx.CSharpTests.StringsTests.WhenReplacingSimplePatternInStringWhichContainsThePattern" methodname="WhenReplacingSimplePatternInStringWhichContainsThePattern" classname="FSharpx.CSharpTests.StringsTests" runstate="Runnable" seed="90186726" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000448" asserts="1" />
          <test-case id="4-1075" name="WhenReplacingSimplePatternInStringWhichDoesntContainThePattern" fullname="FSharpx.CSharpTests.StringsTests.WhenReplacingSimplePatternInStringWhichDoesntContainThePattern" methodname="WhenReplacingSimplePatternInStringWhichDoesntContainThePattern" classname="FSharpx.CSharpTests.StringsTests" runstate="Runnable" seed="571722375" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000171" asserts="1" />
          <test-case id="4-1076" name="WhenSplittingAStringWithEmptyGroup" fullname="FSharpx.CSharpTests.StringsTests.WhenSplittingAStringWithEmptyGroup" methodname="WhenSplittingAStringWithEmptyGroup" classname="FSharpx.CSharpTests.StringsTests" runstate="Runnable" seed="2120251725" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000619" asserts="3" />
          <test-case id="4-1077" name="WhenSplittingAStringWithQuestionMark" fullname="FSharpx.CSharpTests.StringsTests.WhenSplittingAStringWithQuestionMark" methodname="WhenSplittingAStringWithQuestionMark" classname="FSharpx.CSharpTests.StringsTests" runstate="Runnable" seed="867665645" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000264" asserts="3" />
        </test-suite>
        <test-suite type="TestSuite" id="4-1150" name="ValidationExample" fullname="FSharpx.CSharpTests.ValidationExample" runstate="Runnable" testcasecount="3" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:23:00Z" duration="1.853037" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="8">
          <test-suite type="TestFixture" id="4-1137" name="Test1" fullname="FSharpx.CSharpTests.ValidationExample.Test1" classname="FSharpx.CSharpTests.ValidationExample.Test1" runstate="Runnable" testcasecount="1" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.025070" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="5">
            <test-case id="4-1138" name="Part1" fullname="FSharpx.CSharpTests.ValidationExample.Test1.Part1" methodname="Part1" classname="FSharpx.CSharpTests.ValidationExample.Test1" runstate="Runnable" seed="121907581" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.021041" asserts="5" />
          </test-suite>
          <test-suite type="TestFixture" id="4-1139" name="Test2" fullname="FSharpx.CSharpTests.ValidationExample.Test2" classname="FSharpx.CSharpTests.ValidationExample.Test2" runstate="Runnable" testcasecount="1" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.013989" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="2">
            <test-case id="4-1140" name="Part2" fullname="FSharpx.CSharpTests.ValidationExample.Test2.Part2" methodname="Part2" classname="FSharpx.CSharpTests.ValidationExample.Test2" runstate="Runnable" seed="43493055" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.010470" asserts="2" />
          </test-suite>
          <test-suite type="TestFixture" id="4-1141" name="Test3" fullname="FSharpx.CSharpTests.ValidationExample.Test3" classname="FSharpx.CSharpTests.ValidationExample.Test3" runstate="Runnable" testcasecount="1" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.016531" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="1">
            <test-case id="4-1142" name="Part3" fullname="FSharpx.CSharpTests.ValidationExample.Test3.Part3" methodname="Part3" classname="FSharpx.CSharpTests.ValidationExample.Test3" runstate="Runnable" seed="1015273721" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.013077" asserts="1" />
          </test-suite>
        </test-suite>
        <test-suite type="TestFixture" id="4-1093" name="ValidationTests" fullname="FSharpx.CSharpTests.ValidationTests" classname="FSharpx.CSharpTests.ValidationTests" runstate="Runnable" testcasecount="11" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.062193" total="11" passed="11" failed="0" inconclusive="0" skipped="0" asserts="2">
          <test-case id="4-1103" name="AddressWithLine1AndLine2" fullname="FSharpx.CSharpTests.ValidationTests.AddressWithLine1AndLine2" methodname="AddressWithLine1AndLine2" classname="FSharpx.CSharpTests.ValidationTests" runstate="Runnable" seed="1516820951" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.002806" asserts="0" />
          <test-case id="4-1102" name="AddressWithLine1AndNoLine2" fullname="FSharpx.CSharpTests.ValidationTests.AddressWithLine1AndNoLine2" methodname="AddressWithLine1AndNoLine2" classname="FSharpx.CSharpTests.ValidationTests" runstate="Runnable" seed="1156399627" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000678" asserts="0" />
          <test-case id="4-1104" name="AddressWithLine2AndNoLine1" fullname="FSharpx.CSharpTests.ValidationTests.AddressWithLine2AndNoLine1" methodname="AddressWithLine2AndNoLine1" classname="FSharpx.CSharpTests.ValidationTests" runstate="Runnable" seed="1426954241" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000884" asserts="2" />
          <test-case id="4-1101" name="AddressWithoutLine1" fullname="FSharpx.CSharpTests.ValidationTests.AddressWithoutLine1" methodname="AddressWithoutLine1" classname="FSharpx.CSharpTests.ValidationTests" runstate="Runnable" seed="339384665" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000566" asserts="0" />
          <test-case id="4-1096" name="Test1_either" fullname="FSharpx.CSharpTests.ValidationTests.Test1_either" methodname="Test1_either" classname="FSharpx.CSharpTests.ValidationTests" runstate="Runnable" seed="1679711184" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000616" asserts="0">
            <output><![CDATA[Error: Invalid User ID
]]></output>
          </test-case>
          <test-case id="4-1094" name="Test1_Imperative" fullname="FSharpx.CSharpTests.ValidationTests.Test1_Imperative" methodname="Test1_Imperative" classname="FSharpx.CSharpTests.ValidationTests" runstate="Runnable" seed="296015261" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000261" asserts="0">
            <output><![CDATA[Error: Invalid User ID
]]></output>
          </test-case>
          <test-case id="4-1095" name="Test1_option" fullname="FSharpx.CSharpTests.ValidationTests.Test1_option" methodname="Test1_option" classname="FSharpx.CSharpTests.ValidationTests" runstate="Runnable" seed="264062252" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000290" asserts="0">
            <output><![CDATA[Error: Invalid User ID
]]></output>
          </test-case>
          <test-case id="4-1098" name="Test2_either" fullname="FSharpx.CSharpTests.ValidationTests.Test2_either" methodname="Test2_either" classname="FSharpx.CSharpTests.ValidationTests" runstate="Runnable" seed="17686102" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.003547" asserts="0">
            <output><![CDATA[Error: Invalid User ID
Error: Invalid ID
]]></output>
          </test-case>
          <test-case id="4-1099" name="Test2_either_LINQ" fullname="FSharpx.CSharpTests.ValidationTests.Test2_either_LINQ" methodname="Test2_either_LINQ" classname="FSharpx.CSharpTests.ValidationTests" runstate="Runnable" seed="2112070258" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.002108" asserts="0">
            <output><![CDATA[Error: Invalid User ID
Error: Invalid ID
]]></output>
          </test-case>
          <test-case id="4-1097" name="Test2_imperative" fullname="FSharpx.CSharpTests.ValidationTests.Test2_imperative" methodname="Test2_imperative" classname="FSharpx.CSharpTests.ValidationTests" runstate="Runnable" seed="1078536147" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000541" asserts="0">
            <output><![CDATA[Error: Invalid user ID
Error: Invalid ID
]]></output>
          </test-case>
          <test-case id="4-1100" name="Test3" fullname="FSharpx.CSharpTests.ValidationTests.Test3" methodname="Test3" classname="FSharpx.CSharpTests.ValidationTests" runstate="Runnable" seed="322687762" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.011168" asserts="0">
            <output><![CDATA[FSharpx.Collections.NonEmptyList`1[System.String]
]]></output>
          </test-case>
        </test-suite>
      </test-suite>
      <test-suite type="TestSuite" id="4-1145" name="Functional" fullname="FSharpx.Functional" runstate="Runnable" testcasecount="41" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:23:00Z" duration="2.106710" total="41" passed="41" failed="0" inconclusive="0" skipped="0" asserts="41">
        <test-suite type="TestSuite" id="4-1146" name="CSharpTests" fullname="FSharpx.Functional.CSharpTests" runstate="Runnable" testcasecount="41" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:23:00Z" duration="2.102700" total="41" passed="41" failed="0" inconclusive="0" skipped="0" asserts="41">
          <test-suite type="TestFixture" id="4-1000" name="OptionTests" fullname="FSharpx.Functional.CSharpTests.OptionTests" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" testcasecount="41" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.180677" total="41" passed="41" failed="0" inconclusive="0" skipped="0" asserts="41">
            <test-case id="4-1026" name="CastInt" fullname="FSharpx.Functional.CSharpTests.OptionTests.CastInt" methodname="CastInt" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="367989418" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000798" asserts="1" />
            <test-case id="4-1027" name="CastInt_null" fullname="FSharpx.Functional.CSharpTests.OptionTests.CastInt_null" methodname="CastInt_null" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="1957580891" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000414" asserts="1" />
            <test-case id="4-1028" name="DBNull_is_None" fullname="FSharpx.Functional.CSharpTests.OptionTests.DBNull_is_None" methodname="DBNull_is_None" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="1927263896" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000744" asserts="1" />
            <test-case id="4-1020" name="Do" fullname="FSharpx.Functional.CSharpTests.OptionTests.Do" methodname="Do" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="2051060892" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000993" asserts="1" />
            <test-case id="4-1021" name="Dont" fullname="FSharpx.Functional.CSharpTests.OptionTests.Dont" methodname="Dont" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="395327996" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000287" asserts="0" />
            <test-case id="4-1004" name="FromNullable_WithoutValue" fullname="FSharpx.Functional.CSharpTests.OptionTests.FromNullable_WithoutValue" methodname="FromNullable_WithoutValue" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="496850699" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000670" asserts="1" />
            <test-case id="4-1003" name="FromNullable_WithValue" fullname="FSharpx.Functional.CSharpTests.OptionTests.FromNullable_WithValue" methodname="FromNullable_WithValue" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="1781412104" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000452" asserts="1" />
            <test-case id="4-1034" name="GetOrDefault_ReferenceType" fullname="FSharpx.Functional.CSharpTests.OptionTests.GetOrDefault_ReferenceType" methodname="GetOrDefault_ReferenceType" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="1365618060" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000566" asserts="1" />
            <test-case id="4-1035" name="GetOrDefault_ValueType" fullname="FSharpx.Functional.CSharpTests.OptionTests.GetOrDefault_ValueType" methodname="GetOrDefault_ValueType" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="102023009" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000541" asserts="1" />
            <test-case id="4-1033" name="GetOrDefault_WithValue" fullname="FSharpx.Functional.CSharpTests.OptionTests.GetOrDefault_WithValue" methodname="GetOrDefault_WithValue" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="785828032" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000302" asserts="1" />
            <test-case id="4-1031" name="GetOrElse" fullname="FSharpx.Functional.CSharpTests.OptionTests.GetOrElse" methodname="GetOrElse" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="2071607898" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000377" asserts="1" />
            <test-case id="4-1032" name="GetOrElse_function" fullname="FSharpx.Functional.CSharpTests.OptionTests.GetOrElse_function" methodname="GetOrElse_function" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="1048112081" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001149" asserts="1" />
            <test-case id="4-1001" name="HasValue" fullname="FSharpx.Functional.CSharpTests.OptionTests.HasValue" methodname="HasValue" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="1940825851" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000302" asserts="1" />
            <test-case id="4-1011" name="LINQ_Aggregate" fullname="FSharpx.Functional.CSharpTests.OptionTests.LINQ_Aggregate" methodname="LINQ_Aggregate" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="322954977" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001508" asserts="1" />
            <test-case id="4-1012" name="LINQ_Aggregate_None" fullname="FSharpx.Functional.CSharpTests.OptionTests.LINQ_Aggregate_None" methodname="LINQ_Aggregate_None" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="58683057" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000424" asserts="1" />
            <test-case id="4-1007" name="LINQ_Select" fullname="FSharpx.Functional.CSharpTests.OptionTests.LINQ_Select" methodname="LINQ_Select" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="411727350" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001392" asserts="1" />
            <test-case id="4-1008" name="LINQ_SelectMany" fullname="FSharpx.Functional.CSharpTests.OptionTests.LINQ_SelectMany" methodname="LINQ_SelectMany" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="379260171" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001906" asserts="1" />
            <test-case id="4-1009" name="LINQ_SelectMany2" fullname="FSharpx.Functional.CSharpTests.OptionTests.LINQ_SelectMany2" methodname="LINQ_SelectMany2" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="282187654" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000778" asserts="1" />
            <test-case id="4-1010" name="LINQ_SelectMany2_with_none" fullname="FSharpx.Functional.CSharpTests.OptionTests.LINQ_SelectMany2_with_none" methodname="LINQ_SelectMany2_with_none" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="1518539948" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000810" asserts="1" />
            <test-case id="4-1013" name="LINQ_Where" fullname="FSharpx.Functional.CSharpTests.OptionTests.LINQ_Where" methodname="LINQ_Where" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="733014650" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001018" asserts="1" />
            <test-case id="4-1014" name="LINQ_Where2" fullname="FSharpx.Functional.CSharpTests.OptionTests.LINQ_Where2" methodname="LINQ_Where2" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="2012367109" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000464" asserts="1" />
            <test-case id="4-1015" name="LINQ_Where3" fullname="FSharpx.Functional.CSharpTests.OptionTests.LINQ_Where3" methodname="LINQ_Where3" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="192559058" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000364" asserts="1" />
            <test-case id="4-1019" name="Match_Action" fullname="FSharpx.Functional.CSharpTests.OptionTests.Match_Action" methodname="Match_Action" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="206543345" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000555" asserts="0">
              <output><![CDATA[5
]]></output>
            </test-case>
            <test-case id="4-1017" name="Match_None" fullname="FSharpx.Functional.CSharpTests.OptionTests.Match_None" methodname="Match_None" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="751526908" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000659" asserts="1" />
            <test-case id="4-1016" name="Match_Some" fullname="FSharpx.Functional.CSharpTests.OptionTests.Match_Some" methodname="Match_Some" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="1907018391" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000671" asserts="1" />
            <test-case id="4-1018" name="Match_Value" fullname="FSharpx.Functional.CSharpTests.OptionTests.Match_Value" methodname="Match_Value" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="1637058357" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000859" asserts="1" />
            <test-case id="4-1002" name="NotHasValue" fullname="FSharpx.Functional.CSharpTests.OptionTests.NotHasValue" methodname="NotHasValue" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="1598201450" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000249" asserts="1" />
            <test-case id="4-1029" name="OrElse" fullname="FSharpx.Functional.CSharpTests.OptionTests.OrElse" methodname="OrElse" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="1688787633" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000512" asserts="1" />
            <test-case id="4-1030" name="OrElse_None" fullname="FSharpx.Functional.CSharpTests.OptionTests.OrElse_None" methodname="OrElse_None" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="1466210157" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000467" asserts="1" />
            <test-case id="4-1037" name="Sequence_None" fullname="FSharpx.Functional.CSharpTests.OptionTests.Sequence_None" methodname="Sequence_None" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="1752801632" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.005197" asserts="1" />
            <test-case id="4-1036" name="Sequence_Some" fullname="FSharpx.Functional.CSharpTests.OptionTests.Sequence_Some" methodname="Sequence_Some" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="1885687095" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001929" asserts="1" />
            <test-case id="4-1005" name="Some" fullname="FSharpx.Functional.CSharpTests.OptionTests.Some" methodname="Some" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="1270891418" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000448" asserts="1" />
            <test-case id="4-1006" name="SomeExtensionMethod" fullname="FSharpx.Functional.CSharpTests.OptionTests.SomeExtensionMethod" methodname="SomeExtensionMethod" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="705718452" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000456" asserts="1" />
            <test-case id="4-1040" name="ToArray_None" fullname="FSharpx.Functional.CSharpTests.OptionTests.ToArray_None" methodname="ToArray_None" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="327563979" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000785" asserts="1" />
            <test-case id="4-1041" name="ToArray_Some" fullname="FSharpx.Functional.CSharpTests.OptionTests.ToArray_Some" methodname="ToArray_Some" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="1495477034" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000480" asserts="2" />
            <test-case id="4-1038" name="ToFSharpList_None" fullname="FSharpx.Functional.CSharpTests.OptionTests.ToFSharpList_None" methodname="ToFSharpList_None" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="12804365" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000579" asserts="1" />
            <test-case id="4-1039" name="ToFSharpList_Some" fullname="FSharpx.Functional.CSharpTests.OptionTests.ToFSharpList_Some" methodname="ToFSharpList_Some" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="1756459159" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001273" asserts="2" />
            <test-case id="4-1023" name="TryParseDec" fullname="FSharpx.Functional.CSharpTests.OptionTests.TryParseDec" methodname="TryParseDec" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="1648881541" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.002711" asserts="1" />
            <test-case id="4-1024" name="TryParseDouble" fullname="FSharpx.Functional.CSharpTests.OptionTests.TryParseDouble" methodname="TryParseDouble" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="1044751149" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001729" asserts="1" />
            <test-case id="4-1025" name="TryParseFloat" fullname="FSharpx.Functional.CSharpTests.OptionTests.TryParseFloat" methodname="TryParseFloat" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="2050257184" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001518" asserts="1" />
            <test-case id="4-1022" name="TryParseInt" fullname="FSharpx.Functional.CSharpTests.OptionTests.TryParseInt" methodname="TryParseInt" classname="FSharpx.Functional.CSharpTests.OptionTests" runstate="Runnable" seed="545078582" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000390" asserts="1" />
          </test-suite>
        </test-suite>
      </test-suite>
      <test-suite type="TestSuite" id="4-1147" name="IO" fullname="FSharpx.IO" runstate="Runnable" testcasecount="1" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:23:00Z" duration="2.114689" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="1">
        <test-suite type="TestSuite" id="4-1148" name="CSharpTests" fullname="FSharpx.IO.CSharpTests" runstate="Runnable" testcasecount="1" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:23:00Z" duration="2.110678" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="1">
          <test-suite type="TestFixture" id="4-1042" name="IOTests" fullname="FSharpx.IO.CSharpTests.IOTests" classname="FSharpx.IO.CSharpTests.IOTests" runstate="Runnable" testcasecount="1" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.004033" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="1">
            <test-case id="4-1043" name="WhenConvertingTextToWindowsLineBreaks" fullname="FSharpx.IO.CSharpTests.IOTests.WhenConvertingTextToWindowsLineBreaks" methodname="WhenConvertingTextToWindowsLineBreaks" classname="FSharpx.IO.CSharpTests.IOTests" runstate="Runnable" seed="719043675" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000294" asserts="1" />
          </test-suite>
        </test-suite>
      </test-suite>
    </test-suite>
  </test-suite>
  <test-suite type="Assembly" id="5-1794" name="FSharpx.Tests.dll" fullname="D:\code\FSharpx.Extras\tests\FSharpx.Tests\bin\Release\FSharpx.Tests.dll" runstate="Runnable" testcasecount="717" result="Skipped" label="Ignored" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:23:17Z" duration="18.970837" total="717" passed="715" failed="0" inconclusive="0" skipped="2" asserts="1605">
    <environment framework-version="3.4.1.0" clr-version="4.0.30319.42000" os-version="Microsoft Windows NT 10.0.10586.0" platform="Win32NT" cwd="D:\code\FSharpx.Extras" machine-name="GOODEWIND" user="Steffen" user-domain="GOODEWIND" culture="de-DE" uiculture="de-DE" os-architecture="x64" />
    <settings>
      <setting name="DefaultTimeout" value="1200000" />
      <setting name="WorkDirectory" value="D:\code\FSharpx.Extras" />
      <setting name="ImageRuntimeVersion" value="4.0.30319" />
      <setting name="ImageTargetFrameworkName" value=".NETFramework,Version=v4.5" />
      <setting name="ImageRequiresX86" value="False" />
      <setting name="ImageRequiresDefaultAppDomainAssemblyResolver" value="False" />
      <setting name="NumberOfTestWorkers" value="8" />
    </settings>
    <properties>
      <property name="_PID" value="21784" />
      <property name="_APPDOMAIN" value="test-domain-FSharpx.Tests.dll" />
    </properties>
    <reason>
      <message><![CDATA[One or more child tests were ignored]]></message>
    </reason>
    <test-suite type="TestSuite" id="5-1799" name="FSharp" fullname="FSharp" runstate="Runnable" testcasecount="1" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.070700" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="1">
      <test-suite type="TestSuite" id="5-1800" name="Monad" fullname="FSharp.Monad" runstate="Runnable" testcasecount="1" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.066535" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="1">
        <test-suite type="TestSuite" id="5-1801" name="Operators" fullname="FSharp.Monad.Operators" runstate="Runnable" testcasecount="1" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.063008" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="1">
          <test-suite type="TestSuite" id="5-1802" name="Tests" fullname="FSharp.Monad.Operators.Tests" runstate="Runnable" testcasecount="1" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.059489" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="1">
            <test-suite type="TestFixture" id="5-1758" name="OperatorsTest" fullname="FSharp.Monad.Operators.Tests.OperatorsTest" classname="FSharp.Monad.Operators.Tests.OperatorsTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.047057" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="1">
              <test-suite type="GenericMethod" id="5-1760" name="test generic operators correctly map a list to maybe results" fullname="FSharp.Monad.Operators.Tests.OperatorsTest.test generic operators correctly map a list to maybe results" classname="FSharp.Monad.Operators.Tests.OperatorsTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.041938" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="1">
                <test-case id="5-1759" name="test generic operators correctly map a list to maybe results&lt;FSharpOption`1&gt;([2; 4; 6],Some([1; 2; 3]))" fullname="FSharp.Monad.Operators.Tests.OperatorsTest.test generic operators correctly map a list to maybe results&lt;FSharpOption`1&gt;([2; 4; 6],Some([1; 2; 3]))" methodname="test generic operators correctly map a list to maybe results" classname="FSharp.Monad.Operators.Tests.OperatorsTest" runstate="Runnable" seed="1971404555" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.030628" asserts="1" />
              </test-suite>
            </test-suite>
          </test-suite>
        </test-suite>
      </test-suite>
    </test-suite>
    <test-suite type="TestSuite" id="5-1795" name="FSharpx" fullname="FSharpx" runstate="Runnable" testcasecount="716" result="Skipped" label="Ignored" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:23:17Z" duration="18.942456" total="716" passed="714" failed="0" inconclusive="0" skipped="2" asserts="1604">
      <reason>
        <message><![CDATA[One or more child tests were ignored]]></message>
      </reason>
      <test-suite type="TestSuite" id="5-1797" name="Http" fullname="FSharpx.Http" runstate="Runnable" testcasecount="32" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.276216" total="32" passed="32" failed="0" inconclusive="0" skipped="0" asserts="27">
        <test-suite type="TestSuite" id="5-1798" name="Tests" fullname="FSharpx.Http.Tests" runstate="Runnable" testcasecount="32" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.272191" total="32" passed="32" failed="0" inconclusive="0" skipped="0" asserts="27">
          <test-suite type="TestFixture" id="5-1036" name="ConnegTests" fullname="FSharpx.Http.Tests.ConnegTests" classname="FSharpx.Http.Tests.ConnegTests" runstate="Runnable" testcasecount="29" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.192530" total="29" passed="29" failed="0" inconclusive="0" skipped="0" asserts="24">
            <test-case id="5-1042" name="Active pattern with wildcard" fullname="FSharpx.Http.Tests.ConnegTests.Active pattern with wildcard" methodname="Active pattern with wildcard" classname="FSharpx.Http.Tests.ConnegTests" runstate="Runnable" seed="672325740" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.003679" asserts="1" />
            <test-case id="5-1063" name="match encoding empty" fullname="FSharpx.Http.Tests.ConnegTests.match encoding empty" methodname="match encoding empty" classname="FSharpx.Http.Tests.ConnegTests" runstate="Runnable" seed="1273618982" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.005392" asserts="1" />
            <test-case id="5-1065" name="match encoding identity 0" fullname="FSharpx.Http.Tests.ConnegTests.match encoding identity 0" methodname="match encoding identity 0" classname="FSharpx.Http.Tests.ConnegTests" runstate="Runnable" seed="1974254601" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.050928" asserts="1" />
            <test-case id="5-1064" name="match encoding implicit identity" fullname="FSharpx.Http.Tests.ConnegTests.match encoding implicit identity" methodname="match encoding implicit identity" classname="FSharpx.Http.Tests.ConnegTests" runstate="Runnable" seed="1446422702" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.000752" asserts="1" />
            <test-case id="5-1052" name="match language exact" fullname="FSharpx.Http.Tests.ConnegTests.match language exact" methodname="match language exact" classname="FSharpx.Http.Tests.ConnegTests" runstate="Runnable" seed="762653743" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.008844" asserts="1" />
            <test-case id="5-1051" name="match language with client wildcard" fullname="FSharpx.Http.Tests.ConnegTests.match language with client wildcard" methodname="match language with client wildcard" classname="FSharpx.Http.Tests.ConnegTests" runstate="Runnable" seed="1011424590" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.000268" asserts="1" />
            <test-case id="5-1050" name="match language with server wildcard" fullname="FSharpx.Http.Tests.ConnegTests.match language with server wildcard" methodname="match language with server wildcard" classname="FSharpx.Http.Tests.ConnegTests" runstate="Runnable" seed="1337895670" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.000236" asserts="1" />
            <test-case id="5-1054" name="match server more specific than client" fullname="FSharpx.Http.Tests.ConnegTests.match server more specific than client" methodname="match server more specific than client" classname="FSharpx.Http.Tests.ConnegTests" runstate="Runnable" seed="1398220266" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.000254" asserts="1" />
            <test-case id="5-1055" name="match server more specific than client2" fullname="FSharpx.Http.Tests.ConnegTests.match server more specific than client2" methodname="match server more specific than client2" classname="FSharpx.Http.Tests.ConnegTests" runstate="Runnable" seed="1545988599" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.000244" asserts="1" />
            <test-case id="5-1047" name="matchMediaType match any in client" fullname="FSharpx.Http.Tests.ConnegTests.matchMediaType match any in client" methodname="matchMediaType match any in client" classname="FSharpx.Http.Tests.ConnegTests" runstate="Runnable" seed="177048403" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.000424" asserts="1" />
            <test-case id="5-1046" name="matchMediaType match any in server" fullname="FSharpx.Http.Tests.ConnegTests.matchMediaType match any in server" methodname="matchMediaType match any in server" classname="FSharpx.Http.Tests.ConnegTests" runstate="Runnable" seed="1422030385" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.000269" asserts="1" />
            <test-case id="5-1045" name="matchMediaType match exact" fullname="FSharpx.Http.Tests.ConnegTests.matchMediaType match exact" methodname="matchMediaType match exact" classname="FSharpx.Http.Tests.ConnegTests" runstate="Runnable" seed="529603971" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.000249" asserts="1" />
            <test-case id="5-1044" name="matchMediaType match wildcard in client" fullname="FSharpx.Http.Tests.ConnegTests.matchMediaType match wildcard in client" methodname="matchMediaType match wildcard in client" classname="FSharpx.Http.Tests.ConnegTests" runstate="Runnable" seed="716861957" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.000283" asserts="1" />
            <test-case id="5-1043" name="matchMediaType match wildcard in server" fullname="FSharpx.Http.Tests.ConnegTests.matchMediaType match wildcard in server" methodname="matchMediaType match wildcard in server" classname="FSharpx.Http.Tests.ConnegTests" runstate="Runnable" seed="1123800887" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.000271" asserts="1" />
            <test-case id="5-1041" name="Media type active pattern" fullname="FSharpx.Http.Tests.ConnegTests.Media type active pattern" methodname="Media type active pattern" classname="FSharpx.Http.Tests.ConnegTests" runstate="Runnable" seed="1905435704" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.003319" asserts="0" />
            <test-case id="5-1040" name="Media type matching" fullname="FSharpx.Http.Tests.ConnegTests.Media type matching" methodname="Media type matching" classname="FSharpx.Http.Tests.ConnegTests" runstate="Runnable" seed="434863428" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.000783" asserts="0" />
            <test-case id="5-1062" name="Negotiate charset with empty accept" fullname="FSharpx.Http.Tests.ConnegTests.Negotiate charset with empty accept" methodname="Negotiate charset with empty accept" classname="FSharpx.Http.Tests.ConnegTests" runstate="Runnable" seed="723349276" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.000853" asserts="1" />
            <test-case id="5-1061" name="Negotiate charset with explicit iso-8859-1 and wildcard with q" fullname="FSharpx.Http.Tests.ConnegTests.Negotiate charset with explicit iso-8859-1 and wildcard with q" methodname="Negotiate charset with explicit iso-8859-1 and wildcard with q" classname="FSharpx.Http.Tests.ConnegTests" runstate="Runnable" seed="115513950" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.000911" asserts="1" />
            <test-case id="5-1058" name="Negotiate charset with implicit iso-8859-1" fullname="FSharpx.Http.Tests.ConnegTests.Negotiate charset with implicit iso-8859-1" methodname="Negotiate charset with implicit iso-8859-1" classname="FSharpx.Http.Tests.ConnegTests" runstate="Runnable" seed="30768590" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.003471" asserts="1" />
            <test-case id="5-1059" name="Negotiate charset with implicit iso-8859-1 in wildcard with q" fullname="FSharpx.Http.Tests.ConnegTests.Negotiate charset with implicit iso-8859-1 in wildcard with q" methodname="Negotiate charset with implicit iso-8859-1 in wildcard with q" classname="FSharpx.Http.Tests.ConnegTests" runstate="Runnable" seed="1276532959" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.000865" asserts="1" />
            <test-case id="5-1060" name="Negotiate charset with implicit iso-8859-1 in wildcard with q=0" fullname="FSharpx.Http.Tests.ConnegTests.Negotiate charset with implicit iso-8859-1 in wildcard with q=0" methodname="Negotiate charset with implicit iso-8859-1 in wildcard with q=0" classname="FSharpx.Http.Tests.ConnegTests" runstate="Runnable" seed="2125576602" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.001118" asserts="1" />
            <test-case id="5-1057" name="Negotiate languages" fullname="FSharpx.Http.Tests.ConnegTests.Negotiate languages" methodname="Negotiate languages" classname="FSharpx.Http.Tests.ConnegTests" runstate="Runnable" seed="943684470" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.002640" asserts="1" />
            <test-case id="5-1048" name="Negotiate media type" fullname="FSharpx.Http.Tests.ConnegTests.Negotiate media type" methodname="Negotiate media type" classname="FSharpx.Http.Tests.ConnegTests" runstate="Runnable" seed="598531108" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.001746" asserts="1" />
            <test-case id="5-1049" name="Negotiate media type 2" fullname="FSharpx.Http.Tests.ConnegTests.Negotiate media type 2" methodname="Negotiate media type 2" classname="FSharpx.Http.Tests.ConnegTests" runstate="Runnable" seed="315686348" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.000977" asserts="1" />
            <test-case id="5-1053" name="no language match" fullname="FSharpx.Http.Tests.ConnegTests.no language match" methodname="no language match" classname="FSharpx.Http.Tests.ConnegTests" runstate="Runnable" seed="1396781747" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.000204" asserts="1" />
            <test-case id="5-1056" name="no match client more specific than server" fullname="FSharpx.Http.Tests.ConnegTests.no match client more specific than server" methodname="no match client more specific than server" classname="FSharpx.Http.Tests.ConnegTests" runstate="Runnable" seed="414822212" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.000179" asserts="1" />
            <test-case id="5-1038" name="Parse Accept" fullname="FSharpx.Http.Tests.ConnegTests.Parse Accept" methodname="Parse Accept" classname="FSharpx.Http.Tests.ConnegTests" runstate="Runnable" seed="1117890069" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.000649" asserts="0" />
            <test-case id="5-1039" name="Parse Accept with implicit precedence" fullname="FSharpx.Http.Tests.ConnegTests.Parse Accept with implicit precedence" methodname="Parse Accept with implicit precedence" classname="FSharpx.Http.Tests.ConnegTests" runstate="Runnable" seed="434509283" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.000958" asserts="0" />
            <test-case id="5-1037" name="Parse AcceptLanguage" fullname="FSharpx.Http.Tests.ConnegTests.Parse AcceptLanguage" methodname="Parse AcceptLanguage" classname="FSharpx.Http.Tests.ConnegTests" runstate="Runnable" seed="1167201359" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.001019" asserts="0" />
          </test-suite>
          <test-suite type="TestFixture" id="5-1032" name="EnumTests" fullname="FSharpx.Http.Tests.EnumTests" classname="FSharpx.Http.Tests.EnumTests" runstate="Runnable" testcasecount="3" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.012993" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="3">
            <test-case id="5-1035" name="parse returns parsed value" fullname="FSharpx.Http.Tests.EnumTests.parse returns parsed value" methodname="parse returns parsed value" classname="FSharpx.Http.Tests.EnumTests" runstate="Runnable" seed="67059189" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.000353" asserts="1" />
            <test-case id="5-1033" name="tryParse can parse value and return Some value" fullname="FSharpx.Http.Tests.EnumTests.tryParse can parse value and return Some value" methodname="tryParse can parse value and return Some value" classname="FSharpx.Http.Tests.EnumTests" runstate="Runnable" seed="1413700968" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.001729" asserts="1" />
            <test-case id="5-1034" name="tryParse returns None if it fails to parse" fullname="FSharpx.Http.Tests.EnumTests.tryParse returns None if it fails to parse" methodname="tryParse returns None if it fails to parse" classname="FSharpx.Http.Tests.EnumTests" runstate="Runnable" seed="1517411756" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.000218" asserts="1" />
          </test-suite>
        </test-suite>
      </test-suite>
      <test-suite type="TestFixture" id="5-1112" name="LensTests" fullname="FSharpx.LensTests" classname="FSharpx.LensTests" runstate="Runnable" testcasecount="17" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:59Z" duration="0.692311" total="17" passed="17" failed="0" inconclusive="0" skipped="0" asserts="26">
        <test-case id="5-1126" name="LensChoice" fullname="FSharpx.LensTests.LensChoice" methodname="LensChoice" classname="FSharpx.LensTests" runstate="Runnable" seed="1413728428" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:58Z" duration="0.301410" asserts="0">
          <output><![CDATA[choice: GetSet-Ok, passed 100 tests.

choice: SetGet-Ok, passed 100 tests.

choice: SetSet-Ok, passed 100 tests.

]]></output>
        </test-case>
        <test-case id="5-1125" name="LensCodiag" fullname="FSharpx.LensTests.LensCodiag" methodname="LensCodiag" classname="FSharpx.LensTests" runstate="Runnable" seed="44663864" result="Passed" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:22:59Z" duration="0.054583" asserts="0">
          <output><![CDATA[codiag: GetSet-Ok, passed 100 tests.

codiag: SetGet-Ok, passed 100 tests.

codiag: SetSet-Ok, passed 100 tests.

]]></output>
        </test-case>
        <test-case id="5-1128" name="LensCond" fullname="FSharpx.LensTests.LensCond" methodname="LensCond" classname="FSharpx.LensTests" runstate="Runnable" seed="1326622506" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.063510" asserts="0">
          <output><![CDATA[cond: GetSet-Ok, passed 100 tests.

cond: SetGet-Ok, passed 100 tests.

cond: SetSet-Ok, passed 100 tests.

]]></output>
        </test-case>
        <test-case id="5-1121" name="LensFst" fullname="FSharpx.LensTests.LensFst" methodname="LensFst" classname="FSharpx.LensTests" runstate="Runnable" seed="42835792" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.022275" asserts="0">
          <output><![CDATA[fst: GetSet-Ok, passed 100 tests.

fst: SetGet-Ok, passed 100 tests.

fst: SetSet-Ok, passed 100 tests.

]]></output>
        </test-case>
        <test-case id="5-1123" name="LensFstSnd" fullname="FSharpx.LensTests.LensFstSnd" methodname="LensFstSnd" classname="FSharpx.LensTests" runstate="Runnable" seed="1637552896" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.017837" asserts="0">
          <output><![CDATA[fst composed with snd: GetSet-Ok, passed 100 tests.

fst composed with snd: SetGet-Ok, passed 100 tests.

fst composed with snd: SetSet-Ok, passed 100 tests.

]]></output>
        </test-case>
        <test-case id="5-1120" name="LensId" fullname="FSharpx.LensTests.LensId" methodname="LensId" classname="FSharpx.LensTests" runstate="Runnable" seed="677736502" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.004121" asserts="0">
          <output><![CDATA[Id: GetSet-Ok, passed 100 tests.

Id: SetGet-Ok, passed 100 tests.

Id: SetSet-Ok, passed 100 tests.

]]></output>
        </test-case>
        <test-case id="5-1124" name="LensIgnore" fullname="FSharpx.LensTests.LensIgnore" methodname="LensIgnore" classname="FSharpx.LensTests" runstate="Runnable" seed="1559628012" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.009321" asserts="0">
          <output><![CDATA[ignore: GetSet-Ok, passed 100 tests.

ignore: SetGet-Ok, passed 100 tests.

ignore: SetSet-Ok, passed 100 tests.

]]></output>
        </test-case>
        <test-case id="5-1129" name="LensListMap" fullname="FSharpx.LensTests.LensListMap" methodname="LensListMap" classname="FSharpx.LensTests" runstate="Runnable" seed="1742526606" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.100165" asserts="0">
          <output><![CDATA[list map getset-Ok, passed 100 tests.

list map setget-Ok, passed 100 tests.

list map setset-Ok, passed 100 tests.

]]></output>
        </test-case>
        <test-case id="5-1127" name="LensProduct" fullname="FSharpx.LensTests.LensProduct" methodname="LensProduct" classname="FSharpx.LensTests" runstate="Runnable" seed="874622738" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.027691" asserts="0">
          <output><![CDATA[product: GetSet-Ok, passed 100 tests.

product: SetGet-Ok, passed 100 tests.

product: SetSet-Ok, passed 100 tests.

]]></output>
        </test-case>
        <test-case id="5-1122" name="LensSnd" fullname="FSharpx.LensTests.LensSnd" methodname="LensSnd" classname="FSharpx.LensTests" runstate="Runnable" seed="1878832074" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.011389" asserts="0">
          <output><![CDATA[snd: GetSet-Ok, passed 100 tests.

snd: SetGet-Ok, passed 100 tests.

snd: SetSet-Ok, passed 100 tests.

]]></output>
        </test-case>
        <test-case id="5-1115" name="pluseq" fullname="FSharpx.LensTests.pluseq" methodname="pluseq" classname="FSharpx.LensTests" runstate="Runnable" seed="1974640354" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.002069" asserts="2" />
        <test-case id="5-1116" name="setValueOperator" fullname="FSharpx.LensTests.setValueOperator" methodname="setValueOperator" classname="FSharpx.LensTests" runstate="Runnable" seed="104606934" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.000398" asserts="1" />
        <test-case id="5-1117" name="stateMonad" fullname="FSharpx.LensTests.stateMonad" methodname="stateMonad" classname="FSharpx.LensTests" runstate="Runnable" seed="751351980" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.008417" asserts="2" />
        <test-case id="5-1118" name="stateMonadOperators" fullname="FSharpx.LensTests.stateMonadOperators" methodname="stateMonadOperators" classname="FSharpx.LensTests" runstate="Runnable" seed="1256416463" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.001628" asserts="1" />
        <test-case id="5-1119" name="stateMonadOperators2" fullname="FSharpx.LensTests.stateMonadOperators2" methodname="stateMonadOperators2" classname="FSharpx.LensTests" runstate="Runnable" seed="1759678559" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.003218" asserts="2">
          <output><![CDATA[Tom used to make 4000, after promotion he now makes 5000
]]></output>
        </test-case>
        <test-case id="5-1113" name="update" fullname="FSharpx.LensTests.update" methodname="update" classname="FSharpx.LensTests" runstate="Runnable" seed="1598780955" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.000701" asserts="2" />
        <test-case id="5-1114" name="updateCompose" fullname="FSharpx.LensTests.updateCompose" methodname="updateCompose" classname="FSharpx.LensTests" runstate="Runnable" seed="307624879" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.003118" asserts="16" />
      </test-suite>
      <test-suite type="TestSuite" id="5-1796" name="Tests" fullname="FSharpx.Tests" runstate="Runnable" testcasecount="667" result="Skipped" label="Ignored" start-time="2016-08-22 10:22:58Z" end-time="2016-08-22 10:23:17Z" duration="18.934445" total="667" passed="665" failed="0" inconclusive="0" skipped="2" asserts="1551">
        <reason>
          <message><![CDATA[One or more child tests were ignored]]></message>
        </reason>
        <test-suite type="TestFixture" id="5-1747" name="AsyncOperatorsTest" fullname="FSharpx.Tests.AsyncOperatorsTest" classname="FSharpx.Tests.AsyncOperatorsTest" runstate="Runnable" testcasecount="10" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.078788" total="10" passed="10" failed="0" inconclusive="0" skipped="0" asserts="10">
          <test-case id="5-1755" name="test *&gt; takes only the value from the second Async" fullname="FSharpx.Tests.AsyncOperatorsTest.test *&gt; takes only the value from the second Async" methodname="test *&gt; takes only the value from the second Async" classname="FSharpx.Tests.AsyncOperatorsTest" runstate="Runnable" seed="1308992102" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.024219" asserts="1" />
          <test-case id="5-1756" name="test &lt;!&gt; and &lt;*&gt; should enable zip" fullname="FSharpx.Tests.AsyncOperatorsTest.test &lt;!&gt; and &lt;*&gt; should enable zip" methodname="test &lt;!&gt; and &lt;*&gt; should enable zip" classname="FSharpx.Tests.AsyncOperatorsTest" runstate="Runnable" seed="1109220619" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.006709" asserts="1" />
          <test-case id="5-1751" name="test &lt;!&gt; should map an Async&lt;'a&gt; to an Async&lt;'b&gt;" fullname="FSharpx.Tests.AsyncOperatorsTest.test &lt;!&gt; should map an Async&lt;'a&gt; to an Async&lt;'b&gt;" methodname="test &lt;!&gt; should map an Async&lt;'a&gt; to an Async&lt;'b&gt;" classname="FSharpx.Tests.AsyncOperatorsTest" runstate="Runnable" seed="1925796631" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.001092" asserts="1" />
          <test-case id="5-1754" name="test &lt;* takes only the value from the first Async" fullname="FSharpx.Tests.AsyncOperatorsTest.test &lt;* takes only the value from the first Async" methodname="test &lt;* takes only the value from the first Async" classname="FSharpx.Tests.AsyncOperatorsTest" runstate="Runnable" seed="111829820" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.001502" asserts="1" />
          <test-case id="5-1749" name="test &lt;*&gt; should apply an Async&lt;'a -&gt; 'b&gt; to an Async&lt;'a&gt;" fullname="FSharpx.Tests.AsyncOperatorsTest.test &lt;*&gt; should apply an Async&lt;'a -&gt; 'b&gt; to an Async&lt;'a&gt;" methodname="test &lt;*&gt; should apply an Async&lt;'a -&gt; 'b&gt; to an Async&lt;'a&gt;" classname="FSharpx.Tests.AsyncOperatorsTest" runstate="Runnable" seed="1707638988" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.001300" asserts="1" />
          <test-case id="5-1757" name="test &gt;&gt;. should apply both arguments and return the result of the last" fullname="FSharpx.Tests.AsyncOperatorsTest.test &gt;&gt;. should apply both arguments and return the result of the last" methodname="test &gt;&gt;. should apply both arguments and return the result of the last" classname="FSharpx.Tests.AsyncOperatorsTest" runstate="Runnable" seed="355168521" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.000948" asserts="1" />
          <test-case id="5-1748" name="test &gt;&gt;= should bind an async" fullname="FSharpx.Tests.AsyncOperatorsTest.test &gt;&gt;= should bind an async" methodname="test &gt;&gt;= should bind an async" classname="FSharpx.Tests.AsyncOperatorsTest" runstate="Runnable" seed="1169029790" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.002302" asserts="1" />
          <test-case id="5-1750" name="test pipe should map an Async&lt;'a&gt; to an Async&lt;'b&gt;" fullname="FSharpx.Tests.AsyncOperatorsTest.test pipe should map an Async&lt;'a&gt; to an Async&lt;'b&gt;" methodname="test pipe should map an Async&lt;'a&gt; to an Async&lt;'b&gt;" classname="FSharpx.Tests.AsyncOperatorsTest" runstate="Runnable" seed="86776715" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.000757" asserts="1" />
          <test-case id="5-1752" name="test pipe2 should map an Async&lt;'a&gt; and Async&lt;'b&gt; to an Async&lt;'c&gt;" fullname="FSharpx.Tests.AsyncOperatorsTest.test pipe2 should map an Async&lt;'a&gt; and Async&lt;'b&gt; to an Async&lt;'c&gt;" methodname="test pipe2 should map an Async&lt;'a&gt; and Async&lt;'b&gt; to an Async&lt;'c&gt;" classname="FSharpx.Tests.AsyncOperatorsTest" runstate="Runnable" seed="564218841" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.001775" asserts="1" />
          <test-case id="5-1753" name="test pipe3 should map an Async&lt;'a&gt;, Async&lt;'b&gt;, and Async&lt;'c&gt; to an Async&lt;'d&gt;" fullname="FSharpx.Tests.AsyncOperatorsTest.test pipe3 should map an Async&lt;'a&gt;, Async&lt;'b&gt;, and Async&lt;'c&gt; to an Async&lt;'d&gt;" methodname="test pipe3 should map an Async&lt;'a&gt;, Async&lt;'b&gt;, and Async&lt;'c&gt; to an Async&lt;'d&gt;" classname="FSharpx.Tests.AsyncOperatorsTest" runstate="Runnable" seed="549827195" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.004070" asserts="1" />
        </test-suite>
        <test-suite type="TestFixture" id="5-1019" name="AsyncStreamReaderTest" fullname="FSharpx.Tests.AsyncStreamReaderTest" classname="FSharpx.Tests.AsyncStreamReaderTest" runstate="Runnable" testcasecount="12" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:23:00Z" duration="0.721702" total="12" passed="12" failed="0" inconclusive="0" skipped="0" asserts="660">
          <test-case id="5-1026" name="ReadLine on empty file" fullname="FSharpx.Tests.AsyncStreamReaderTest.ReadLine on empty file" methodname="ReadLine on empty file" classname="FSharpx.Tests.AsyncStreamReaderTest" runstate="Runnable" seed="59630257" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.077213" asserts="0" />
          <test-case id="5-1028" name="ReadLine with end not on end of line" fullname="FSharpx.Tests.AsyncStreamReaderTest.ReadLine with end not on end of line" methodname="ReadLine with end not on end of line" classname="FSharpx.Tests.AsyncStreamReaderTest" runstate="Runnable" seed="75673068" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.008890" asserts="0" />
          <test-case id="5-1027" name="ReadLine with end on end of line" fullname="FSharpx.Tests.AsyncStreamReaderTest.ReadLine with end on end of line" methodname="ReadLine with end on end of line" classname="FSharpx.Tests.AsyncStreamReaderTest" runstate="Runnable" seed="1245331726" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.002775" asserts="0" />
          <test-case id="5-1030" name="ReadLine with EOL mark breaking at end-of-buffer" fullname="FSharpx.Tests.AsyncStreamReaderTest.ReadLine with EOL mark breaking at end-of-buffer" methodname="ReadLine with EOL mark breaking at end-of-buffer" classname="FSharpx.Tests.AsyncStreamReaderTest" runstate="Runnable" seed="278895430" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.017824" asserts="0" />
          <test-case id="5-1031" name="ReadLine with EOL mark ending at end-of-buffer" fullname="FSharpx.Tests.AsyncStreamReaderTest.ReadLine with EOL mark ending at end-of-buffer" methodname="ReadLine with EOL mark ending at end-of-buffer" classname="FSharpx.Tests.AsyncStreamReaderTest" runstate="Runnable" seed="1672629027" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.016147" asserts="0" />
          <test-case id="5-1029" name="ReadLine with EOL mark starting at end-of-buffer" fullname="FSharpx.Tests.AsyncStreamReaderTest.ReadLine with EOL mark starting at end-of-buffer" methodname="ReadLine with EOL mark starting at end-of-buffer" classname="FSharpx.Tests.AsyncStreamReaderTest" runstate="Runnable" seed="1195672791" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.015542" asserts="0" />
          <test-case id="5-1020" name="ReadToEnd, Read and ReadExactly on empty stream" fullname="FSharpx.Tests.AsyncStreamReaderTest.ReadToEnd, Read and ReadExactly on empty stream" methodname="ReadToEnd, Read and ReadExactly on empty stream" classname="FSharpx.Tests.AsyncStreamReaderTest" runstate="Runnable" seed="1124592829" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.026916" asserts="120" />
          <test-case id="5-1022" name="ReadToEnd, Read and ReadExactly on multiple of buffer size" fullname="FSharpx.Tests.AsyncStreamReaderTest.ReadToEnd, Read and ReadExactly on multiple of buffer size" methodname="ReadToEnd, Read and ReadExactly on multiple of buffer size" classname="FSharpx.Tests.AsyncStreamReaderTest" runstate="Runnable" seed="706476409" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.122252" asserts="120" />
          <test-case id="5-1023" name="ReadToEnd, Read and ReadExactly on non-multiple of buffer size" fullname="FSharpx.Tests.AsyncStreamReaderTest.ReadToEnd, Read and ReadExactly on non-multiple of buffer size" methodname="ReadToEnd, Read and ReadExactly on non-multiple of buffer size" classname="FSharpx.Tests.AsyncStreamReaderTest" runstate="Runnable" seed="1911204405" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.106498" asserts="120" />
          <test-case id="5-1024" name="ReadToEnd, Read and ReadExactly on Russian chars" fullname="FSharpx.Tests.AsyncStreamReaderTest.ReadToEnd, Read and ReadExactly on Russian chars" methodname="ReadToEnd, Read and ReadExactly on Russian chars" classname="FSharpx.Tests.AsyncStreamReaderTest" runstate="Runnable" seed="1778456762" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.015621" asserts="100" />
          <test-case id="5-1021" name="ReadToEnd, Read and ReadExactly on short stream" fullname="FSharpx.Tests.AsyncStreamReaderTest.ReadToEnd, Read and ReadExactly on short stream" methodname="ReadToEnd, Read and ReadExactly on short stream" classname="FSharpx.Tests.AsyncStreamReaderTest" runstate="Runnable" seed="1501181664" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:22:59Z" duration="0.010765" asserts="120" />
          <test-case id="5-1025" name="ReadToEnd, Read and ReadExactly with surrogate codepoints" fullname="FSharpx.Tests.AsyncStreamReaderTest.ReadToEnd, Read and ReadExactly with surrogate codepoints" methodname="ReadToEnd, Read and ReadExactly with surrogate codepoints" classname="FSharpx.Tests.AsyncStreamReaderTest" runstate="Runnable" seed="1403278122" result="Passed" start-time="2016-08-22 10:22:59Z" end-time="2016-08-22 10:23:00Z" duration="0.257115" asserts="80" />
        </test-suite>
        <test-suite type="TestFixture" id="5-1171" name="BinaryIterateeTest" fullname="FSharpx.Tests.BinaryIterateeTest" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" testcasecount="241" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:01Z" duration="1.157412" total="241" passed="241" failed="0" inconclusive="0" skipped="0" asserts="241">
          <test-suite type="ParameterizedMethod" id="5-1365" name="test consume should consume all items" fullname="FSharpx.Tests.BinaryIterateeTest.test consume should consume all items" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" testcasecount="10" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.051008" total="10" passed="10" failed="0" inconclusive="0" skipped="0" asserts="10">
            <properties>
              <property name="_JOINTYPE" value="Sequential" />
            </properties>
            <test-case id="5-1355" name="test consume should consume all items(byte.MinValue)" fullname="FSharpx.Tests.BinaryIterateeTest.test consume should consume all items(byte.MinValue)" methodname="test consume should consume all items" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="576558600" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.009962" asserts="1" />
            <test-case id="5-1356" name="test consume should consume all items(1)" fullname="FSharpx.Tests.BinaryIterateeTest.test consume should consume all items(1)" methodname="test consume should consume all items" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1619797250" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000771" asserts="1" />
            <test-case id="5-1357" name="test consume should consume all items(2)" fullname="FSharpx.Tests.BinaryIterateeTest.test consume should consume all items(2)" methodname="test consume should consume all items" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1905046097" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000080" asserts="1" />
            <test-case id="5-1358" name="test consume should consume all items(3)" fullname="FSharpx.Tests.BinaryIterateeTest.test consume should consume all items(3)" methodname="test consume should consume all items" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="676973905" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000075" asserts="1" />
            <test-case id="5-1359" name="test consume should consume all items(4)" fullname="FSharpx.Tests.BinaryIterateeTest.test consume should consume all items(4)" methodname="test consume should consume all items" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="887692041" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000110" asserts="1" />
            <test-case id="5-1360" name="test consume should consume all items(5)" fullname="FSharpx.Tests.BinaryIterateeTest.test consume should consume all items(5)" methodname="test consume should consume all items" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1986326301" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000084" asserts="1" />
            <test-case id="5-1361" name="test consume should consume all items(6)" fullname="FSharpx.Tests.BinaryIterateeTest.test consume should consume all items(6)" methodname="test consume should consume all items" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="334345092" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000111" asserts="1" />
            <test-case id="5-1362" name="test consume should consume all items(7)" fullname="FSharpx.Tests.BinaryIterateeTest.test consume should consume all items(7)" methodname="test consume should consume all items" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1920389653" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000088" asserts="1" />
            <test-case id="5-1363" name="test consume should consume all items(8)" fullname="FSharpx.Tests.BinaryIterateeTest.test consume should consume all items(8)" methodname="test consume should consume all items" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="2124443848" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000134" asserts="1" />
            <test-case id="5-1364" name="test consume should consume all items(9)" fullname="FSharpx.Tests.BinaryIterateeTest.test consume should consume all items(9)" methodname="test consume should consume all items" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="851535849" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000077" asserts="1" />
          </test-suite>
          <test-suite type="ParameterizedMethod" id="5-1376" name="test consume should consume all items at once" fullname="FSharpx.Tests.BinaryIterateeTest.test consume should consume all items at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" testcasecount="10" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.039238" total="10" passed="10" failed="0" inconclusive="0" skipped="0" asserts="10">
            <properties>
              <property name="_JOINTYPE" value="Sequential" />
            </properties>
            <test-case id="5-1366" name="test consume should consume all items at once(byte.MinValue)" fullname="FSharpx.Tests.BinaryIterateeTest.test consume should consume all items at once(byte.MinValue)" methodname="test consume should consume all items at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="205464264" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001165" asserts="1" />
            <test-case id="5-1367" name="test consume should consume all items at once(1)" fullname="FSharpx.Tests.BinaryIterateeTest.test consume should consume all items at once(1)" methodname="test consume should consume all items at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="814281019" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000099" asserts="1" />
            <test-case id="5-1368" name="test consume should consume all items at once(2)" fullname="FSharpx.Tests.BinaryIterateeTest.test consume should consume all items at once(2)" methodname="test consume should consume all items at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1861516018" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000077" asserts="1" />
            <test-case id="5-1369" name="test consume should consume all items at once(3)" fullname="FSharpx.Tests.BinaryIterateeTest.test consume should consume all items at once(3)" methodname="test consume should consume all items at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="2038549562" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000069" asserts="1" />
            <test-case id="5-1370" name="test consume should consume all items at once(4)" fullname="FSharpx.Tests.BinaryIterateeTest.test consume should consume all items at once(4)" methodname="test consume should consume all items at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1887678797" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000072" asserts="1" />
            <test-case id="5-1371" name="test consume should consume all items at once(5)" fullname="FSharpx.Tests.BinaryIterateeTest.test consume should consume all items at once(5)" methodname="test consume should consume all items at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="671653360" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000066" asserts="1" />
            <test-case id="5-1372" name="test consume should consume all items at once(6)" fullname="FSharpx.Tests.BinaryIterateeTest.test consume should consume all items at once(6)" methodname="test consume should consume all items at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="508697446" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000074" asserts="1" />
            <test-case id="5-1373" name="test consume should consume all items at once(7)" fullname="FSharpx.Tests.BinaryIterateeTest.test consume should consume all items at once(7)" methodname="test consume should consume all items at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="654949374" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000069" asserts="1" />
            <test-case id="5-1374" name="test consume should consume all items at once(8)" fullname="FSharpx.Tests.BinaryIterateeTest.test consume should consume all items at once(8)" methodname="test consume should consume all items at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="277637157" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000089" asserts="1" />
            <test-case id="5-1375" name="test consume should consume all items at once(9)" fullname="FSharpx.Tests.BinaryIterateeTest.test consume should consume all items at once(9)" methodname="test consume should consume all items at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1413549357" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000079" asserts="1" />
          </test-suite>
          <test-suite type="ParameterizedMethod" id="5-1387" name="test consume should consume all items when enumerating in chunks" fullname="FSharpx.Tests.BinaryIterateeTest.test consume should consume all items when enumerating in chunks" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" testcasecount="10" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.043003" total="10" passed="10" failed="0" inconclusive="0" skipped="0" asserts="10">
            <properties>
              <property name="_JOINTYPE" value="Sequential" />
            </properties>
            <test-case id="5-1377" name="test consume should consume all items when enumerating in chunks(byte.MinValue)" fullname="FSharpx.Tests.BinaryIterateeTest.test consume should consume all items when enumerating in chunks(byte.MinValue)" methodname="test consume should consume all items when enumerating in chunks" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1758394930" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.002293" asserts="1" />
            <test-case id="5-1378" name="test consume should consume all items when enumerating in chunks(1)" fullname="FSharpx.Tests.BinaryIterateeTest.test consume should consume all items when enumerating in chunks(1)" methodname="test consume should consume all items when enumerating in chunks" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="775384562" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000098" asserts="1" />
            <test-case id="5-1379" name="test consume should consume all items when enumerating in chunks(2)" fullname="FSharpx.Tests.BinaryIterateeTest.test consume should consume all items when enumerating in chunks(2)" methodname="test consume should consume all items when enumerating in chunks" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1060370323" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000164" asserts="1" />
            <test-case id="5-1380" name="test consume should consume all items when enumerating in chunks(3)" fullname="FSharpx.Tests.BinaryIterateeTest.test consume should consume all items when enumerating in chunks(3)" methodname="test consume should consume all items when enumerating in chunks" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1200046253" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000107" asserts="1" />
            <test-case id="5-1381" name="test consume should consume all items when enumerating in chunks(4)" fullname="FSharpx.Tests.BinaryIterateeTest.test consume should consume all items when enumerating in chunks(4)" methodname="test consume should consume all items when enumerating in chunks" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1774045051" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000092" asserts="1" />
            <test-case id="5-1382" name="test consume should consume all items when enumerating in chunks(5)" fullname="FSharpx.Tests.BinaryIterateeTest.test consume should consume all items when enumerating in chunks(5)" methodname="test consume should consume all items when enumerating in chunks" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1511493475" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000101" asserts="1" />
            <test-case id="5-1383" name="test consume should consume all items when enumerating in chunks(6)" fullname="FSharpx.Tests.BinaryIterateeTest.test consume should consume all items when enumerating in chunks(6)" methodname="test consume should consume all items when enumerating in chunks" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1704007334" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000108" asserts="1" />
            <test-case id="5-1384" name="test consume should consume all items when enumerating in chunks(7)" fullname="FSharpx.Tests.BinaryIterateeTest.test consume should consume all items when enumerating in chunks(7)" methodname="test consume should consume all items when enumerating in chunks" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1828378119" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000094" asserts="1" />
            <test-case id="5-1385" name="test consume should consume all items when enumerating in chunks(8)" fullname="FSharpx.Tests.BinaryIterateeTest.test consume should consume all items when enumerating in chunks(8)" methodname="test consume should consume all items when enumerating in chunks" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="23830589" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000095" asserts="1" />
            <test-case id="5-1386" name="test consume should consume all items when enumerating in chunks(9)" fullname="FSharpx.Tests.BinaryIterateeTest.test consume should consume all items when enumerating in chunks(9)" methodname="test consume should consume all items when enumerating in chunks" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1987134081" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000148" asserts="1" />
          </test-suite>
          <test-suite type="ParameterizedMethod" id="5-1209" name="test drop should drop the first n items" fullname="FSharpx.Tests.BinaryIterateeTest.test drop should drop the first n items" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" testcasecount="10" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.043542" total="10" passed="10" failed="0" inconclusive="0" skipped="0" asserts="10">
            <properties>
              <property name="_JOINTYPE" value="Sequential" />
            </properties>
            <test-case id="5-1199" name="test drop should drop the first n items(0)" fullname="FSharpx.Tests.BinaryIterateeTest.test drop should drop the first n items(0)" methodname="test drop should drop the first n items" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="149395166" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.004820" asserts="1" />
            <test-case id="5-1200" name="test drop should drop the first n items(1)" fullname="FSharpx.Tests.BinaryIterateeTest.test drop should drop the first n items(1)" methodname="test drop should drop the first n items" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="69010871" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.002528" asserts="1" />
            <test-case id="5-1201" name="test drop should drop the first n items(2)" fullname="FSharpx.Tests.BinaryIterateeTest.test drop should drop the first n items(2)" methodname="test drop should drop the first n items" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="329585056" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000401" asserts="1" />
            <test-case id="5-1202" name="test drop should drop the first n items(3)" fullname="FSharpx.Tests.BinaryIterateeTest.test drop should drop the first n items(3)" methodname="test drop should drop the first n items" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1743210329" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000081" asserts="1" />
            <test-case id="5-1203" name="test drop should drop the first n items(4)" fullname="FSharpx.Tests.BinaryIterateeTest.test drop should drop the first n items(4)" methodname="test drop should drop the first n items" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="723516281" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000078" asserts="1" />
            <test-case id="5-1204" name="test drop should drop the first n items(5)" fullname="FSharpx.Tests.BinaryIterateeTest.test drop should drop the first n items(5)" methodname="test drop should drop the first n items" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="663159844" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000065" asserts="1" />
            <test-case id="5-1205" name="test drop should drop the first n items(6)" fullname="FSharpx.Tests.BinaryIterateeTest.test drop should drop the first n items(6)" methodname="test drop should drop the first n items" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1284356617" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000078" asserts="1" />
            <test-case id="5-1206" name="test drop should drop the first n items(7)" fullname="FSharpx.Tests.BinaryIterateeTest.test drop should drop the first n items(7)" methodname="test drop should drop the first n items" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1332336898" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000120" asserts="1" />
            <test-case id="5-1207" name="test drop should drop the first n items(8)" fullname="FSharpx.Tests.BinaryIterateeTest.test drop should drop the first n items(8)" methodname="test drop should drop the first n items" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="285136771" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000111" asserts="1" />
            <test-case id="5-1208" name="test drop should drop the first n items(9)" fullname="FSharpx.Tests.BinaryIterateeTest.test drop should drop the first n items(9)" methodname="test drop should drop the first n items" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="2030544885" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000064" asserts="1" />
          </test-suite>
          <test-suite type="ParameterizedMethod" id="5-1220" name="test drop should drop the first n items at once" fullname="FSharpx.Tests.BinaryIterateeTest.test drop should drop the first n items at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" testcasecount="10" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.042016" total="10" passed="10" failed="0" inconclusive="0" skipped="0" asserts="10">
            <properties>
              <property name="_JOINTYPE" value="Sequential" />
            </properties>
            <test-case id="5-1210" name="test drop should drop the first n items at once(0)" fullname="FSharpx.Tests.BinaryIterateeTest.test drop should drop the first n items at once(0)" methodname="test drop should drop the first n items at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="104971227" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001417" asserts="1" />
            <test-case id="5-1211" name="test drop should drop the first n items at once(1)" fullname="FSharpx.Tests.BinaryIterateeTest.test drop should drop the first n items at once(1)" methodname="test drop should drop the first n items at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="751040077" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000104" asserts="1" />
            <test-case id="5-1212" name="test drop should drop the first n items at once(2)" fullname="FSharpx.Tests.BinaryIterateeTest.test drop should drop the first n items at once(2)" methodname="test drop should drop the first n items at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="235756433" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000123" asserts="1" />
            <test-case id="5-1213" name="test drop should drop the first n items at once(3)" fullname="FSharpx.Tests.BinaryIterateeTest.test drop should drop the first n items at once(3)" methodname="test drop should drop the first n items at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1334327285" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000112" asserts="1" />
            <test-case id="5-1214" name="test drop should drop the first n items at once(4)" fullname="FSharpx.Tests.BinaryIterateeTest.test drop should drop the first n items at once(4)" methodname="test drop should drop the first n items at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="718443667" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000122" asserts="1" />
            <test-case id="5-1215" name="test drop should drop the first n items at once(5)" fullname="FSharpx.Tests.BinaryIterateeTest.test drop should drop the first n items at once(5)" methodname="test drop should drop the first n items at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1447013972" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000066" asserts="1" />
            <test-case id="5-1216" name="test drop should drop the first n items at once(6)" fullname="FSharpx.Tests.BinaryIterateeTest.test drop should drop the first n items at once(6)" methodname="test drop should drop the first n items at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1240781000" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000088" asserts="1" />
            <test-case id="5-1217" name="test drop should drop the first n items at once(7)" fullname="FSharpx.Tests.BinaryIterateeTest.test drop should drop the first n items at once(7)" methodname="test drop should drop the first n items at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1768280520" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000068" asserts="1" />
            <test-case id="5-1218" name="test drop should drop the first n items at once(8)" fullname="FSharpx.Tests.BinaryIterateeTest.test drop should drop the first n items at once(8)" methodname="test drop should drop the first n items at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1506596663" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000123" asserts="1" />
            <test-case id="5-1219" name="test drop should drop the first n items at once(9)" fullname="FSharpx.Tests.BinaryIterateeTest.test drop should drop the first n items at once(9)" methodname="test drop should drop the first n items at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="520454560" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000068" asserts="1" />
          </test-suite>
          <test-suite type="ParameterizedMethod" id="5-1231" name="test drop should drop the first n items when enumerating in chunks" fullname="FSharpx.Tests.BinaryIterateeTest.test drop should drop the first n items when enumerating in chunks" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" testcasecount="10" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.038013" total="10" passed="10" failed="0" inconclusive="0" skipped="0" asserts="10">
            <properties>
              <property name="_JOINTYPE" value="Sequential" />
            </properties>
            <test-case id="5-1221" name="test drop should drop the first n items when enumerating in chunks(0)" fullname="FSharpx.Tests.BinaryIterateeTest.test drop should drop the first n items when enumerating in chunks(0)" methodname="test drop should drop the first n items when enumerating in chunks" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1843325039" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001861" asserts="1" />
            <test-case id="5-1222" name="test drop should drop the first n items when enumerating in chunks(1)" fullname="FSharpx.Tests.BinaryIterateeTest.test drop should drop the first n items when enumerating in chunks(1)" methodname="test drop should drop the first n items when enumerating in chunks" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="226383566" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000087" asserts="1" />
            <test-case id="5-1223" name="test drop should drop the first n items when enumerating in chunks(2)" fullname="FSharpx.Tests.BinaryIterateeTest.test drop should drop the first n items when enumerating in chunks(2)" methodname="test drop should drop the first n items when enumerating in chunks" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1121405063" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000068" asserts="1" />
            <test-case id="5-1224" name="test drop should drop the first n items when enumerating in chunks(3)" fullname="FSharpx.Tests.BinaryIterateeTest.test drop should drop the first n items when enumerating in chunks(3)" methodname="test drop should drop the first n items when enumerating in chunks" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1608117341" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000132" asserts="1" />
            <test-case id="5-1225" name="test drop should drop the first n items when enumerating in chunks(4)" fullname="FSharpx.Tests.BinaryIterateeTest.test drop should drop the first n items when enumerating in chunks(4)" methodname="test drop should drop the first n items when enumerating in chunks" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="678167477" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000089" asserts="1" />
            <test-case id="5-1226" name="test drop should drop the first n items when enumerating in chunks(5)" fullname="FSharpx.Tests.BinaryIterateeTest.test drop should drop the first n items when enumerating in chunks(5)" methodname="test drop should drop the first n items when enumerating in chunks" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1514349753" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000148" asserts="1" />
            <test-case id="5-1227" name="test drop should drop the first n items when enumerating in chunks(6)" fullname="FSharpx.Tests.BinaryIterateeTest.test drop should drop the first n items when enumerating in chunks(6)" methodname="test drop should drop the first n items when enumerating in chunks" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1196786867" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000095" asserts="1" />
            <test-case id="5-1228" name="test drop should drop the first n items when enumerating in chunks(7)" fullname="FSharpx.Tests.BinaryIterateeTest.test drop should drop the first n items when enumerating in chunks(7)" methodname="test drop should drop the first n items when enumerating in chunks" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="752006935" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000112" asserts="1" />
            <test-case id="5-1229" name="test drop should drop the first n items when enumerating in chunks(8)" fullname="FSharpx.Tests.BinaryIterateeTest.test drop should drop the first n items when enumerating in chunks(8)" methodname="test drop should drop the first n items when enumerating in chunks" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="280396709" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000118" asserts="1" />
            <test-case id="5-1230" name="test drop should drop the first n items when enumerating in chunks(9)" fullname="FSharpx.Tests.BinaryIterateeTest.test drop should drop the first n items when enumerating in chunks(9)" methodname="test drop should drop the first n items when enumerating in chunks" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1319927830" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000106" asserts="1" />
          </test-suite>
          <test-case id="5-1235" name="test dropUntil should drop anything before the first space" fullname="FSharpx.Tests.BinaryIterateeTest.test dropUntil should drop anything before the first space" methodname="test dropUntil should drop anything before the first space" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="463733183" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.004029" asserts="1" />
          <test-case id="5-1236" name="test dropUntil should drop anything before the first space at once" fullname="FSharpx.Tests.BinaryIterateeTest.test dropUntil should drop anything before the first space at once" methodname="test dropUntil should drop anything before the first space at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1456464485" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001007" asserts="1" />
          <test-case id="5-1237" name="test dropUntil should drop anything before the first space when chunked" fullname="FSharpx.Tests.BinaryIterateeTest.test dropUntil should drop anything before the first space when chunked" methodname="test dropUntil should drop anything before the first space when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="431774475" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001515" asserts="1" />
          <test-case id="5-1232" name="test dropWhile should drop anything before the first space" fullname="FSharpx.Tests.BinaryIterateeTest.test dropWhile should drop anything before the first space" methodname="test dropWhile should drop anything before the first space" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1024547846" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001407" asserts="1" />
          <test-case id="5-1233" name="test dropWhile should drop anything before the first space at once" fullname="FSharpx.Tests.BinaryIterateeTest.test dropWhile should drop anything before the first space at once" methodname="test dropWhile should drop anything before the first space at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1164862430" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000892" asserts="1" />
          <test-case id="5-1234" name="test dropWhile should drop anything before the first space when chunked" fullname="FSharpx.Tests.BinaryIterateeTest.test dropWhile should drop anything before the first space when chunked" methodname="test dropWhile should drop anything before the first space when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="206349186" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000976" asserts="1" />
          <test-case id="5-1430" name="test filter should filter filter the value for which the given predicate returns false" fullname="FSharpx.Tests.BinaryIterateeTest.test filter should filter filter the value for which the given predicate returns false" methodname="test filter should filter filter the value for which the given predicate returns false" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="2084477666" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.010392" asserts="1" />
          <test-case id="5-1431" name="test filter should filter the value for which the given predicate returns false at once" fullname="FSharpx.Tests.BinaryIterateeTest.test filter should filter the value for which the given predicate returns false at once" methodname="test filter should filter the value for which the given predicate returns false at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1540925585" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000980" asserts="1" />
          <test-case id="5-1432" name="test filter should filter the value for which the given predicate returns false when enumerating in chunks" fullname="FSharpx.Tests.BinaryIterateeTest.test filter should filter the value for which the given predicate returns false when enumerating in chunks" methodname="test filter should filter the value for which the given predicate returns false when enumerating in chunks" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="341760628" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001000" asserts="1" />
          <test-suite type="ParameterizedMethod" id="5-1190" name="test head should return the value and remove it from the stream" fullname="FSharpx.Tests.BinaryIterateeTest.test head should return the value and remove it from the stream" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.011995" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="3">
            <test-case id="5-1187" name="test head should return the value and remove it from the stream(FSharpx.Collections.ByteString,null)" fullname="FSharpx.Tests.BinaryIterateeTest.test head should return the value and remove it from the stream(FSharpx.Collections.ByteString,null)" methodname="test head should return the value and remove it from the stream" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="261097964" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000293" asserts="1" />
            <test-case id="5-1188" name="test head should return the value and remove it from the stream(FSharpx.Collections.ByteString,Some(99))" fullname="FSharpx.Tests.BinaryIterateeTest.test head should return the value and remove it from the stream(FSharpx.Collections.ByteString,Some(99))" methodname="test head should return the value and remove it from the stream" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="945890584" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000114" asserts="1" />
            <test-case id="5-1189" name="test head should return the value and remove it from the stream(FSharpx.Collections.ByteString,Some(99))" fullname="FSharpx.Tests.BinaryIterateeTest.test head should return the value and remove it from the stream(FSharpx.Collections.ByteString,Some(99))" methodname="test head should return the value and remove it from the stream" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="857343746" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000100" asserts="1" />
          </test-suite>
          <test-suite type="ParameterizedMethod" id="5-1194" name="test head should return the value and remove it from the stream at once" fullname="FSharpx.Tests.BinaryIterateeTest.test head should return the value and remove it from the stream at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.010048" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="3">
            <test-case id="5-1191" name="test head should return the value and remove it from the stream at once(FSharpx.Collections.ByteString,null)" fullname="FSharpx.Tests.BinaryIterateeTest.test head should return the value and remove it from the stream at once(FSharpx.Collections.ByteString,null)" methodname="test head should return the value and remove it from the stream at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="610652554" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000344" asserts="1" />
            <test-case id="5-1192" name="test head should return the value and remove it from the stream at once(FSharpx.Collections.ByteString,Some(99))" fullname="FSharpx.Tests.BinaryIterateeTest.test head should return the value and remove it from the stream at once(FSharpx.Collections.ByteString,Some(99))" methodname="test head should return the value and remove it from the stream at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1629421657" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000059" asserts="1" />
            <test-case id="5-1193" name="test head should return the value and remove it from the stream at once(FSharpx.Collections.ByteString,Some(99))" fullname="FSharpx.Tests.BinaryIterateeTest.test head should return the value and remove it from the stream at once(FSharpx.Collections.ByteString,Some(99))" methodname="test head should return the value and remove it from the stream at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="622803054" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000067" asserts="1" />
          </test-suite>
          <test-suite type="ParameterizedMethod" id="5-1198" name="test head should return the value and remove it from the stream when chunked" fullname="FSharpx.Tests.BinaryIterateeTest.test head should return the value and remove it from the stream when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.010622" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="3">
            <test-case id="5-1195" name="test head should return the value and remove it from the stream when chunked(FSharpx.Collections.ByteString,null)" fullname="FSharpx.Tests.BinaryIterateeTest.test head should return the value and remove it from the stream when chunked(FSharpx.Collections.ByteString,null)" methodname="test head should return the value and remove it from the stream when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1779893344" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000382" asserts="1" />
            <test-case id="5-1196" name="test head should return the value and remove it from the stream when chunked(FSharpx.Collections.ByteString,Some(99))" fullname="FSharpx.Tests.BinaryIterateeTest.test head should return the value and remove it from the stream when chunked(FSharpx.Collections.ByteString,Some(99))" methodname="test head should return the value and remove it from the stream when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="480778920" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000073" asserts="1" />
            <test-case id="5-1197" name="test head should return the value and remove it from the stream when chunked(FSharpx.Collections.ByteString,Some(99))" fullname="FSharpx.Tests.BinaryIterateeTest.test head should return the value and remove it from the stream when chunked(FSharpx.Collections.ByteString,Some(99))" methodname="test head should return the value and remove it from the stream when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="446221908" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000069" asserts="1" />
          </test-suite>
          <test-case id="5-1284" name="test heads should count the correct number of newline characters in a set of headers" fullname="FSharpx.Tests.BinaryIterateeTest.test heads should count the correct number of newline characters in a set of headers" methodname="test heads should count the correct number of newline characters in a set of headers" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1887345481" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.007096" asserts="1" />
          <test-case id="5-1285" name="test heads should count the correct number of newline characters in a set of headers when chunked" fullname="FSharpx.Tests.BinaryIterateeTest.test heads should count the correct number of newline characters in a set of headers when chunked" methodname="test heads should count the correct number of newline characters in a set of headers when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1095452868" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001163" asserts="1" />
          <test-case id="5-1283" name="test heads should count the correct number of newline characters in a set of headers when enumerated one byte at a time" fullname="FSharpx.Tests.BinaryIterateeTest.test heads should count the correct number of newline characters in a set of headers when enumerated one byte at a time" methodname="test heads should count the correct number of newline characters in a set of headers when enumerated one byte at a time" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="817783305" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001832" asserts="1" />
          <test-case id="5-1281" name="test heads should count the number of characters in a set of headers" fullname="FSharpx.Tests.BinaryIterateeTest.test heads should count the number of characters in a set of headers" methodname="test heads should count the number of characters in a set of headers" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="137696464" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000434" asserts="1" />
          <test-case id="5-1280" name="test heads should count the number of characters in a set of headers when enumerated one byte at a time" fullname="FSharpx.Tests.BinaryIterateeTest.test heads should count the number of characters in a set of headers when enumerated one byte at a time" methodname="test heads should count the number of characters in a set of headers when enumerated one byte at a time" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1803758621" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000406" asserts="1" />
          <test-case id="5-1282" name="test heads should count the number of characters in a set of headers when enumerating in chunks" fullname="FSharpx.Tests.BinaryIterateeTest.test heads should count the number of characters in a set of headers when enumerating in chunks" methodname="test heads should count the number of characters in a set of headers when enumerating in chunks" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1641415729" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000581" asserts="1" />
          <test-suite type="ParameterizedMethod" id="5-1398" name="test isolate and consume should take the first n items from the stream" fullname="FSharpx.Tests.BinaryIterateeTest.test isolate and consume should take the first n items from the stream" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" testcasecount="10" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.043182" total="10" passed="10" failed="0" inconclusive="0" skipped="0" asserts="10">
            <properties>
              <property name="_JOINTYPE" value="Sequential" />
            </properties>
            <test-case id="5-1388" name="test isolate and consume should take the first n items from the stream(0)" fullname="FSharpx.Tests.BinaryIterateeTest.test isolate and consume should take the first n items from the stream(0)" methodname="test isolate and consume should take the first n items from the stream" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="460779844" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001585" asserts="1" />
            <test-case id="5-1389" name="test isolate and consume should take the first n items from the stream(1)" fullname="FSharpx.Tests.BinaryIterateeTest.test isolate and consume should take the first n items from the stream(1)" methodname="test isolate and consume should take the first n items from the stream" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1837756915" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001220" asserts="1" />
            <test-case id="5-1390" name="test isolate and consume should take the first n items from the stream(2)" fullname="FSharpx.Tests.BinaryIterateeTest.test isolate and consume should take the first n items from the stream(2)" methodname="test isolate and consume should take the first n items from the stream" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1496676284" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000071" asserts="1" />
            <test-case id="5-1391" name="test isolate and consume should take the first n items from the stream(3)" fullname="FSharpx.Tests.BinaryIterateeTest.test isolate and consume should take the first n items from the stream(3)" methodname="test isolate and consume should take the first n items from the stream" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1079865697" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000170" asserts="1" />
            <test-case id="5-1392" name="test isolate and consume should take the first n items from the stream(4)" fullname="FSharpx.Tests.BinaryIterateeTest.test isolate and consume should take the first n items from the stream(4)" methodname="test isolate and consume should take the first n items from the stream" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1479624247" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000061" asserts="1" />
            <test-case id="5-1393" name="test isolate and consume should take the first n items from the stream(5)" fullname="FSharpx.Tests.BinaryIterateeTest.test isolate and consume should take the first n items from the stream(5)" methodname="test isolate and consume should take the first n items from the stream" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="251325373" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000100" asserts="1" />
            <test-case id="5-1394" name="test isolate and consume should take the first n items from the stream(6)" fullname="FSharpx.Tests.BinaryIterateeTest.test isolate and consume should take the first n items from the stream(6)" methodname="test isolate and consume should take the first n items from the stream" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1179867468" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000055" asserts="1" />
            <test-case id="5-1395" name="test isolate and consume should take the first n items from the stream(7)" fullname="FSharpx.Tests.BinaryIterateeTest.test isolate and consume should take the first n items from the stream(7)" methodname="test isolate and consume should take the first n items from the stream" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="898666730" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000098" asserts="1" />
            <test-case id="5-1396" name="test isolate and consume should take the first n items from the stream(8)" fullname="FSharpx.Tests.BinaryIterateeTest.test isolate and consume should take the first n items from the stream(8)" methodname="test isolate and consume should take the first n items from the stream" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="595031021" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000087" asserts="1" />
            <test-case id="5-1397" name="test isolate and consume should take the first n items from the stream(9)" fullname="FSharpx.Tests.BinaryIterateeTest.test isolate and consume should take the first n items from the stream(9)" methodname="test isolate and consume should take the first n items from the stream" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1570487185" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000099" asserts="1" />
          </test-suite>
          <test-suite type="ParameterizedMethod" id="5-1409" name="test isolate and consume should take the first n items from the stream at once" fullname="FSharpx.Tests.BinaryIterateeTest.test isolate and consume should take the first n items from the stream at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" testcasecount="10" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.038824" total="10" passed="10" failed="0" inconclusive="0" skipped="0" asserts="10">
            <properties>
              <property name="_JOINTYPE" value="Sequential" />
            </properties>
            <test-case id="5-1399" name="test isolate and consume should take the first n items from the stream at once(0)" fullname="FSharpx.Tests.BinaryIterateeTest.test isolate and consume should take the first n items from the stream at once(0)" methodname="test isolate and consume should take the first n items from the stream at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1926843098" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000985" asserts="1" />
            <test-case id="5-1400" name="test isolate and consume should take the first n items from the stream at once(1)" fullname="FSharpx.Tests.BinaryIterateeTest.test isolate and consume should take the first n items from the stream at once(1)" methodname="test isolate and consume should take the first n items from the stream at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1414413071" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000057" asserts="1" />
            <test-case id="5-1401" name="test isolate and consume should take the first n items from the stream at once(2)" fullname="FSharpx.Tests.BinaryIterateeTest.test isolate and consume should take the first n items from the stream at once(2)" methodname="test isolate and consume should take the first n items from the stream at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1251275160" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000085" asserts="1" />
            <test-case id="5-1402" name="test isolate and consume should take the first n items from the stream at once(3)" fullname="FSharpx.Tests.BinaryIterateeTest.test isolate and consume should take the first n items from the stream at once(3)" methodname="test isolate and consume should take the first n items from the stream at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1771111658" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000071" asserts="1" />
            <test-case id="5-1403" name="test isolate and consume should take the first n items from the stream at once(4)" fullname="FSharpx.Tests.BinaryIterateeTest.test isolate and consume should take the first n items from the stream at once(4)" methodname="test isolate and consume should take the first n items from the stream at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1341207960" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000050" asserts="1" />
            <test-case id="5-1404" name="test isolate and consume should take the first n items from the stream at once(5)" fullname="FSharpx.Tests.BinaryIterateeTest.test isolate and consume should take the first n items from the stream at once(5)" methodname="test isolate and consume should take the first n items from the stream at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1622028562" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000066" asserts="1" />
            <test-case id="5-1405" name="test isolate and consume should take the first n items from the stream at once(6)" fullname="FSharpx.Tests.BinaryIterateeTest.test isolate and consume should take the first n items from the stream at once(6)" methodname="test isolate and consume should take the first n items from the stream at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1343346874" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000068" asserts="1" />
            <test-case id="5-1406" name="test isolate and consume should take the first n items from the stream at once(7)" fullname="FSharpx.Tests.BinaryIterateeTest.test isolate and consume should take the first n items from the stream at once(7)" methodname="test isolate and consume should take the first n items from the stream at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1619832705" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000079" asserts="1" />
            <test-case id="5-1407" name="test isolate and consume should take the first n items from the stream at once(8)" fullname="FSharpx.Tests.BinaryIterateeTest.test isolate and consume should take the first n items from the stream at once(8)" methodname="test isolate and consume should take the first n items from the stream at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1912640359" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000062" asserts="1" />
            <test-case id="5-1408" name="test isolate and consume should take the first n items from the stream at once(9)" fullname="FSharpx.Tests.BinaryIterateeTest.test isolate and consume should take the first n items from the stream at once(9)" methodname="test isolate and consume should take the first n items from the stream at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="355943907" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000093" asserts="1" />
          </test-suite>
          <test-suite type="ParameterizedMethod" id="5-1420" name="test isolate and consume should take the first n items when chunked" fullname="FSharpx.Tests.BinaryIterateeTest.test isolate and consume should take the first n items when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" testcasecount="10" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.041267" total="10" passed="10" failed="0" inconclusive="0" skipped="0" asserts="10">
            <properties>
              <property name="_JOINTYPE" value="Sequential" />
            </properties>
            <test-case id="5-1410" name="test isolate and consume should take the first n items when chunked(0)" fullname="FSharpx.Tests.BinaryIterateeTest.test isolate and consume should take the first n items when chunked(0)" methodname="test isolate and consume should take the first n items when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1589947878" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000704" asserts="1" />
            <test-case id="5-1411" name="test isolate and consume should take the first n items when chunked(1)" fullname="FSharpx.Tests.BinaryIterateeTest.test isolate and consume should take the first n items when chunked(1)" methodname="test isolate and consume should take the first n items when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="2140464204" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000048" asserts="1" />
            <test-case id="5-1412" name="test isolate and consume should take the first n items when chunked(2)" fullname="FSharpx.Tests.BinaryIterateeTest.test isolate and consume should take the first n items when chunked(2)" methodname="test isolate and consume should take the first n items when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1011602316" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000099" asserts="1" />
            <test-case id="5-1413" name="test isolate and consume should take the first n items when chunked(3)" fullname="FSharpx.Tests.BinaryIterateeTest.test isolate and consume should take the first n items when chunked(3)" methodname="test isolate and consume should take the first n items when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="791921272" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000075" asserts="1" />
            <test-case id="5-1414" name="test isolate and consume should take the first n items when chunked(4)" fullname="FSharpx.Tests.BinaryIterateeTest.test isolate and consume should take the first n items when chunked(4)" methodname="test isolate and consume should take the first n items when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1367054036" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000068" asserts="1" />
            <test-case id="5-1415" name="test isolate and consume should take the first n items when chunked(5)" fullname="FSharpx.Tests.BinaryIterateeTest.test isolate and consume should take the first n items when chunked(5)" methodname="test isolate and consume should take the first n items when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="635984770" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000062" asserts="1" />
            <test-case id="5-1416" name="test isolate and consume should take the first n items when chunked(6)" fullname="FSharpx.Tests.BinaryIterateeTest.test isolate and consume should take the first n items when chunked(6)" methodname="test isolate and consume should take the first n items when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1892635267" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000079" asserts="1" />
            <test-case id="5-1417" name="test isolate and consume should take the first n items when chunked(7)" fullname="FSharpx.Tests.BinaryIterateeTest.test isolate and consume should take the first n items when chunked(7)" methodname="test isolate and consume should take the first n items when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="604611243" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000054" asserts="1" />
            <test-case id="5-1418" name="test isolate and consume should take the first n items when chunked(8)" fullname="FSharpx.Tests.BinaryIterateeTest.test isolate and consume should take the first n items when chunked(8)" methodname="test isolate and consume should take the first n items when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="165438952" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000083" asserts="1" />
            <test-case id="5-1419" name="test isolate and consume should take the first n items when chunked(9)" fullname="FSharpx.Tests.BinaryIterateeTest.test isolate and consume should take the first n items when chunked(9)" methodname="test isolate and consume should take the first n items when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1916789991" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000067" asserts="1" />
          </test-suite>
          <test-case id="5-1424" name="test isolateUntil and consume should correctly split the input" fullname="FSharpx.Tests.BinaryIterateeTest.test isolateUntil and consume should correctly split the input" methodname="test isolateUntil and consume should correctly split the input" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="2005536050" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.004348" asserts="1" />
          <test-case id="5-1425" name="test isolateUntil and consume should correctly split the input at once" fullname="FSharpx.Tests.BinaryIterateeTest.test isolateUntil and consume should correctly split the input at once" methodname="test isolateUntil and consume should correctly split the input at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1701697646" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000593" asserts="1" />
          <test-case id="5-1426" name="test isolateUntil and consume should correctly split the input when enumerating in chunks" fullname="FSharpx.Tests.BinaryIterateeTest.test isolateUntil and consume should correctly split the input when enumerating in chunks" methodname="test isolateUntil and consume should correctly split the input when enumerating in chunks" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="899264798" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000564" asserts="1" />
          <test-case id="5-1421" name="test isolateWhile and consume should take anything before the first space" fullname="FSharpx.Tests.BinaryIterateeTest.test isolateWhile and consume should take anything before the first space" methodname="test isolateWhile and consume should take anything before the first space" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="929621934" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001933" asserts="1" />
          <test-case id="5-1422" name="test isolateWhile and consume should take anything before the first space at once" fullname="FSharpx.Tests.BinaryIterateeTest.test isolateWhile and consume should take anything before the first space at once" methodname="test isolateWhile and consume should take anything before the first space at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="107244313" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000675" asserts="1" />
          <test-case id="5-1423" name="test isolateWhile and consume should take anything before the first space when enumerating in chunks" fullname="FSharpx.Tests.BinaryIterateeTest.test isolateWhile and consume should take anything before the first space when enumerating in chunks" methodname="test isolateWhile and consume should take anything before the first space when enumerating in chunks" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="184239465" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000621" asserts="1" />
          <test-case id="5-1172" name="test length should calculate the length of the list without modification" fullname="FSharpx.Tests.BinaryIterateeTest.test length should calculate the length of the list without modification" methodname="test length should calculate the length of the list without modification" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="664206248" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001365" asserts="1" />
          <test-case id="5-1173" name="test length should calculate the length of the list without modification all at once" fullname="FSharpx.Tests.BinaryIterateeTest.test length should calculate the length of the list without modification all at once" methodname="test length should calculate the length of the list without modification all at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1665067048" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000738" asserts="1" />
          <test-case id="5-1174" name="test length should calculate the length of the list without modification when chunked" fullname="FSharpx.Tests.BinaryIterateeTest.test length should calculate the length of the list without modification when chunked" methodname="test length should calculate the length of the list without modification when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1802787973" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000520" asserts="1" />
          <test-case id="5-1427" name="test map should map to uppercase letters to lowercase" fullname="FSharpx.Tests.BinaryIterateeTest.test map should map to uppercase letters to lowercase" methodname="test map should map to uppercase letters to lowercase" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="2059131649" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000977" asserts="1" />
          <test-case id="5-1428" name="test map should map to uppercase letters to lowercase at once" fullname="FSharpx.Tests.BinaryIterateeTest.test map should map to uppercase letters to lowercase at once" methodname="test map should map to uppercase letters to lowercase at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="2097036781" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000695" asserts="1" />
          <test-case id="5-1429" name="test map should map to uppercase letters to lowercase when enumerating in chunks" fullname="FSharpx.Tests.BinaryIterateeTest.test map should map to uppercase letters to lowercase when enumerating in chunks" methodname="test map should map to uppercase letters to lowercase when enumerating in chunks" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="835979772" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.001065" asserts="1" />
          <test-suite type="ParameterizedMethod" id="5-1178" name="test peek should return the value without removing it from the stream" fullname="FSharpx.Tests.BinaryIterateeTest.test peek should return the value without removing it from the stream" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.012120" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="3">
            <test-case id="5-1175" name="test peek should return the value without removing it from the stream(FSharpx.Collections.ByteString,null)" fullname="FSharpx.Tests.BinaryIterateeTest.test peek should return the value without removing it from the stream(FSharpx.Collections.ByteString,null)" methodname="test peek should return the value without removing it from the stream" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1246607591" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000830" asserts="1" />
            <test-case id="5-1176" name="test peek should return the value without removing it from the stream(FSharpx.Collections.ByteString,Some(99))" fullname="FSharpx.Tests.BinaryIterateeTest.test peek should return the value without removing it from the stream(FSharpx.Collections.ByteString,Some(99))" methodname="test peek should return the value without removing it from the stream" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1236944048" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000149" asserts="1" />
            <test-case id="5-1177" name="test peek should return the value without removing it from the stream(FSharpx.Collections.ByteString,Some(99))" fullname="FSharpx.Tests.BinaryIterateeTest.test peek should return the value without removing it from the stream(FSharpx.Collections.ByteString,Some(99))" methodname="test peek should return the value without removing it from the stream" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1107443548" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000098" asserts="1" />
          </test-suite>
          <test-suite type="ParameterizedMethod" id="5-1182" name="test peek should return the value without removing it from the stream at once" fullname="FSharpx.Tests.BinaryIterateeTest.test peek should return the value without removing it from the stream at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.012042" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="3">
            <test-case id="5-1179" name="test peek should return the value without removing it from the stream at once(FSharpx.Collections.ByteString,null)" fullname="FSharpx.Tests.BinaryIterateeTest.test peek should return the value without removing it from the stream at once(FSharpx.Collections.ByteString,null)" methodname="test peek should return the value without removing it from the stream at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1919946198" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000398" asserts="1" />
            <test-case id="5-1180" name="test peek should return the value without removing it from the stream at once(FSharpx.Collections.ByteString,Some(99))" fullname="FSharpx.Tests.BinaryIterateeTest.test peek should return the value without removing it from the stream at once(FSharpx.Collections.ByteString,Some(99))" methodname="test peek should return the value without removing it from the stream at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1998457358" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000066" asserts="1" />
            <test-case id="5-1181" name="test peek should return the value without removing it from the stream at once(FSharpx.Collections.ByteString,Some(99))" fullname="FSharpx.Tests.BinaryIterateeTest.test peek should return the value without removing it from the stream at once(FSharpx.Collections.ByteString,Some(99))" methodname="test peek should return the value without removing it from the stream at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1202415504" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000078" asserts="1" />
          </test-suite>
          <test-suite type="ParameterizedMethod" id="5-1186" name="test peek should return the value without removing it from the stream when chunked" fullname="FSharpx.Tests.BinaryIterateeTest.test peek should return the value without removing it from the stream when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.011999" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="3">
            <test-case id="5-1183" name="test peek should return the value without removing it from the stream when chunked(FSharpx.Collections.ByteString,null)" fullname="FSharpx.Tests.BinaryIterateeTest.test peek should return the value without removing it from the stream when chunked(FSharpx.Collections.ByteString,null)" methodname="test peek should return the value without removing it from the stream when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1972567407" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000400" asserts="1" />
            <test-case id="5-1184" name="test peek should return the value without removing it from the stream when chunked(FSharpx.Collections.ByteString,Some(99))" fullname="FSharpx.Tests.BinaryIterateeTest.test peek should return the value without removing it from the stream when chunked(FSharpx.Collections.ByteString,Some(99))" methodname="test peek should return the value without removing it from the stream when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1889934660" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000074" asserts="1" />
            <test-case id="5-1185" name="test peek should return the value without removing it from the stream when chunked(FSharpx.Collections.ByteString,Some(99))" fullname="FSharpx.Tests.BinaryIterateeTest.test peek should return the value without removing it from the stream when chunked(FSharpx.Collections.ByteString,Some(99))" methodname="test peek should return the value without removing it from the stream when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="91239768" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000068" asserts="1" />
          </test-suite>
          <test-case id="5-1435" name="test readCsvLine should return the empty byte string when that's all it is passed" fullname="FSharpx.Tests.BinaryIterateeTest.test readCsvLine should return the empty byte string when that's all it is passed" methodname="test readCsvLine should return the empty byte string when that's all it is passed" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1278932623" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.003798" asserts="1" />
          <test-case id="5-1434" name="test readCsvLine should take chunks until no commas remain" fullname="FSharpx.Tests.BinaryIterateeTest.test readCsvLine should take chunks until no commas remain" methodname="test readCsvLine should take chunks until no commas remain" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="856119602" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.014779" asserts="1" />
          <test-suite type="ParameterizedMethod" id="5-1297" name="test readLine should split strings on a newline character" fullname="FSharpx.Tests.BinaryIterateeTest.test readLine should split strings on a newline character" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" testcasecount="8" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.032140" total="8" passed="8" failed="0" inconclusive="0" skipped="0" asserts="8">
            <test-case id="5-1289" name="test readLine should split strings on a newline character(FSharpx.Collections.ByteString,FSharpx.Collections.ByteString)" fullname="FSharpx.Tests.BinaryIterateeTest.test readLine should split strings on a newline character(FSharpx.Collections.ByteString,FSharpx.Collections.ByteString)" methodname="test readLine should split strings on a newline character" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1291562468" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000390" asserts="1" />
            <test-case id="5-1290" name="test readLine should split strings on a newline character(FSharpx.Collections.ByteString,FSharpx.Collections.ByteString)" fullname="FSharpx.Tests.BinaryIterateeTest.test readLine should split strings on a newline character(FSharpx.Collections.ByteString,FSharpx.Collections.ByteString)" methodname="test readLine should split strings on a newline character" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="347542969" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000332" asserts="1" />
            <test-case id="5-1291" name="test readLine should split strings on a newline character(FSharpx.Collections.ByteString,FSharpx.Collections.ByteString)" fullname="FSharpx.Tests.BinaryIterateeTest.test readLine should split strings on a newline character(FSharpx.Collections.ByteString,FSharpx.Collections.ByteString)" methodname="test readLine should split strings on a newline character" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1712208169" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000066" asserts="1" />
            <test-case id="5-1292" name="test readLine should split strings on a newline character(FSharpx.Collections.ByteString,FSharpx.Collections.ByteString)" fullname="FSharpx.Tests.BinaryIterateeTest.test readLine should split strings on a newline character(FSharpx.Collections.ByteString,FSharpx.Collections.ByteString)" methodname="test readLine should split strings on a newline character" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="131520520" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000054" asserts="1" />
            <test-case id="5-1293" name="test readLine should split strings on a newline character(FSharpx.Collections.ByteString,FSharpx.Collections.ByteString)" fullname="FSharpx.Tests.BinaryIterateeTest.test readLine should split strings on a newline character(FSharpx.Collections.ByteString,FSharpx.Collections.ByteString)" methodname="test readLine should split strings on a newline character" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1114304709" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000058" asserts="1" />
            <test-case id="5-1294" name="test readLine should split strings on a newline character(FSharpx.Collections.ByteString,FSharpx.Collections.ByteString)" fullname="FSharpx.Tests.BinaryIterateeTest.test readLine should split strings on a newline character(FSharpx.Collections.ByteString,FSharpx.Collections.ByteString)" methodname="test readLine should split strings on a newline character" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="730225597" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000098" asserts="1" />
            <test-case id="5-1295" name="test readLine should split strings on a newline character(FSharpx.Collections.ByteString,FSharpx.Collections.ByteString)" fullname="FSharpx.Tests.BinaryIterateeTest.test readLine should split strings on a newline character(FSharpx.Collections.ByteString,FSharpx.Collections.ByteString)" methodname="test readLine should split strings on a newline character" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1718289174" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000102" asserts="1" />
            <test-case id="5-1296" name="test readLine should split strings on a newline character(FSharpx.Collections.ByteString,FSharpx.Collections.ByteString)" fullname="FSharpx.Tests.BinaryIterateeTest.test readLine should split strings on a newline character(FSharpx.Collections.ByteString,FSharpx.Collections.ByteString)" methodname="test readLine should split strings on a newline character" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1483205969" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000056" asserts="1" />
          </test-suite>
          <test-suite type="ParameterizedMethod" id="5-1306" name="test readLine should split strings on a newline character at once" fullname="FSharpx.Tests.BinaryIterateeTest.test readLine should split strings on a newline character at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" testcasecount="8" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.032167" total="8" passed="8" failed="0" inconclusive="0" skipped="0" asserts="8">
            <test-case id="5-1298" name="test readLine should split strings on a newline character at once(FSharpx.Collections.ByteString,FSharpx.Collections.ByteString)" fullname="FSharpx.Tests.BinaryIterateeTest.test readLine should split strings on a newline character at once(FSharpx.Collections.ByteString,FSharpx.Collections.ByteString)" methodname="test readLine should split strings on a newline character at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="788786109" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000828" asserts="1" />
            <test-case id="5-1299" name="test readLine should split strings on a newline character at once(FSharpx.Collections.ByteString,FSharpx.Collections.ByteString)" fullname="FSharpx.Tests.BinaryIterateeTest.test readLine should split strings on a newline character at once(FSharpx.Collections.ByteString,FSharpx.Collections.ByteString)" methodname="test readLine should split strings on a newline character at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="638158308" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000073" asserts="1" />
            <test-case id="5-1300" name="test readLine should split strings on a newline character at once(FSharpx.Collections.ByteString,FSharpx.Collections.ByteString)" fullname="FSharpx.Tests.BinaryIterateeTest.test readLine should split strings on a newline character at once(FSharpx.Collections.ByteString,FSharpx.Collections.ByteString)" methodname="test readLine should split strings on a newline character at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1904204639" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000075" asserts="1" />
            <test-case id="5-1301" name="test readLine should split strings on a newline character at once(FSharpx.Collections.ByteString,FSharpx.Collections.ByteString)" fullname="FSharpx.Tests.BinaryIterateeTest.test readLine should split strings on a newline character at once(FSharpx.Collections.ByteString,FSharpx.Collections.ByteString)" methodname="test readLine should split strings on a newline character at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="161950551" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000065" asserts="1" />
            <test-case id="5-1302" name="test readLine should split strings on a newline character at once(FSharpx.Collections.ByteString,FSharpx.Collections.ByteString)" fullname="FSharpx.Tests.BinaryIterateeTest.test readLine should split strings on a newline character at once(FSharpx.Collections.ByteString,FSharpx.Collections.ByteString)" methodname="test readLine should split strings on a newline character at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="903364905" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000066" asserts="1" />
            <test-case id="5-1303" name="test readLine should split strings on a newline character at once(FSharpx.Collections.ByteString,FSharpx.Collections.ByteString)" fullname="FSharpx.Tests.BinaryIterateeTest.test readLine should split strings on a newline character at once(FSharpx.Collections.ByteString,FSharpx.Collections.ByteString)" methodname="test readLine should split strings on a newline character at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="846943744" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000055" asserts="1" />
            <test-case id="5-1304" name="test readLine should split strings on a newline character at once(FSharpx.Collections.ByteString,FSharpx.Collections.ByteString)" fullname="FSharpx.Tests.BinaryIterateeTest.test readLine should split strings on a newline character at once(FSharpx.Collections.ByteString,FSharpx.Collections.ByteString)" methodname="test readLine should split strings on a newline character at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1533639630" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000058" asserts="1" />
            <test-case id="5-1305" name="test readLine should split strings on a newline character at once(FSharpx.Collections.ByteString,FSharpx.Collections.ByteString)" fullname="FSharpx.Tests.BinaryIterateeTest.test readLine should split strings on a newline character at once(FSharpx.Collections.ByteString,FSharpx.Collections.ByteString)" methodname="test readLine should split strings on a newline character at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="131086879" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000055" asserts="1" />
          </test-suite>
          <test-suite type="ParameterizedMethod" id="5-1322" name="test readLines should return the lines from the input" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" testcasecount="15" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.080057" total="15" passed="15" failed="0" inconclusive="0" skipped="0" asserts="15">
            <test-case id="5-1307" name="test readLines should return the lines from the input(&quot;&quot;,[])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input(&quot;&quot;,[])" methodname="test readLines should return the lines from the input" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="25707618" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.004610" asserts="1" />
            <test-case id="5-1308" name="test readLines should return the lines from the input(&quot;\r&quot;,[FSharpx.Collections.ByteString])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input(&quot;\r&quot;,[FSharpx.Collections.ByteString])" methodname="test readLines should return the lines from the input" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="590803857" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.014957" asserts="1" />
            <test-case id="5-1309" name="test readLines should return the lines from the input(&quot;\n&quot;,[FSharpx.Collections.ByteString])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input(&quot;\n&quot;,[FSharpx.Collections.ByteString])" methodname="test readLines should return the lines from the input" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1375743392" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000111" asserts="1" />
            <test-case id="5-1310" name="test readLines should return the lines from the input(&quot;\r\n&quot;,[FSharpx.Collections.ByteString])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input(&quot;\r\n&quot;,[FSharpx.Collections.ByteString])" methodname="test readLines should return the lines from the input" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="98738755" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000140" asserts="1" />
            <test-case id="5-1311" name="test readLines should return the lines from the input(&quot;line1&quot;,[FSharpx.Collections.ByteString])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input(&quot;line1&quot;,[FSharpx.Collections.ByteString])" methodname="test readLines should return the lines from the input" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1304458304" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000089" asserts="1" />
            <test-case id="5-1312" name="test readLines should return the lines from the input(&quot;line1\n&quot;,[FSharpx.Collections.ByteString])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input(&quot;line1\n&quot;,[FSharpx.Collections.ByteString])" methodname="test readLines should return the lines from the input" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="603836909" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000168" asserts="1" />
            <test-case id="5-1313" name="test readLines should return the lines from the input(&quot;line1\r&quot;,[FSharpx.Collections.ByteString])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input(&quot;line1\r&quot;,[FSharpx.Collections.ByteString])" methodname="test readLines should return the lines from the input" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1415076155" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000113" asserts="1" />
            <test-case id="5-1314" name="test readLines should return the lines from the input(&quot;line1\r\n&quot;,[FSharpx.Collections.ByteString])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input(&quot;line1\r\n&quot;,[FSharpx.Collections.ByteString])" methodname="test readLines should return the lines from the input" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="606688641" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000153" asserts="1" />
            <test-case id="5-1315" name="test readLines should return the lines from the input(&quot;line1\r\nline2&quot;,[FSharpx.Collections.ByteString; FSharpx.Collections.ByteString])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input(&quot;line1\r\nline2&quot;,[FSharpx.Collections.ByteString; FSharpx.Collections.ByteString])" methodname="test readLines should return the lines from the input" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="2001990339" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000103" asserts="1" />
            <test-case id="5-1316" name="test readLines should return the lines from the input(&quot;line1\r\nline2\r\n&quot;,[FSharpx.Collections.ByteString; FSharpx.Collections.ByteString])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input(&quot;line1\r\nline2\r\n&quot;,[FSharpx.Collections.ByteString; FSharpx.Collections.ByteString])" methodname="test readLines should return the lines from the input" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="520167281" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000093" asserts="1" />
            <test-case id="5-1317" name="test readLines should return the lines from the input(&quot;line1\r\nline2\r\n\r\n&quot;,[FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; FSharpx.Collections.ByteString])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input(&quot;line1\r\nline2\r\n\r\n&quot;,[FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; FSharpx.Collections.ByteString])" methodname="test readLines should return the lines from the input" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="462791623" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000073" asserts="1" />
            <test-case id="5-1318" name="test readLines should return the lines from the input(&quot;line1\r\nline2\r\nline3\r\nline4\r\nline5&quot;,[FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; ... ])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input(&quot;line1\r\nline2\r\nline3\r\nline4\r\nline5&quot;,[FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; ... ])" methodname="test readLines should return the lines from the input" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1889529761" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000193" asserts="1" />
            <test-case id="5-1319" name="test readLines should return the lines from the input(&quot;line1\r\nline2\r\nline3\r\nline4\r\nline5\r\n&quot;,[FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; ... ])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input(&quot;line1\r\nline2\r\nline3\r\nline4\r\nline5\r\n&quot;,[FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; ... ])" methodname="test readLines should return the lines from the input" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="403574758" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000084" asserts="1" />
            <test-case id="5-1320" name="test readLines should return the lines from the input(&quot;line1\r\nline2\r\nline3\r\nline4\r\nline5\r\n\r\n&quot;,[FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; ... ])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input(&quot;line1\r\nline2\r\nline3\r\nline4\r\nline5\r\n\r\n&quot;,[FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; ... ])" methodname="test readLines should return the lines from the input" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1358337822" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000117" asserts="1" />
            <test-case id="5-1321" name="test readLines should return the lines from the input(&quot;PUT /file HTTP/1.1\r\nHost: example.com\rUser-Agent: X\nContent-Type: text/plain\r\n\r\n1C\r\nbody line 2\r\n\r\n7&quot;,[FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; ... ])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input(&quot;PUT /file HTTP/1.1\r\nHost: example.com\rUser-Agent: X\nContent-Type: text/plain\r\n\r\n1C\r\nbody line 2\r\n\r\n7&quot;,[FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; ... ])" methodname="test readLines should return the lines from the input" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="626093429" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000101" asserts="1" />
          </test-suite>
          <test-suite type="ParameterizedMethod" id="5-1354" name="test readLines should return the lines from the input when chunked" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" testcasecount="15" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:01Z" duration="0.056256" total="15" passed="15" failed="0" inconclusive="0" skipped="0" asserts="15">
            <test-case id="5-1339" name="test readLines should return the lines from the input when chunked(&quot;&quot;,[])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input when chunked(&quot;&quot;,[])" methodname="test readLines should return the lines from the input when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="2046766272" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000506" asserts="1" />
            <test-case id="5-1340" name="test readLines should return the lines from the input when chunked(&quot;\r&quot;,[FSharpx.Collections.ByteString])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input when chunked(&quot;\r&quot;,[FSharpx.Collections.ByteString])" methodname="test readLines should return the lines from the input when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="2043793503" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000082" asserts="1" />
            <test-case id="5-1341" name="test readLines should return the lines from the input when chunked(&quot;\n&quot;,[FSharpx.Collections.ByteString])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input when chunked(&quot;\n&quot;,[FSharpx.Collections.ByteString])" methodname="test readLines should return the lines from the input when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="930656348" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000088" asserts="1" />
            <test-case id="5-1342" name="test readLines should return the lines from the input when chunked(&quot;\r\n&quot;,[FSharpx.Collections.ByteString])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input when chunked(&quot;\r\n&quot;,[FSharpx.Collections.ByteString])" methodname="test readLines should return the lines from the input when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1841422789" result="Passed" start-time="2016-08-22 10:23:00Z" end-time="2016-08-22 10:23:00Z" duration="0.000092" asserts="1" />
            <test-case id="5-1343" name="test readLines should return the lines from the input when chunked(&quot;line1&quot;,[FSharpx.Collections.ByteString])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input when chunked(&quot;line1&quot;,[FSharpx.Collections.ByteString])" methodname="test readLines should return the lines from the input when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="218021709" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000084" asserts="1" />
            <test-case id="5-1344" name="test readLines should return the lines from the input when chunked(&quot;line1\n&quot;,[FSharpx.Collections.ByteString])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input when chunked(&quot;line1\n&quot;,[FSharpx.Collections.ByteString])" methodname="test readLines should return the lines from the input when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1796876312" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000078" asserts="1" />
            <test-case id="5-1345" name="test readLines should return the lines from the input when chunked(&quot;line1\r&quot;,[FSharpx.Collections.ByteString])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input when chunked(&quot;line1\r&quot;,[FSharpx.Collections.ByteString])" methodname="test readLines should return the lines from the input when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1577882799" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000100" asserts="1" />
            <test-case id="5-1346" name="test readLines should return the lines from the input when chunked(&quot;line1\r\n&quot;,[FSharpx.Collections.ByteString])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input when chunked(&quot;line1\r\n&quot;,[FSharpx.Collections.ByteString])" methodname="test readLines should return the lines from the input when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="2109768045" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000099" asserts="1" />
            <test-case id="5-1347" name="test readLines should return the lines from the input when chunked(&quot;line1\r\nline2&quot;,[FSharpx.Collections.ByteString; FSharpx.Collections.ByteString])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input when chunked(&quot;line1\r\nline2&quot;,[FSharpx.Collections.ByteString; FSharpx.Collections.ByteString])" methodname="test readLines should return the lines from the input when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="185897033" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000154" asserts="1" />
            <test-case id="5-1348" name="test readLines should return the lines from the input when chunked(&quot;line1\r\nline2\r\n&quot;,[FSharpx.Collections.ByteString; FSharpx.Collections.ByteString])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input when chunked(&quot;line1\r\nline2\r\n&quot;,[FSharpx.Collections.ByteString; FSharpx.Collections.ByteString])" methodname="test readLines should return the lines from the input when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1864322352" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000094" asserts="1" />
            <test-case id="5-1349" name="test readLines should return the lines from the input when chunked(&quot;line1\r\nline2\r\n\r\n&quot;,[FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; FSharpx.Collections.ByteString])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input when chunked(&quot;line1\r\nline2\r\n\r\n&quot;,[FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; FSharpx.Collections.ByteString])" methodname="test readLines should return the lines from the input when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1014173002" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000081" asserts="1" />
            <test-case id="5-1350" name="test readLines should return the lines from the input when chunked(&quot;line1\r\nline2\r\nline3\r\nline4\r\nline5&quot;,[FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; ... ])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input when chunked(&quot;line1\r\nline2\r\nline3\r\nline4\r\nline5&quot;,[FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; ... ])" methodname="test readLines should return the lines from the input when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1401634266" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000081" asserts="1" />
            <test-case id="5-1351" name="test readLines should return the lines from the input when chunked(&quot;line1\r\nline2\r\nline3\r\nline4\r\nline5\r\n&quot;,[FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; ... ])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input when chunked(&quot;line1\r\nline2\r\nline3\r\nline4\r\nline5\r\n&quot;,[FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; ... ])" methodname="test readLines should return the lines from the input when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="255009547" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000107" asserts="1" />
            <test-case id="5-1352" name="test readLines should return the lines from the input when chunked(&quot;line1\r\nline2\r\nline3\r\nline4\r\nline5\r\n\r\n&quot;,[FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; ... ])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input when chunked(&quot;line1\r\nline2\r\nline3\r\nline4\r\nline5\r\n\r\n&quot;,[FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; ... ])" methodname="test readLines should return the lines from the input when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1030002789" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000117" asserts="1" />
            <test-case id="5-1353" name="test readLines should return the lines from the input when chunked(&quot;PUT /file HTTP/1.1\r\nHost: example.com\rUser-Agent: X\nContent-Type: text/plain\r\n\r\n1C\r\nbody line 2\r\n\r\n7&quot;,[FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; ... ])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input when chunked(&quot;PUT /file HTTP/1.1\r\nHost: example.com\rUser-Agent: X\nContent-Type: text/plain\r\n\r\n1C\r\nbody line 2\r\n\r\n7&quot;,[FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; ... ])" methodname="test readLines should return the lines from the input when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="2098750222" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000098" asserts="1" />
          </test-suite>
          <test-suite type="ParameterizedMethod" id="5-1338" name="test readLines should return the lines from the input when enumerated one byte at a time" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input when enumerated one byte at a time" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" testcasecount="15" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.070421" total="15" passed="15" failed="0" inconclusive="0" skipped="0" asserts="15">
            <test-case id="5-1323" name="test readLines should return the lines from the input when enumerated one byte at a time(&quot;&quot;,[])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input when enumerated one byte at a time(&quot;&quot;,[])" methodname="test readLines should return the lines from the input when enumerated one byte at a time" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="694891519" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.001149" asserts="1" />
            <test-case id="5-1324" name="test readLines should return the lines from the input when enumerated one byte at a time(&quot;\r&quot;,[FSharpx.Collections.ByteString])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input when enumerated one byte at a time(&quot;\r&quot;,[FSharpx.Collections.ByteString])" methodname="test readLines should return the lines from the input when enumerated one byte at a time" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="395048100" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000869" asserts="1" />
            <test-case id="5-1325" name="test readLines should return the lines from the input when enumerated one byte at a time(&quot;\n&quot;,[FSharpx.Collections.ByteString])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input when enumerated one byte at a time(&quot;\n&quot;,[FSharpx.Collections.ByteString])" methodname="test readLines should return the lines from the input when enumerated one byte at a time" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1358917506" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000429" asserts="1" />
            <test-case id="5-1326" name="test readLines should return the lines from the input when enumerated one byte at a time(&quot;\r\n&quot;,[FSharpx.Collections.ByteString])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input when enumerated one byte at a time(&quot;\r\n&quot;,[FSharpx.Collections.ByteString])" methodname="test readLines should return the lines from the input when enumerated one byte at a time" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1808184545" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000365" asserts="1" />
            <test-case id="5-1327" name="test readLines should return the lines from the input when enumerated one byte at a time(&quot;line1&quot;,[FSharpx.Collections.ByteString])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input when enumerated one byte at a time(&quot;line1&quot;,[FSharpx.Collections.ByteString])" methodname="test readLines should return the lines from the input when enumerated one byte at a time" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1480316914" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000487" asserts="1" />
            <test-case id="5-1328" name="test readLines should return the lines from the input when enumerated one byte at a time(&quot;line1\n&quot;,[FSharpx.Collections.ByteString])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input when enumerated one byte at a time(&quot;line1\n&quot;,[FSharpx.Collections.ByteString])" methodname="test readLines should return the lines from the input when enumerated one byte at a time" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="14478495" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000548" asserts="1" />
            <test-case id="5-1329" name="test readLines should return the lines from the input when enumerated one byte at a time(&quot;line1\r&quot;,[FSharpx.Collections.ByteString])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input when enumerated one byte at a time(&quot;line1\r&quot;,[FSharpx.Collections.ByteString])" methodname="test readLines should return the lines from the input when enumerated one byte at a time" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="773930523" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000507" asserts="1" />
            <test-case id="5-1330" name="test readLines should return the lines from the input when enumerated one byte at a time(&quot;line1\r\n&quot;,[FSharpx.Collections.ByteString])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input when enumerated one byte at a time(&quot;line1\r\n&quot;,[FSharpx.Collections.ByteString])" methodname="test readLines should return the lines from the input when enumerated one byte at a time" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="759630255" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000526" asserts="1" />
            <test-case id="5-1331" name="test readLines should return the lines from the input when enumerated one byte at a time(&quot;line1\r\nline2&quot;,[FSharpx.Collections.ByteString; FSharpx.Collections.ByteString])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input when enumerated one byte at a time(&quot;line1\r\nline2&quot;,[FSharpx.Collections.ByteString; FSharpx.Collections.ByteString])" methodname="test readLines should return the lines from the input when enumerated one byte at a time" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1058449610" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000835" asserts="1" />
            <test-case id="5-1332" name="test readLines should return the lines from the input when enumerated one byte at a time(&quot;line1\r\nline2\r\n&quot;,[FSharpx.Collections.ByteString; FSharpx.Collections.ByteString])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input when enumerated one byte at a time(&quot;line1\r\nline2\r\n&quot;,[FSharpx.Collections.ByteString; FSharpx.Collections.ByteString])" methodname="test readLines should return the lines from the input when enumerated one byte at a time" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1568035130" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.001783" asserts="1" />
            <test-case id="5-1333" name="test readLines should return the lines from the input when enumerated one byte at a time(&quot;line1\r\nline2\r\n\r\n&quot;,[FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; FSharpx.Collections.ByteString])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input when enumerated one byte at a time(&quot;line1\r\nline2\r\n\r\n&quot;,[FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; FSharpx.Collections.ByteString])" methodname="test readLines should return the lines from the input when enumerated one byte at a time" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1670438635" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000951" asserts="1" />
            <test-case id="5-1334" name="test readLines should return the lines from the input when enumerated one byte at a time(&quot;line1\r\nline2\r\nline3\r\nline4\r\nline5&quot;,[FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; ... ])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input when enumerated one byte at a time(&quot;line1\r\nline2\r\nline3\r\nline4\r\nline5&quot;,[FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; ... ])" methodname="test readLines should return the lines from the input when enumerated one byte at a time" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="2061964357" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.001839" asserts="1" />
            <test-case id="5-1335" name="test readLines should return the lines from the input when enumerated one byte at a time(&quot;line1\r\nline2\r\nline3\r\nline4\r\nline5\r\n&quot;,[FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; ... ])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input when enumerated one byte at a time(&quot;line1\r\nline2\r\nline3\r\nline4\r\nline5\r\n&quot;,[FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; ... ])" methodname="test readLines should return the lines from the input when enumerated one byte at a time" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="4004663" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.002501" asserts="1" />
            <test-case id="5-1336" name="test readLines should return the lines from the input when enumerated one byte at a time(&quot;line1\r\nline2\r\nline3\r\nline4\r\nline5\r\n\r\n&quot;,[FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; ... ])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input when enumerated one byte at a time(&quot;line1\r\nline2\r\nline3\r\nline4\r\nline5\r\n\r\n&quot;,[FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; ... ])" methodname="test readLines should return the lines from the input when enumerated one byte at a time" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="298346167" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.002205" asserts="1" />
            <test-case id="5-1337" name="test readLines should return the lines from the input when enumerated one byte at a time(&quot;PUT /file HTTP/1.1\r\nHost: example.com\rUser-Agent: X\nContent-Type: text/plain\r\n\r\n1C\r\nbody line 2\r\n\r\n7&quot;,[FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; ... ])" fullname="FSharpx.Tests.BinaryIterateeTest.test readLines should return the lines from the input when enumerated one byte at a time(&quot;PUT /file HTTP/1.1\r\nHost: example.com\rUser-Agent: X\nContent-Type: text/plain\r\n\r\n1C\r\nbody line 2\r\n\r\n7&quot;,[FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; FSharpx.Collections.ByteString; ... ])" methodname="test readLines should return the lines from the input when enumerated one byte at a time" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1138785162" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.002541" asserts="1" />
          </test-suite>
          <test-case id="5-1287" name="test skipNewline should consume \n for a single newline" fullname="FSharpx.Tests.BinaryIterateeTest.test skipNewline should consume \n for a single newline" methodname="test skipNewline should consume \n for a single newline" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1146488824" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.004130" asserts="1" />
          <test-case id="5-1286" name="test skipNewline should consume \r for a single newline" fullname="FSharpx.Tests.BinaryIterateeTest.test skipNewline should consume \r for a single newline" methodname="test skipNewline should consume \r for a single newline" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1840921331" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.001503" asserts="1" />
          <test-case id="5-1288" name="test skipNewline should consume \r\n for a single newline" fullname="FSharpx.Tests.BinaryIterateeTest.test skipNewline should consume \r\n for a single newline" methodname="test skipNewline should consume \r\n for a single newline" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1343223921" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.001470" asserts="1" />
          <test-suite type="ParameterizedMethod" id="5-1249" name="test take should take the first n items" fullname="FSharpx.Tests.BinaryIterateeTest.test take should take the first n items" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" testcasecount="11" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.046096" total="11" passed="11" failed="0" inconclusive="0" skipped="0" asserts="11">
            <properties>
              <property name="_JOINTYPE" value="Sequential" />
            </properties>
            <test-case id="5-1238" name="test take should take the first n items(0)" fullname="FSharpx.Tests.BinaryIterateeTest.test take should take the first n items(0)" methodname="test take should take the first n items" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="2108788193" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000965" asserts="1" />
            <test-case id="5-1239" name="test take should take the first n items(1)" fullname="FSharpx.Tests.BinaryIterateeTest.test take should take the first n items(1)" methodname="test take should take the first n items" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1802369096" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.001323" asserts="1" />
            <test-case id="5-1240" name="test take should take the first n items(2)" fullname="FSharpx.Tests.BinaryIterateeTest.test take should take the first n items(2)" methodname="test take should take the first n items" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1879884673" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000050" asserts="1" />
            <test-case id="5-1241" name="test take should take the first n items(3)" fullname="FSharpx.Tests.BinaryIterateeTest.test take should take the first n items(3)" methodname="test take should take the first n items" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1179878438" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000091" asserts="1" />
            <test-case id="5-1242" name="test take should take the first n items(4)" fullname="FSharpx.Tests.BinaryIterateeTest.test take should take the first n items(4)" methodname="test take should take the first n items" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="187488776" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000053" asserts="1" />
            <test-case id="5-1243" name="test take should take the first n items(5)" fullname="FSharpx.Tests.BinaryIterateeTest.test take should take the first n items(5)" methodname="test take should take the first n items" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="19120650" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000069" asserts="1" />
            <test-case id="5-1244" name="test take should take the first n items(6)" fullname="FSharpx.Tests.BinaryIterateeTest.test take should take the first n items(6)" methodname="test take should take the first n items" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="742511453" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000065" asserts="1" />
            <test-case id="5-1245" name="test take should take the first n items(7)" fullname="FSharpx.Tests.BinaryIterateeTest.test take should take the first n items(7)" methodname="test take should take the first n items" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="357571921" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000080" asserts="1" />
            <test-case id="5-1246" name="test take should take the first n items(8)" fullname="FSharpx.Tests.BinaryIterateeTest.test take should take the first n items(8)" methodname="test take should take the first n items" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="25391519" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000084" asserts="1" />
            <test-case id="5-1247" name="test take should take the first n items(9)" fullname="FSharpx.Tests.BinaryIterateeTest.test take should take the first n items(9)" methodname="test take should take the first n items" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="593735536" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000064" asserts="1" />
            <test-case id="5-1248" name="test take should take the first n items(10)" fullname="FSharpx.Tests.BinaryIterateeTest.test take should take the first n items(10)" methodname="test take should take the first n items" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1221420939" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000046" asserts="1" />
          </test-suite>
          <test-suite type="ParameterizedMethod" id="5-1261" name="test take should take the first n items at once" fullname="FSharpx.Tests.BinaryIterateeTest.test take should take the first n items at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" testcasecount="11" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.041283" total="11" passed="11" failed="0" inconclusive="0" skipped="0" asserts="11">
            <properties>
              <property name="_JOINTYPE" value="Sequential" />
            </properties>
            <test-case id="5-1250" name="test take should take the first n items at once(0)" fullname="FSharpx.Tests.BinaryIterateeTest.test take should take the first n items at once(0)" methodname="test take should take the first n items at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="246740118" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.001087" asserts="1" />
            <test-case id="5-1251" name="test take should take the first n items at once(1)" fullname="FSharpx.Tests.BinaryIterateeTest.test take should take the first n items at once(1)" methodname="test take should take the first n items at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="132373138" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000068" asserts="1" />
            <test-case id="5-1252" name="test take should take the first n items at once(2)" fullname="FSharpx.Tests.BinaryIterateeTest.test take should take the first n items at once(2)" methodname="test take should take the first n items at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1758585520" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000050" asserts="1" />
            <test-case id="5-1253" name="test take should take the first n items at once(3)" fullname="FSharpx.Tests.BinaryIterateeTest.test take should take the first n items at once(3)" methodname="test take should take the first n items at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1113723422" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000103" asserts="1" />
            <test-case id="5-1254" name="test take should take the first n items at once(4)" fullname="FSharpx.Tests.BinaryIterateeTest.test take should take the first n items at once(4)" methodname="test take should take the first n items at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="2086558975" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000098" asserts="1" />
            <test-case id="5-1255" name="test take should take the first n items at once(5)" fullname="FSharpx.Tests.BinaryIterateeTest.test take should take the first n items at once(5)" methodname="test take should take the first n items at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1505014138" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000065" asserts="1" />
            <test-case id="5-1256" name="test take should take the first n items at once(6)" fullname="FSharpx.Tests.BinaryIterateeTest.test take should take the first n items at once(6)" methodname="test take should take the first n items at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="476435215" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000085" asserts="1" />
            <test-case id="5-1257" name="test take should take the first n items at once(7)" fullname="FSharpx.Tests.BinaryIterateeTest.test take should take the first n items at once(7)" methodname="test take should take the first n items at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="503337481" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000055" asserts="1" />
            <test-case id="5-1258" name="test take should take the first n items at once(8)" fullname="FSharpx.Tests.BinaryIterateeTest.test take should take the first n items at once(8)" methodname="test take should take the first n items at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1813987804" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000084" asserts="1" />
            <test-case id="5-1259" name="test take should take the first n items at once(9)" fullname="FSharpx.Tests.BinaryIterateeTest.test take should take the first n items at once(9)" methodname="test take should take the first n items at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1409962650" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000057" asserts="1" />
            <test-case id="5-1260" name="test take should take the first n items at once(10)" fullname="FSharpx.Tests.BinaryIterateeTest.test take should take the first n items at once(10)" methodname="test take should take the first n items at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="815116984" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000050" asserts="1" />
          </test-suite>
          <test-suite type="ParameterizedMethod" id="5-1273" name="test take should take the first n items when chunked" fullname="FSharpx.Tests.BinaryIterateeTest.test take should take the first n items when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" testcasecount="11" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.046391" total="11" passed="11" failed="0" inconclusive="0" skipped="0" asserts="11">
            <properties>
              <property name="_JOINTYPE" value="Sequential" />
            </properties>
            <test-case id="5-1262" name="test take should take the first n items when chunked(0)" fullname="FSharpx.Tests.BinaryIterateeTest.test take should take the first n items when chunked(0)" methodname="test take should take the first n items when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1418121932" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000993" asserts="1" />
            <test-case id="5-1263" name="test take should take the first n items when chunked(1)" fullname="FSharpx.Tests.BinaryIterateeTest.test take should take the first n items when chunked(1)" methodname="test take should take the first n items when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1661886069" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000052" asserts="1" />
            <test-case id="5-1264" name="test take should take the first n items when chunked(2)" fullname="FSharpx.Tests.BinaryIterateeTest.test take should take the first n items when chunked(2)" methodname="test take should take the first n items when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="506879657" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000132" asserts="1" />
            <test-case id="5-1265" name="test take should take the first n items when chunked(3)" fullname="FSharpx.Tests.BinaryIterateeTest.test take should take the first n items when chunked(3)" methodname="test take should take the first n items when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="303471194" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000046" asserts="1" />
            <test-case id="5-1266" name="test take should take the first n items when chunked(4)" fullname="FSharpx.Tests.BinaryIterateeTest.test take should take the first n items when chunked(4)" methodname="test take should take the first n items when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1903816846" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000114" asserts="1" />
            <test-case id="5-1267" name="test take should take the first n items when chunked(5)" fullname="FSharpx.Tests.BinaryIterateeTest.test take should take the first n items when chunked(5)" methodname="test take should take the first n items when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="524198651" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000054" asserts="1" />
            <test-case id="5-1268" name="test take should take the first n items when chunked(6)" fullname="FSharpx.Tests.BinaryIterateeTest.test take should take the first n items when chunked(6)" methodname="test take should take the first n items when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="5826232" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000075" asserts="1" />
            <test-case id="5-1269" name="test take should take the first n items when chunked(7)" fullname="FSharpx.Tests.BinaryIterateeTest.test take should take the first n items when chunked(7)" methodname="test take should take the first n items when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="2069028558" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000061" asserts="1" />
            <test-case id="5-1270" name="test take should take the first n items when chunked(8)" fullname="FSharpx.Tests.BinaryIterateeTest.test take should take the first n items when chunked(8)" methodname="test take should take the first n items when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1587140590" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000058" asserts="1" />
            <test-case id="5-1271" name="test take should take the first n items when chunked(9)" fullname="FSharpx.Tests.BinaryIterateeTest.test take should take the first n items when chunked(9)" methodname="test take should take the first n items when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1669920487" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000109" asserts="1" />
            <test-case id="5-1272" name="test take should take the first n items when chunked(10)" fullname="FSharpx.Tests.BinaryIterateeTest.test take should take the first n items when chunked(10)" methodname="test take should take the first n items when chunked" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1430853162" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000066" asserts="1" />
          </test-suite>
          <test-case id="5-1277" name="test takeUntil should correctly split the input" fullname="FSharpx.Tests.BinaryIterateeTest.test takeUntil should correctly split the input" methodname="test takeUntil should correctly split the input" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1167594688" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000724" asserts="1" />
          <test-case id="5-1278" name="test takeUntil should correctly split the input at once" fullname="FSharpx.Tests.BinaryIterateeTest.test takeUntil should correctly split the input at once" methodname="test takeUntil should correctly split the input at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1936298583" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000917" asserts="1" />
          <test-case id="5-1279" name="test takeUntil should correctly split the input when enumerating in chunks" fullname="FSharpx.Tests.BinaryIterateeTest.test takeUntil should correctly split the input when enumerating in chunks" methodname="test takeUntil should correctly split the input when enumerating in chunks" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="898826167" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000585" asserts="1" />
          <test-case id="5-1433" name="test takeUntilComma should take until the first comma" fullname="FSharpx.Tests.BinaryIterateeTest.test takeUntilComma should take until the first comma" methodname="test takeUntilComma should take until the first comma" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1994917763" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000514" asserts="1" />
          <test-case id="5-1274" name="test takeWhile should take anything before the first space" fullname="FSharpx.Tests.BinaryIterateeTest.test takeWhile should take anything before the first space" methodname="test takeWhile should take anything before the first space" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1317622597" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000597" asserts="1" />
          <test-case id="5-1275" name="test takeWhile should take anything before the first space at once" fullname="FSharpx.Tests.BinaryIterateeTest.test takeWhile should take anything before the first space at once" methodname="test takeWhile should take anything before the first space at once" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="571664963" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000710" asserts="1" />
          <test-case id="5-1276" name="test takeWhile should take anything before the first space when enumerating in chunks" fullname="FSharpx.Tests.BinaryIterateeTest.test takeWhile should take anything before the first space when enumerating in chunks" methodname="test takeWhile should take anything before the first space when enumerating in chunks" classname="FSharpx.Tests.BinaryIterateeTest" runstate="Runnable" seed="1211278794" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000596" asserts="1" />
        </test-suite>
        <test-suite type="TestFixture" id="5-1140" name="ChoiceTests" fullname="FSharpx.Tests.ChoiceTests" classname="FSharpx.Tests.ChoiceTests" runstate="Runnable" testcasecount="9" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.132949" total="9" passed="9" failed="0" inconclusive="0" skipped="0" asserts="7">
          <test-case id="5-1145" name="ChoiceFolding" fullname="FSharpx.Tests.ChoiceTests.ChoiceFolding" methodname="ChoiceFolding" classname="FSharpx.Tests.ChoiceTests" runstate="Runnable" seed="952845297" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.012156" asserts="0">
            <output><![CDATA[final position: 7.000000,6.000000
]]></output>
          </test-case>
          <test-case id="5-1146" name="computations are aborted on the first Choice2Of2" fullname="FSharpx.Tests.ChoiceTests.computations are aborted on the first Choice2Of2" methodname="computations are aborted on the first Choice2Of2" classname="FSharpx.Tests.ChoiceTests" runstate="Runnable" seed="170520479" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.001800" asserts="1" />
          <test-case id="5-1141" name="getChoice1Of2" fullname="FSharpx.Tests.ChoiceTests.getChoice1Of2" methodname="getChoice1Of2" classname="FSharpx.Tests.ChoiceTests" runstate="Runnable" seed="1774888522" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.002152" asserts="1" />
          <test-case id="5-1142" name="getChoice2Of2" fullname="FSharpx.Tests.ChoiceTests.getChoice2Of2" methodname="getChoice2Of2" classname="FSharpx.Tests.ChoiceTests" runstate="Runnable" seed="102616784" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.013826" asserts="1" />
          <test-case id="5-1144" name="invalid cast" fullname="FSharpx.Tests.ChoiceTests.invalid cast" methodname="invalid cast" classname="FSharpx.Tests.ChoiceTests" runstate="Runnable" seed="1971447882" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.006085" asserts="1">
            <output><![CDATA[System.InvalidCastException: Die angegebene Umwandlung ist ungültig.
   bei FSharpx.Tests.ChoiceTests.invalid cast() in D:\code\FSharpx.Extras\tests\FSharpx.Tests\ChoiceTests.fs:Zeile 28.
]]></output>
          </test-case>
          <test-case id="5-1149" name="monad laws" fullname="FSharpx.Tests.ChoiceTests.monad laws" methodname="monad laws" classname="FSharpx.Tests.ChoiceTests" runstate="Runnable" seed="1070049372" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.046978" asserts="0">
            <output><![CDATA[left identity-Ok, passed 100 tests.

right identity-Ok, passed 100 tests.

associativity-Ok, passed 100 tests.

]]></output>
          </test-case>
          <test-case id="5-1147" name="multiple successful values propagate through" fullname="FSharpx.Tests.ChoiceTests.multiple successful values propagate through" methodname="multiple successful values propagate through" classname="FSharpx.Tests.ChoiceTests" runstate="Runnable" seed="805410283" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.001378" asserts="1" />
          <test-case id="5-1148" name="return! allows binding the result" fullname="FSharpx.Tests.ChoiceTests.return! allows binding the result" methodname="return! allows binding the result" classname="FSharpx.Tests.ChoiceTests" runstate="Runnable" seed="1486279865" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000346" asserts="1" />
          <test-case id="5-1143" name="valid cast" fullname="FSharpx.Tests.ChoiceTests.valid cast" methodname="valid cast" classname="FSharpx.Tests.ChoiceTests" runstate="Runnable" seed="426846642" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.018165" asserts="1" />
        </test-suite>
        <test-suite type="TestFixture" id="5-1705" name="ContinuationTest" fullname="FSharpx.Tests.ContinuationTest" classname="FSharpx.Tests.ContinuationTest" runstate="Runnable" testcasecount="5" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.042078" total="5" passed="5" failed="0" inconclusive="0" skipped="0" asserts="5">
          <test-case id="5-1706" name="When adding 6 to 7 and applying a continuation to convert to string and replace 1 with a, it should return a3" fullname="FSharpx.Tests.ContinuationTest.When adding 6 to 7 and applying a continuation to convert to string and replace 1 with a, it should return a3" methodname="When adding 6 to 7 and applying a continuation to convert to string and replace 1 with a, it should return a3" classname="FSharpx.Tests.ContinuationTest" runstate="Runnable" seed="1882044674" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.008052" asserts="1" />
          <test-case id="5-1710" name="When running a coroutine it should yield elements in turn" fullname="FSharpx.Tests.ContinuationTest.When running a coroutine it should yield elements in turn" methodname="When running a coroutine it should yield elements in turn" classname="FSharpx.Tests.ContinuationTest" runstate="Runnable" seed="1837201653" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.008561" asserts="1" />
          <test-case id="5-1709" name="When summing a list containing 2 via callCC it should return 43" fullname="FSharpx.Tests.ContinuationTest.When summing a list containing 2 via callCC it should return 43" methodname="When summing a list containing 2 via callCC it should return 43" classname="FSharpx.Tests.ContinuationTest" runstate="Runnable" seed="1662560968" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.006558" asserts="1" />
          <test-case id="5-1708" name="When summing a list without a 2 via callCC it should return 8" fullname="FSharpx.Tests.ContinuationTest.When summing a list without a 2 via callCC it should return 8" methodname="When summing a list without a 2 via callCC it should return 8" classname="FSharpx.Tests.ContinuationTest" runstate="Runnable" seed="1758703639" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000801" asserts="1" />
          <test-case id="5-1707" name="When throwing an exception, it should catch the exception" fullname="FSharpx.Tests.ContinuationTest.When throwing an exception, it should catch the exception" methodname="When throwing an exception, it should catch the exception" classname="FSharpx.Tests.ContinuationTest" runstate="Runnable" seed="1387104511" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.000302" asserts="1" />
        </test-suite>
        <test-suite type="TestFixture" id="5-1000" name="ControlTests" fullname="FSharpx.Tests.ControlTests" classname="FSharpx.Tests.ControlTests" runstate="Runnable" testcasecount="14" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:12Z" duration="10.987726" total="14" passed="14" failed="0" inconclusive="0" skipped="0" asserts="184">
          <test-case id="5-1001" name="AsyncOpenReadTests" fullname="FSharpx.Tests.ControlTests.AsyncOpenReadTests" methodname="AsyncOpenReadTests" classname="FSharpx.Tests.ControlTests" runstate="Runnable" seed="553187350" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.080202" asserts="3" />
          <test-case id="5-1002" name="AsyncOpenReadWriteTest1" fullname="FSharpx.Tests.ControlTests.AsyncOpenReadWriteTest1" methodname="AsyncOpenReadWriteTest1" classname="FSharpx.Tests.ControlTests" runstate="Runnable" seed="1887314503" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.004474" asserts="1" />
          <test-case id="5-1003" name="AsyncOpenReadWriteTest2" fullname="FSharpx.Tests.ControlTests.AsyncOpenReadWriteTest2" methodname="AsyncOpenReadWriteTest2" classname="FSharpx.Tests.ControlTests" runstate="Runnable" seed="1109558719" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.003991" asserts="1" />
          <test-case id="5-1004" name="AsyncOpenReadWriteTest3" fullname="FSharpx.Tests.ControlTests.AsyncOpenReadWriteTest3" methodname="AsyncOpenReadWriteTest3" classname="FSharpx.Tests.ControlTests" runstate="Runnable" seed="2044713815" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.011911" asserts="1" />
          <test-case id="5-1005" name="AsyncOpenTextTest" fullname="FSharpx.Tests.ControlTests.AsyncOpenTextTest" methodname="AsyncOpenTextTest" classname="FSharpx.Tests.ControlTests" runstate="Runnable" seed="420013410" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:01Z" duration="0.002496" asserts="1" />
          <test-case id="5-1013" name="AsyncResultCellAgents" fullname="FSharpx.Tests.ControlTests.AsyncResultCellAgents" methodname="AsyncResultCellAgents" classname="FSharpx.Tests.ControlTests" runstate="Runnable" seed="1538142306" result="Passed" start-time="2016-08-22 10:23:01Z" end-time="2016-08-22 10:23:02Z" duration="0.385725" asserts="1">
            <output><![CDATA[Done
]]></output>
          </test-case>
          <test-case id="5-1014" name="AsyncResultCellLightweightAgents" fullname="FSharpx.Tests.ControlTests.AsyncResultCellLightweightAgents" methodname="AsyncResultCellLightweightAgents" classname="FSharpx.Tests.ControlTests" runstate="Runnable" seed="1007784905" result="Passed" start-time="2016-08-22 10:23:02Z" end-time="2016-08-22 10:23:02Z" duration="0.370436" asserts="1">
            <output><![CDATA[Done
]]></output>
          </test-case>
          <test-case id="5-1012" name="AsyncResultCellTests" fullname="FSharpx.Tests.ControlTests.AsyncResultCellTests" methodname="AsyncResultCellTests" classname="FSharpx.Tests.ControlTests" runstate="Runnable" seed="621787784" result="Passed" start-time="2016-08-22 10:23:02Z" end-time="2016-08-22 10:23:07Z" duration="5.489236" asserts="102" />
          <test-case id="5-1006" name="AsyncWorkerTest16" fullname="FSharpx.Tests.ControlTests.AsyncWorkerTest16" methodname="AsyncWorkerTest16" classname="FSharpx.Tests.ControlTests" runstate="Runnable" seed="628730766" result="Passed" start-time="2016-08-22 10:23:07Z" end-time="2016-08-22 10:23:08Z" duration="0.669084" asserts="4" />
          <test-case id="5-1007" name="AsyncWorkerTest17" fullname="FSharpx.Tests.ControlTests.AsyncWorkerTest17" methodname="AsyncWorkerTest17" classname="FSharpx.Tests.ControlTests" runstate="Runnable" seed="1506952242" result="Passed" start-time="2016-08-22 10:23:08Z" end-time="2016-08-22 10:23:09Z" duration="0.505176" asserts="5" />
          <test-case id="5-1008" name="AsyncWorkerTest18" fullname="FSharpx.Tests.ControlTests.AsyncWorkerTest18" methodname="AsyncWorkerTest18" classname="FSharpx.Tests.ControlTests" runstate="Runnable" seed="312214761" result="Passed" start-time="2016-08-22 10:23:09Z" end-time="2016-08-22 10:23:10Z" duration="1.104498" asserts="5" />
          <test-case id="5-1009" name="AsyncWorkerTest19" fullname="FSharpx.Tests.ControlTests.AsyncWorkerTest19" methodname="AsyncWorkerTest19" classname="FSharpx.Tests.ControlTests" runstate="Runnable" seed="1661331216" result="Passed" start-time="2016-08-22 10:23:10Z" end-time="2016-08-22 10:23:10Z" duration="0.603248" asserts="5" />
          <test-case id="5-1010" name="AsyncWorkerTest20" fullname="FSharpx.Tests.ControlTests.AsyncWorkerTest20" methodname="AsyncWorkerTest20" classname="FSharpx.Tests.ControlTests" runstate="Runnable" seed="680835076" result="Passed" start-time="2016-08-22 10:23:10Z" end-time="2016-08-22 10:23:10Z" duration="0.103983" asserts="4" />
          <test-case id="5-1011" name="AsyncWorkerTest21" fullname="FSharpx.Tests.ControlTests.AsyncWorkerTest21" methodname="AsyncWorkerTest21" classname="FSharpx.Tests.ControlTests" runstate="Runnable" seed="495929184" result="Passed" start-time="2016-08-22 10:23:10Z" end-time="2016-08-22 10:23:12Z" duration="1.600462" asserts="50">
            <output><![CDATA[report 1
report 2
report 3
report 4
report 5
report 6
report 7
report 8
report 9
report 10
report 11
report 12
report 13
report 14
report 15
report 16
report 17
report 18
report 19
report 20
report 21
report 22
report 23
report 24
report 25
report 26
report 27
report 28
report 29
report 30
report 31
report 32
report 33
report 34
report 35
report 36
report 37
report 38
report 39
report 40
report 41
report 42
report 43
report 44
report 45
report 46
report 47
report 48
report 49
]]></output>
          </test-case>
        </test-suite>
        <test-suite type="TestFixture" id="5-1701" name="IterateeTest" fullname="FSharpx.Tests.IterateeTest" classname="FSharpx.Tests.IterateeTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.022001" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="3">
          <test-case id="5-1703" name="test opt should convert a Continue iteratee containing 1 into an iteratee containing Some 1" fullname="FSharpx.Tests.IterateeTest.test opt should convert a Continue iteratee containing 1 into an iteratee containing Some 1" methodname="test opt should convert a Continue iteratee containing 1 into an iteratee containing Some 1" classname="FSharpx.Tests.IterateeTest" runstate="Runnable" seed="672582579" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.007238" asserts="1" />
          <test-case id="5-1702" name="test opt should convert a Done iteratee containing 1 into an iteratee containing Some 1" fullname="FSharpx.Tests.IterateeTest.test opt should convert a Done iteratee containing 1 into an iteratee containing Some 1" methodname="test opt should convert a Done iteratee containing 1 into an iteratee containing Some 1" classname="FSharpx.Tests.IterateeTest" runstate="Runnable" seed="780370477" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000615" asserts="1" />
          <test-case id="5-1704" name="test opt should convert an Error iteratee into an iteratee containing None" fullname="FSharpx.Tests.IterateeTest.test opt should convert an Error iteratee into an iteratee containing None" methodname="test opt should convert an Error iteratee into an iteratee containing None" classname="FSharpx.Tests.IterateeTest" runstate="Runnable" seed="636652033" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.002298" asserts="1" />
        </test-suite>
        <test-suite type="TestFixture" id="5-1109" name="LensExample" fullname="FSharpx.Tests.LensExample" classname="FSharpx.Tests.LensExample" runstate="Runnable" testcasecount="2" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.033011" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="6">
          <test-case id="5-1110" name="dungeon1_validate" fullname="FSharpx.Tests.LensExample.dungeon1_validate" methodname="dungeon1_validate" classname="FSharpx.Tests.LensExample" runstate="Runnable" seed="845844117" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.024979" asserts="2">
            <output><![CDATA[Level 0: Illumination 100
  Room 0 is locked
    Monster 0 is awake
    Monster 1 is asleep
  Room 1 is unlocked
    Monster 0 is awake
    Monster 1 is asleep
Level 1: Illumination 50
  Room 0 is locked
    Monster 0 is awake
    Monster 1 is asleep
  Room 1 is unlocked
    Monster 0 is awake
    Monster 1 is asleep
Level 0: Illumination 100
  Room 0 is locked
    Monster 0 is asleep
    Monster 1 is awake
  Room 1 is unlocked
    Monster 0 is asleep
    Monster 1 is awake
Level 1: Illumination 50
  Room 0 is locked
    Monster 0 is awake
    Monster 1 is asleep
  Room 1 is unlocked
    Monster 0 is awake
    Monster 1 is asleep
Level 0: Illumination 100
  Room 0 is locked
    Monster 0 is awake
    Monster 1 is asleep
  Room 1 is unlocked
    Monster 0 is awake
    Monster 1 is asleep
Level 1: Illumination 50
  Room 0 is unlocked
    Monster 0 is awake
  Room 1 is unlocked
    Monster 0 is awake
    Monster 1 is asleep
]]></output>
          </test-case>
          <test-case id="5-1111" name="dungeon2_validate" fullname="FSharpx.Tests.LensExample.dungeon2_validate" methodname="dungeon2_validate" classname="FSharpx.Tests.LensExample" runstate="Runnable" seed="1338702879" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.001609" asserts="4" />
        </test-suite>
        <test-suite type="TestFixture" id="5-1436" name="ListIterateeTest" fullname="FSharpx.Tests.ListIterateeTest" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" testcasecount="241" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:13Z" duration="1.127854" total="241" passed="241" failed="0" inconclusive="0" skipped="0" asserts="241">
          <test-suite type="ParameterizedMethod" id="5-1630" name="test consume should consume all items" fullname="FSharpx.Tests.ListIterateeTest.test consume should consume all items" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" testcasecount="10" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.044993" total="10" passed="10" failed="0" inconclusive="0" skipped="0" asserts="10">
            <properties>
              <property name="_JOINTYPE" value="Sequential" />
            </properties>
            <test-case id="5-1620" name="test consume should consume all items(0)" fullname="FSharpx.Tests.ListIterateeTest.test consume should consume all items(0)" methodname="test consume should consume all items" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="852105920" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.004223" asserts="1" />
            <test-case id="5-1621" name="test consume should consume all items(1)" fullname="FSharpx.Tests.ListIterateeTest.test consume should consume all items(1)" methodname="test consume should consume all items" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1157069027" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000381" asserts="1" />
            <test-case id="5-1622" name="test consume should consume all items(2)" fullname="FSharpx.Tests.ListIterateeTest.test consume should consume all items(2)" methodname="test consume should consume all items" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1760927921" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000064" asserts="1" />
            <test-case id="5-1623" name="test consume should consume all items(3)" fullname="FSharpx.Tests.ListIterateeTest.test consume should consume all items(3)" methodname="test consume should consume all items" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="780940631" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000071" asserts="1" />
            <test-case id="5-1624" name="test consume should consume all items(4)" fullname="FSharpx.Tests.ListIterateeTest.test consume should consume all items(4)" methodname="test consume should consume all items" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="2102633686" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000068" asserts="1" />
            <test-case id="5-1625" name="test consume should consume all items(5)" fullname="FSharpx.Tests.ListIterateeTest.test consume should consume all items(5)" methodname="test consume should consume all items" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="276553807" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000088" asserts="1" />
            <test-case id="5-1626" name="test consume should consume all items(6)" fullname="FSharpx.Tests.ListIterateeTest.test consume should consume all items(6)" methodname="test consume should consume all items" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="2109671756" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000062" asserts="1" />
            <test-case id="5-1627" name="test consume should consume all items(7)" fullname="FSharpx.Tests.ListIterateeTest.test consume should consume all items(7)" methodname="test consume should consume all items" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="940498351" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000059" asserts="1" />
            <test-case id="5-1628" name="test consume should consume all items(8)" fullname="FSharpx.Tests.ListIterateeTest.test consume should consume all items(8)" methodname="test consume should consume all items" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="328271566" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000062" asserts="1" />
            <test-case id="5-1629" name="test consume should consume all items(9)" fullname="FSharpx.Tests.ListIterateeTest.test consume should consume all items(9)" methodname="test consume should consume all items" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1498626510" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000148" asserts="1" />
          </test-suite>
          <test-suite type="ParameterizedMethod" id="5-1641" name="test consume should consume all items at once" fullname="FSharpx.Tests.ListIterateeTest.test consume should consume all items at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" testcasecount="10" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.035729" total="10" passed="10" failed="0" inconclusive="0" skipped="0" asserts="10">
            <properties>
              <property name="_JOINTYPE" value="Sequential" />
            </properties>
            <test-case id="5-1631" name="test consume should consume all items at once(0)" fullname="FSharpx.Tests.ListIterateeTest.test consume should consume all items at once(0)" methodname="test consume should consume all items at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="526777754" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.001298" asserts="1" />
            <test-case id="5-1632" name="test consume should consume all items at once(1)" fullname="FSharpx.Tests.ListIterateeTest.test consume should consume all items at once(1)" methodname="test consume should consume all items at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="459875262" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000091" asserts="1" />
            <test-case id="5-1633" name="test consume should consume all items at once(2)" fullname="FSharpx.Tests.ListIterateeTest.test consume should consume all items at once(2)" methodname="test consume should consume all items at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1035889406" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000077" asserts="1" />
            <test-case id="5-1634" name="test consume should consume all items at once(3)" fullname="FSharpx.Tests.ListIterateeTest.test consume should consume all items at once(3)" methodname="test consume should consume all items at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="176546149" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000070" asserts="1" />
            <test-case id="5-1635" name="test consume should consume all items at once(4)" fullname="FSharpx.Tests.ListIterateeTest.test consume should consume all items at once(4)" methodname="test consume should consume all items at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="168228472" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000062" asserts="1" />
            <test-case id="5-1636" name="test consume should consume all items at once(5)" fullname="FSharpx.Tests.ListIterateeTest.test consume should consume all items at once(5)" methodname="test consume should consume all items at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="938105998" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000054" asserts="1" />
            <test-case id="5-1637" name="test consume should consume all items at once(6)" fullname="FSharpx.Tests.ListIterateeTest.test consume should consume all items at once(6)" methodname="test consume should consume all items at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="238550583" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000053" asserts="1" />
            <test-case id="5-1638" name="test consume should consume all items at once(7)" fullname="FSharpx.Tests.ListIterateeTest.test consume should consume all items at once(7)" methodname="test consume should consume all items at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1731020177" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000072" asserts="1" />
            <test-case id="5-1639" name="test consume should consume all items at once(8)" fullname="FSharpx.Tests.ListIterateeTest.test consume should consume all items at once(8)" methodname="test consume should consume all items at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1995870844" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000067" asserts="1" />
            <test-case id="5-1640" name="test consume should consume all items at once(9)" fullname="FSharpx.Tests.ListIterateeTest.test consume should consume all items at once(9)" methodname="test consume should consume all items at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="173472901" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000064" asserts="1" />
          </test-suite>
          <test-suite type="ParameterizedMethod" id="5-1652" name="test consume should consume all items when enumerating in chunks" fullname="FSharpx.Tests.ListIterateeTest.test consume should consume all items when enumerating in chunks" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" testcasecount="10" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.044343" total="10" passed="10" failed="0" inconclusive="0" skipped="0" asserts="10">
            <properties>
              <property name="_JOINTYPE" value="Sequential" />
            </properties>
            <test-case id="5-1642" name="test consume should consume all items when enumerating in chunks(0)" fullname="FSharpx.Tests.ListIterateeTest.test consume should consume all items when enumerating in chunks(0)" methodname="test consume should consume all items when enumerating in chunks" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1644830265" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.003100" asserts="1" />
            <test-case id="5-1643" name="test consume should consume all items when enumerating in chunks(1)" fullname="FSharpx.Tests.ListIterateeTest.test consume should consume all items when enumerating in chunks(1)" methodname="test consume should consume all items when enumerating in chunks" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1442666383" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000257" asserts="1" />
            <test-case id="5-1644" name="test consume should consume all items when enumerating in chunks(2)" fullname="FSharpx.Tests.ListIterateeTest.test consume should consume all items when enumerating in chunks(2)" methodname="test consume should consume all items when enumerating in chunks" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="889478566" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000123" asserts="1" />
            <test-case id="5-1645" name="test consume should consume all items when enumerating in chunks(3)" fullname="FSharpx.Tests.ListIterateeTest.test consume should consume all items when enumerating in chunks(3)" methodname="test consume should consume all items when enumerating in chunks" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="814488426" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000102" asserts="1" />
            <test-case id="5-1646" name="test consume should consume all items when enumerating in chunks(4)" fullname="FSharpx.Tests.ListIterateeTest.test consume should consume all items when enumerating in chunks(4)" methodname="test consume should consume all items when enumerating in chunks" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1144825515" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000062" asserts="1" />
            <test-case id="5-1647" name="test consume should consume all items when enumerating in chunks(5)" fullname="FSharpx.Tests.ListIterateeTest.test consume should consume all items when enumerating in chunks(5)" methodname="test consume should consume all items when enumerating in chunks" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1980942184" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000078" asserts="1" />
            <test-case id="5-1648" name="test consume should consume all items when enumerating in chunks(6)" fullname="FSharpx.Tests.ListIterateeTest.test consume should consume all items when enumerating in chunks(6)" methodname="test consume should consume all items when enumerating in chunks" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="499475659" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000072" asserts="1" />
            <test-case id="5-1649" name="test consume should consume all items when enumerating in chunks(7)" fullname="FSharpx.Tests.ListIterateeTest.test consume should consume all items when enumerating in chunks(7)" methodname="test consume should consume all items when enumerating in chunks" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1500247972" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000065" asserts="1" />
            <test-case id="5-1650" name="test consume should consume all items when enumerating in chunks(8)" fullname="FSharpx.Tests.ListIterateeTest.test consume should consume all items when enumerating in chunks(8)" methodname="test consume should consume all items when enumerating in chunks" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="444716793" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000097" asserts="1" />
            <test-case id="5-1651" name="test consume should consume all items when enumerating in chunks(9)" fullname="FSharpx.Tests.ListIterateeTest.test consume should consume all items when enumerating in chunks(9)" methodname="test consume should consume all items when enumerating in chunks" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1032273473" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000054" asserts="1" />
          </test-suite>
          <test-suite type="ParameterizedMethod" id="5-1474" name="test drop should drop the first n items" fullname="FSharpx.Tests.ListIterateeTest.test drop should drop the first n items" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" testcasecount="10" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.041918" total="10" passed="10" failed="0" inconclusive="0" skipped="0" asserts="10">
            <properties>
              <property name="_JOINTYPE" value="Sequential" />
            </properties>
            <test-case id="5-1464" name="test drop should drop the first n items(0)" fullname="FSharpx.Tests.ListIterateeTest.test drop should drop the first n items(0)" methodname="test drop should drop the first n items" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="916941105" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.004274" asserts="1" />
            <test-case id="5-1465" name="test drop should drop the first n items(1)" fullname="FSharpx.Tests.ListIterateeTest.test drop should drop the first n items(1)" methodname="test drop should drop the first n items" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="981197081" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.001458" asserts="1" />
            <test-case id="5-1466" name="test drop should drop the first n items(2)" fullname="FSharpx.Tests.ListIterateeTest.test drop should drop the first n items(2)" methodname="test drop should drop the first n items" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="568919769" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000062" asserts="1" />
            <test-case id="5-1467" name="test drop should drop the first n items(3)" fullname="FSharpx.Tests.ListIterateeTest.test drop should drop the first n items(3)" methodname="test drop should drop the first n items" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="343650521" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000098" asserts="1" />
            <test-case id="5-1468" name="test drop should drop the first n items(4)" fullname="FSharpx.Tests.ListIterateeTest.test drop should drop the first n items(4)" methodname="test drop should drop the first n items" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="335547361" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000080" asserts="1" />
            <test-case id="5-1469" name="test drop should drop the first n items(5)" fullname="FSharpx.Tests.ListIterateeTest.test drop should drop the first n items(5)" methodname="test drop should drop the first n items" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1214011864" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000058" asserts="1" />
            <test-case id="5-1470" name="test drop should drop the first n items(6)" fullname="FSharpx.Tests.ListIterateeTest.test drop should drop the first n items(6)" methodname="test drop should drop the first n items" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="2052761801" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000071" asserts="1" />
            <test-case id="5-1471" name="test drop should drop the first n items(7)" fullname="FSharpx.Tests.ListIterateeTest.test drop should drop the first n items(7)" methodname="test drop should drop the first n items" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1310000691" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000067" asserts="1" />
            <test-case id="5-1472" name="test drop should drop the first n items(8)" fullname="FSharpx.Tests.ListIterateeTest.test drop should drop the first n items(8)" methodname="test drop should drop the first n items" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="977657681" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000101" asserts="1" />
            <test-case id="5-1473" name="test drop should drop the first n items(9)" fullname="FSharpx.Tests.ListIterateeTest.test drop should drop the first n items(9)" methodname="test drop should drop the first n items" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1410000712" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000128" asserts="1" />
          </test-suite>
          <test-suite type="ParameterizedMethod" id="5-1485" name="test drop should drop the first n items at once" fullname="FSharpx.Tests.ListIterateeTest.test drop should drop the first n items at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" testcasecount="10" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.041057" total="10" passed="10" failed="0" inconclusive="0" skipped="0" asserts="10">
            <properties>
              <property name="_JOINTYPE" value="Sequential" />
            </properties>
            <test-case id="5-1475" name="test drop should drop the first n items at once(0)" fullname="FSharpx.Tests.ListIterateeTest.test drop should drop the first n items at once(0)" methodname="test drop should drop the first n items at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="251197882" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000835" asserts="1" />
            <test-case id="5-1476" name="test drop should drop the first n items at once(1)" fullname="FSharpx.Tests.ListIterateeTest.test drop should drop the first n items at once(1)" methodname="test drop should drop the first n items at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="93850554" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000073" asserts="1" />
            <test-case id="5-1477" name="test drop should drop the first n items at once(2)" fullname="FSharpx.Tests.ListIterateeTest.test drop should drop the first n items at once(2)" methodname="test drop should drop the first n items at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1690825087" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000065" asserts="1" />
            <test-case id="5-1478" name="test drop should drop the first n items at once(3)" fullname="FSharpx.Tests.ListIterateeTest.test drop should drop the first n items at once(3)" methodname="test drop should drop the first n items at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="176712078" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000067" asserts="1" />
            <test-case id="5-1479" name="test drop should drop the first n items at once(4)" fullname="FSharpx.Tests.ListIterateeTest.test drop should drop the first n items at once(4)" methodname="test drop should drop the first n items at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1351478856" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000053" asserts="1" />
            <test-case id="5-1480" name="test drop should drop the first n items at once(5)" fullname="FSharpx.Tests.ListIterateeTest.test drop should drop the first n items at once(5)" methodname="test drop should drop the first n items at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="345737278" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000074" asserts="1" />
            <test-case id="5-1481" name="test drop should drop the first n items at once(6)" fullname="FSharpx.Tests.ListIterateeTest.test drop should drop the first n items at once(6)" methodname="test drop should drop the first n items at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1649243979" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000060" asserts="1" />
            <test-case id="5-1482" name="test drop should drop the first n items at once(7)" fullname="FSharpx.Tests.ListIterateeTest.test drop should drop the first n items at once(7)" methodname="test drop should drop the first n items at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1747401530" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000070" asserts="1" />
            <test-case id="5-1483" name="test drop should drop the first n items at once(8)" fullname="FSharpx.Tests.ListIterateeTest.test drop should drop the first n items at once(8)" methodname="test drop should drop the first n items at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1133672357" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000091" asserts="1" />
            <test-case id="5-1484" name="test drop should drop the first n items at once(9)" fullname="FSharpx.Tests.ListIterateeTest.test drop should drop the first n items at once(9)" methodname="test drop should drop the first n items at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="712130526" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000068" asserts="1" />
          </test-suite>
          <test-suite type="ParameterizedMethod" id="5-1496" name="test drop should drop the first n items when chunked" fullname="FSharpx.Tests.ListIterateeTest.test drop should drop the first n items when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" testcasecount="10" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.041272" total="10" passed="10" failed="0" inconclusive="0" skipped="0" asserts="10">
            <properties>
              <property name="_JOINTYPE" value="Sequential" />
            </properties>
            <test-case id="5-1486" name="test drop should drop the first n items when chunked(0)" fullname="FSharpx.Tests.ListIterateeTest.test drop should drop the first n items when chunked(0)" methodname="test drop should drop the first n items when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="43732154" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000843" asserts="1" />
            <test-case id="5-1487" name="test drop should drop the first n items when chunked(1)" fullname="FSharpx.Tests.ListIterateeTest.test drop should drop the first n items when chunked(1)" methodname="test drop should drop the first n items when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="633797856" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000058" asserts="1" />
            <test-case id="5-1488" name="test drop should drop the first n items when chunked(2)" fullname="FSharpx.Tests.ListIterateeTest.test drop should drop the first n items when chunked(2)" methodname="test drop should drop the first n items when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1331727964" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000061" asserts="1" />
            <test-case id="5-1489" name="test drop should drop the first n items when chunked(3)" fullname="FSharpx.Tests.ListIterateeTest.test drop should drop the first n items when chunked(3)" methodname="test drop should drop the first n items when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="476910437" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000087" asserts="1" />
            <test-case id="5-1490" name="test drop should drop the first n items when chunked(4)" fullname="FSharpx.Tests.ListIterateeTest.test drop should drop the first n items when chunked(4)" methodname="test drop should drop the first n items when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="524561069" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000102" asserts="1" />
            <test-case id="5-1491" name="test drop should drop the first n items when chunked(5)" fullname="FSharpx.Tests.ListIterateeTest.test drop should drop the first n items when chunked(5)" methodname="test drop should drop the first n items when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1313935456" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000089" asserts="1" />
            <test-case id="5-1492" name="test drop should drop the first n items when chunked(6)" fullname="FSharpx.Tests.ListIterateeTest.test drop should drop the first n items when chunked(6)" methodname="test drop should drop the first n items when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="34344199" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000056" asserts="1" />
            <test-case id="5-1493" name="test drop should drop the first n items when chunked(7)" fullname="FSharpx.Tests.ListIterateeTest.test drop should drop the first n items when chunked(7)" methodname="test drop should drop the first n items when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="68343322" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000080" asserts="1" />
            <test-case id="5-1494" name="test drop should drop the first n items when chunked(8)" fullname="FSharpx.Tests.ListIterateeTest.test drop should drop the first n items when chunked(8)" methodname="test drop should drop the first n items when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1660756909" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000054" asserts="1" />
            <test-case id="5-1495" name="test drop should drop the first n items when chunked(9)" fullname="FSharpx.Tests.ListIterateeTest.test drop should drop the first n items when chunked(9)" methodname="test drop should drop the first n items when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1628023851" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000056" asserts="1" />
          </test-suite>
          <test-case id="5-1500" name="test dropUntil should drop anything before the first space" fullname="FSharpx.Tests.ListIterateeTest.test dropUntil should drop anything before the first space" methodname="test dropUntil should drop anything before the first space" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="2012947781" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.008657" asserts="1" />
          <test-case id="5-1501" name="test dropUntil should drop anything before the first space at once" fullname="FSharpx.Tests.ListIterateeTest.test dropUntil should drop anything before the first space at once" methodname="test dropUntil should drop anything before the first space at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1745787484" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.001511" asserts="1" />
          <test-case id="5-1502" name="test dropUntil should drop anything before the first space when chunked" fullname="FSharpx.Tests.ListIterateeTest.test dropUntil should drop anything before the first space when chunked" methodname="test dropUntil should drop anything before the first space when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1566418815" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.002291" asserts="1" />
          <test-case id="5-1497" name="test dropWhile should drop anything before the first space" fullname="FSharpx.Tests.ListIterateeTest.test dropWhile should drop anything before the first space" methodname="test dropWhile should drop anything before the first space" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="318144552" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.001689" asserts="1" />
          <test-case id="5-1498" name="test dropWhile should drop anything before the first space at once" fullname="FSharpx.Tests.ListIterateeTest.test dropWhile should drop anything before the first space at once" methodname="test dropWhile should drop anything before the first space at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1783011210" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000830" asserts="1" />
          <test-case id="5-1499" name="test dropWhile should drop anything before the first space when chunked" fullname="FSharpx.Tests.ListIterateeTest.test dropWhile should drop anything before the first space when chunked" methodname="test dropWhile should drop anything before the first space when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="696366358" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.001853" asserts="1" />
          <test-case id="5-1695" name="test filter should filter filter the value for which the given predicate returns false" fullname="FSharpx.Tests.ListIterateeTest.test filter should filter filter the value for which the given predicate returns false" methodname="test filter should filter filter the value for which the given predicate returns false" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="881586943" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.013139" asserts="1" />
          <test-case id="5-1696" name="test filter should filter the value for which the given predicate returns false at once" fullname="FSharpx.Tests.ListIterateeTest.test filter should filter the value for which the given predicate returns false at once" methodname="test filter should filter the value for which the given predicate returns false at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1477250341" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.001217" asserts="1" />
          <test-case id="5-1697" name="test filter should filter the value for which the given predicate returns false when enumerating in chunks" fullname="FSharpx.Tests.ListIterateeTest.test filter should filter the value for which the given predicate returns false when enumerating in chunks" methodname="test filter should filter the value for which the given predicate returns false when enumerating in chunks" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1733912360" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000752" asserts="1" />
          <test-suite type="ParameterizedMethod" id="5-1455" name="test head should return the value and remove it from the stream" fullname="FSharpx.Tests.ListIterateeTest.test head should return the value and remove it from the stream" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.012079" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="3">
            <test-case id="5-1452" name="test head should return the value and remove it from the stream([],null)" fullname="FSharpx.Tests.ListIterateeTest.test head should return the value and remove it from the stream([],null)" methodname="test head should return the value and remove it from the stream" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1159905728" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000581" asserts="1" />
            <test-case id="5-1453" name="test head should return the value and remove it from the stream([c],Some(c))" fullname="FSharpx.Tests.ListIterateeTest.test head should return the value and remove it from the stream([c],Some(c))" methodname="test head should return the value and remove it from the stream" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1058811637" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000222" asserts="1" />
            <test-case id="5-1454" name="test head should return the value and remove it from the stream([c; h; a; ... ],Some(c))" fullname="FSharpx.Tests.ListIterateeTest.test head should return the value and remove it from the stream([c; h; a; ... ],Some(c))" methodname="test head should return the value and remove it from the stream" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1076852316" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000067" asserts="1" />
          </test-suite>
          <test-suite type="ParameterizedMethod" id="5-1459" name="test head should return the value and remove it from the stream at once" fullname="FSharpx.Tests.ListIterateeTest.test head should return the value and remove it from the stream at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.012032" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="3">
            <test-case id="5-1456" name="test head should return the value and remove it from the stream at once([],null)" fullname="FSharpx.Tests.ListIterateeTest.test head should return the value and remove it from the stream at once([],null)" methodname="test head should return the value and remove it from the stream at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1311403271" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000490" asserts="1" />
            <test-case id="5-1457" name="test head should return the value and remove it from the stream at once([c],Some(c))" fullname="FSharpx.Tests.ListIterateeTest.test head should return the value and remove it from the stream at once([c],Some(c))" methodname="test head should return the value and remove it from the stream at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="409761740" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000127" asserts="1" />
            <test-case id="5-1458" name="test head should return the value and remove it from the stream at once([c; h; a; ... ],Some(c))" fullname="FSharpx.Tests.ListIterateeTest.test head should return the value and remove it from the stream at once([c; h; a; ... ],Some(c))" methodname="test head should return the value and remove it from the stream at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1645849434" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000092" asserts="1" />
          </test-suite>
          <test-suite type="ParameterizedMethod" id="5-1463" name="test head should return the value and remove it from the stream when chunked" fullname="FSharpx.Tests.ListIterateeTest.test head should return the value and remove it from the stream when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.008652" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="3">
            <test-case id="5-1460" name="test head should return the value and remove it from the stream when chunked([],null)" fullname="FSharpx.Tests.ListIterateeTest.test head should return the value and remove it from the stream when chunked([],null)" methodname="test head should return the value and remove it from the stream when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="132584198" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000404" asserts="1" />
            <test-case id="5-1461" name="test head should return the value and remove it from the stream when chunked([c],Some(c))" fullname="FSharpx.Tests.ListIterateeTest.test head should return the value and remove it from the stream when chunked([c],Some(c))" methodname="test head should return the value and remove it from the stream when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1597833844" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000069" asserts="1" />
            <test-case id="5-1462" name="test head should return the value and remove it from the stream when chunked([c; h; a; ... ],Some(c))" fullname="FSharpx.Tests.ListIterateeTest.test head should return the value and remove it from the stream when chunked([c; h; a; ... ],Some(c))" methodname="test head should return the value and remove it from the stream when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1549668620" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000059" asserts="1" />
          </test-suite>
          <test-case id="5-1549" name="test heads should count the correct number of newline characters in a set of headers" fullname="FSharpx.Tests.ListIterateeTest.test heads should count the correct number of newline characters in a set of headers" methodname="test heads should count the correct number of newline characters in a set of headers" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="796989779" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.006923" asserts="1" />
          <test-case id="5-1550" name="test heads should count the correct number of newline characters in a set of headers when chunked" fullname="FSharpx.Tests.ListIterateeTest.test heads should count the correct number of newline characters in a set of headers when chunked" methodname="test heads should count the correct number of newline characters in a set of headers when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="903554725" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.001311" asserts="1" />
          <test-case id="5-1548" name="test heads should count the correct number of newline characters in a set of headers when enumerated char by char" fullname="FSharpx.Tests.ListIterateeTest.test heads should count the correct number of newline characters in a set of headers when enumerated char by char" methodname="test heads should count the correct number of newline characters in a set of headers when enumerated char by char" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="354247332" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.001251" asserts="1" />
          <test-case id="5-1546" name="test heads should count the number of characters in a set of headers" fullname="FSharpx.Tests.ListIterateeTest.test heads should count the number of characters in a set of headers" methodname="test heads should count the number of characters in a set of headers" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="756451735" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000582" asserts="1" />
          <test-case id="5-1547" name="test heads should count the number of characters in a set of headers when chunked" fullname="FSharpx.Tests.ListIterateeTest.test heads should count the number of characters in a set of headers when chunked" methodname="test heads should count the number of characters in a set of headers when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1952141477" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000617" asserts="1" />
          <test-case id="5-1545" name="test heads should count the number of characters in a set of headers when enumerated one at a time" fullname="FSharpx.Tests.ListIterateeTest.test heads should count the number of characters in a set of headers when enumerated one at a time" methodname="test heads should count the number of characters in a set of headers when enumerated one at a time" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="21895417" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000788" asserts="1" />
          <test-suite type="ParameterizedMethod" id="5-1663" name="test isolate and consume should take the first n items from the stream" fullname="FSharpx.Tests.ListIterateeTest.test isolate and consume should take the first n items from the stream" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" testcasecount="10" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:13Z" duration="0.044344" total="10" passed="10" failed="0" inconclusive="0" skipped="0" asserts="10">
            <properties>
              <property name="_JOINTYPE" value="Sequential" />
            </properties>
            <test-case id="5-1653" name="test isolate and consume should take the first n items from the stream(0)" fullname="FSharpx.Tests.ListIterateeTest.test isolate and consume should take the first n items from the stream(0)" methodname="test isolate and consume should take the first n items from the stream" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1938553373" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.002272" asserts="1" />
            <test-case id="5-1654" name="test isolate and consume should take the first n items from the stream(1)" fullname="FSharpx.Tests.ListIterateeTest.test isolate and consume should take the first n items from the stream(1)" methodname="test isolate and consume should take the first n items from the stream" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="202709321" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.001371" asserts="1" />
            <test-case id="5-1655" name="test isolate and consume should take the first n items from the stream(2)" fullname="FSharpx.Tests.ListIterateeTest.test isolate and consume should take the first n items from the stream(2)" methodname="test isolate and consume should take the first n items from the stream" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1646179626" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000171" asserts="1" />
            <test-case id="5-1656" name="test isolate and consume should take the first n items from the stream(3)" fullname="FSharpx.Tests.ListIterateeTest.test isolate and consume should take the first n items from the stream(3)" methodname="test isolate and consume should take the first n items from the stream" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="227219818" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000135" asserts="1" />
            <test-case id="5-1657" name="test isolate and consume should take the first n items from the stream(4)" fullname="FSharpx.Tests.ListIterateeTest.test isolate and consume should take the first n items from the stream(4)" methodname="test isolate and consume should take the first n items from the stream" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1435661360" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000136" asserts="1" />
            <test-case id="5-1658" name="test isolate and consume should take the first n items from the stream(5)" fullname="FSharpx.Tests.ListIterateeTest.test isolate and consume should take the first n items from the stream(5)" methodname="test isolate and consume should take the first n items from the stream" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="83066516" result="Passed" start-time="2016-08-22 10:23:12Z" end-time="2016-08-22 10:23:12Z" duration="0.000135" asserts="1" />
            <test-case id="5-1659" name="test isolate and consume should take the first n items from the stream(6)" fullname="FSharpx.Tests.ListIterateeTest.test isolate and consume should take the first n items from the stream(6)" methodname="test isolate and consume should take the first n items from the stream" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="846676537" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000111" asserts="1" />
            <test-case id="5-1660" name="test isolate and consume should take the first n items from the stream(7)" fullname="FSharpx.Tests.ListIterateeTest.test isolate and consume should take the first n items from the stream(7)" methodname="test isolate and consume should take the first n items from the stream" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="2043081505" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000258" asserts="1" />
            <test-case id="5-1661" name="test isolate and consume should take the first n items from the stream(8)" fullname="FSharpx.Tests.ListIterateeTest.test isolate and consume should take the first n items from the stream(8)" methodname="test isolate and consume should take the first n items from the stream" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1930358799" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000137" asserts="1" />
            <test-case id="5-1662" name="test isolate and consume should take the first n items from the stream(9)" fullname="FSharpx.Tests.ListIterateeTest.test isolate and consume should take the first n items from the stream(9)" methodname="test isolate and consume should take the first n items from the stream" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="896043073" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000107" asserts="1" />
          </test-suite>
          <test-suite type="ParameterizedMethod" id="5-1674" name="test isolate and consume should take the first n items from the stream at once" fullname="FSharpx.Tests.ListIterateeTest.test isolate and consume should take the first n items from the stream at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" testcasecount="10" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.035535" total="10" passed="10" failed="0" inconclusive="0" skipped="0" asserts="10">
            <properties>
              <property name="_JOINTYPE" value="Sequential" />
            </properties>
            <test-case id="5-1664" name="test isolate and consume should take the first n items from the stream at once(0)" fullname="FSharpx.Tests.ListIterateeTest.test isolate and consume should take the first n items from the stream at once(0)" methodname="test isolate and consume should take the first n items from the stream at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="93774136" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000734" asserts="1" />
            <test-case id="5-1665" name="test isolate and consume should take the first n items from the stream at once(1)" fullname="FSharpx.Tests.ListIterateeTest.test isolate and consume should take the first n items from the stream at once(1)" methodname="test isolate and consume should take the first n items from the stream at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1888792031" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000134" asserts="1" />
            <test-case id="5-1666" name="test isolate and consume should take the first n items from the stream at once(2)" fullname="FSharpx.Tests.ListIterateeTest.test isolate and consume should take the first n items from the stream at once(2)" methodname="test isolate and consume should take the first n items from the stream at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1115539781" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000069" asserts="1" />
            <test-case id="5-1667" name="test isolate and consume should take the first n items from the stream at once(3)" fullname="FSharpx.Tests.ListIterateeTest.test isolate and consume should take the first n items from the stream at once(3)" methodname="test isolate and consume should take the first n items from the stream at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1981241458" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000090" asserts="1" />
            <test-case id="5-1668" name="test isolate and consume should take the first n items from the stream at once(4)" fullname="FSharpx.Tests.ListIterateeTest.test isolate and consume should take the first n items from the stream at once(4)" methodname="test isolate and consume should take the first n items from the stream at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1952395301" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000106" asserts="1" />
            <test-case id="5-1669" name="test isolate and consume should take the first n items from the stream at once(5)" fullname="FSharpx.Tests.ListIterateeTest.test isolate and consume should take the first n items from the stream at once(5)" methodname="test isolate and consume should take the first n items from the stream at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1928232636" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000091" asserts="1" />
            <test-case id="5-1670" name="test isolate and consume should take the first n items from the stream at once(6)" fullname="FSharpx.Tests.ListIterateeTest.test isolate and consume should take the first n items from the stream at once(6)" methodname="test isolate and consume should take the first n items from the stream at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="508614263" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000086" asserts="1" />
            <test-case id="5-1671" name="test isolate and consume should take the first n items from the stream at once(7)" fullname="FSharpx.Tests.ListIterateeTest.test isolate and consume should take the first n items from the stream at once(7)" methodname="test isolate and consume should take the first n items from the stream at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="945637334" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000084" asserts="1" />
            <test-case id="5-1672" name="test isolate and consume should take the first n items from the stream at once(8)" fullname="FSharpx.Tests.ListIterateeTest.test isolate and consume should take the first n items from the stream at once(8)" methodname="test isolate and consume should take the first n items from the stream at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1644480789" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000178" asserts="1" />
            <test-case id="5-1673" name="test isolate and consume should take the first n items from the stream at once(9)" fullname="FSharpx.Tests.ListIterateeTest.test isolate and consume should take the first n items from the stream at once(9)" methodname="test isolate and consume should take the first n items from the stream at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="935734198" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000075" asserts="1" />
          </test-suite>
          <test-suite type="ParameterizedMethod" id="5-1685" name="test isolate and consume should take the first n items when chunked" fullname="FSharpx.Tests.ListIterateeTest.test isolate and consume should take the first n items when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" testcasecount="10" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.041059" total="10" passed="10" failed="0" inconclusive="0" skipped="0" asserts="10">
            <properties>
              <property name="_JOINTYPE" value="Sequential" />
            </properties>
            <test-case id="5-1675" name="test isolate and consume should take the first n items when chunked(0)" fullname="FSharpx.Tests.ListIterateeTest.test isolate and consume should take the first n items when chunked(0)" methodname="test isolate and consume should take the first n items when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="933756355" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000568" asserts="1" />
            <test-case id="5-1676" name="test isolate and consume should take the first n items when chunked(1)" fullname="FSharpx.Tests.ListIterateeTest.test isolate and consume should take the first n items when chunked(1)" methodname="test isolate and consume should take the first n items when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="333909914" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000098" asserts="1" />
            <test-case id="5-1677" name="test isolate and consume should take the first n items when chunked(2)" fullname="FSharpx.Tests.ListIterateeTest.test isolate and consume should take the first n items when chunked(2)" methodname="test isolate and consume should take the first n items when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1318162189" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000098" asserts="1" />
            <test-case id="5-1678" name="test isolate and consume should take the first n items when chunked(3)" fullname="FSharpx.Tests.ListIterateeTest.test isolate and consume should take the first n items when chunked(3)" methodname="test isolate and consume should take the first n items when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1147792041" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000064" asserts="1" />
            <test-case id="5-1679" name="test isolate and consume should take the first n items when chunked(4)" fullname="FSharpx.Tests.ListIterateeTest.test isolate and consume should take the first n items when chunked(4)" methodname="test isolate and consume should take the first n items when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="90695054" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000067" asserts="1" />
            <test-case id="5-1680" name="test isolate and consume should take the first n items when chunked(5)" fullname="FSharpx.Tests.ListIterateeTest.test isolate and consume should take the first n items when chunked(5)" methodname="test isolate and consume should take the first n items when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1658880351" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000140" asserts="1" />
            <test-case id="5-1681" name="test isolate and consume should take the first n items when chunked(6)" fullname="FSharpx.Tests.ListIterateeTest.test isolate and consume should take the first n items when chunked(6)" methodname="test isolate and consume should take the first n items when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1358140781" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000160" asserts="1" />
            <test-case id="5-1682" name="test isolate and consume should take the first n items when chunked(7)" fullname="FSharpx.Tests.ListIterateeTest.test isolate and consume should take the first n items when chunked(7)" methodname="test isolate and consume should take the first n items when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1980803518" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000110" asserts="1" />
            <test-case id="5-1683" name="test isolate and consume should take the first n items when chunked(8)" fullname="FSharpx.Tests.ListIterateeTest.test isolate and consume should take the first n items when chunked(8)" methodname="test isolate and consume should take the first n items when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="2078971671" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000059" asserts="1" />
            <test-case id="5-1684" name="test isolate and consume should take the first n items when chunked(9)" fullname="FSharpx.Tests.ListIterateeTest.test isolate and consume should take the first n items when chunked(9)" methodname="test isolate and consume should take the first n items when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1686611661" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000064" asserts="1" />
          </test-suite>
          <test-case id="5-1689" name="test isolateUntil and consume should correctly split the input" fullname="FSharpx.Tests.ListIterateeTest.test isolateUntil and consume should correctly split the input" methodname="test isolateUntil and consume should correctly split the input" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1220471157" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.005034" asserts="1" />
          <test-case id="5-1690" name="test isolateUntil and consume should correctly split the input at once" fullname="FSharpx.Tests.ListIterateeTest.test isolateUntil and consume should correctly split the input at once" methodname="test isolateUntil and consume should correctly split the input at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1815437297" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000464" asserts="1" />
          <test-case id="5-1691" name="test isolateUntil and consume should correctly split the input when enumerating in chunks" fullname="FSharpx.Tests.ListIterateeTest.test isolateUntil and consume should correctly split the input when enumerating in chunks" methodname="test isolateUntil and consume should correctly split the input when enumerating in chunks" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1087767462" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000864" asserts="1" />
          <test-case id="5-1686" name="test isolateWhile and consume should take anything before the first space" fullname="FSharpx.Tests.ListIterateeTest.test isolateWhile and consume should take anything before the first space" methodname="test isolateWhile and consume should take anything before the first space" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1568583531" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.002532" asserts="1" />
          <test-case id="5-1687" name="test isolateWhile and consume should take anything before the first space at once" fullname="FSharpx.Tests.ListIterateeTest.test isolateWhile and consume should take anything before the first space at once" methodname="test isolateWhile and consume should take anything before the first space at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1347740673" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000482" asserts="1" />
          <test-case id="5-1688" name="test isolateWhile and consume should take anything before the first space when enumerating in chunks" fullname="FSharpx.Tests.ListIterateeTest.test isolateWhile and consume should take anything before the first space when enumerating in chunks" methodname="test isolateWhile and consume should take anything before the first space when enumerating in chunks" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="259738609" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000479" asserts="1" />
          <test-case id="5-1437" name="test length should calculate the length of the list without modification" fullname="FSharpx.Tests.ListIterateeTest.test length should calculate the length of the list without modification" methodname="test length should calculate the length of the list without modification" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="756884340" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.003050" asserts="1" />
          <test-case id="5-1438" name="test length should calculate the length of the list without modification at once" fullname="FSharpx.Tests.ListIterateeTest.test length should calculate the length of the list without modification at once" methodname="test length should calculate the length of the list without modification at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="489890073" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.001063" asserts="1" />
          <test-case id="5-1439" name="test length should calculate the length of the list without modification when chunked" fullname="FSharpx.Tests.ListIterateeTest.test length should calculate the length of the list without modification when chunked" methodname="test length should calculate the length of the list without modification when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="592274633" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.001014" asserts="1" />
          <test-case id="5-1692" name="test map should map to uppercase letters to lowercase" fullname="FSharpx.Tests.ListIterateeTest.test map should map to uppercase letters to lowercase" methodname="test map should map to uppercase letters to lowercase" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1885866916" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.002057" asserts="1" />
          <test-case id="5-1693" name="test map should map to uppercase letters to lowercase at once" fullname="FSharpx.Tests.ListIterateeTest.test map should map to uppercase letters to lowercase at once" methodname="test map should map to uppercase letters to lowercase at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1531931605" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.001207" asserts="1" />
          <test-case id="5-1694" name="test map should map to uppercase letters to lowercase when enumerating in chunks" fullname="FSharpx.Tests.ListIterateeTest.test map should map to uppercase letters to lowercase when enumerating in chunks" methodname="test map should map to uppercase letters to lowercase when enumerating in chunks" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="367864955" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.001344" asserts="1" />
          <test-suite type="ParameterizedMethod" id="5-1443" name="test peek should return the value without removing it from the stream" fullname="FSharpx.Tests.ListIterateeTest.test peek should return the value without removing it from the stream" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.014106" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="3">
            <test-case id="5-1440" name="test peek should return the value without removing it from the stream([],null)" fullname="FSharpx.Tests.ListIterateeTest.test peek should return the value without removing it from the stream([],null)" methodname="test peek should return the value without removing it from the stream" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="249203284" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.002807" asserts="1" />
            <test-case id="5-1441" name="test peek should return the value without removing it from the stream([c],Some(c))" fullname="FSharpx.Tests.ListIterateeTest.test peek should return the value without removing it from the stream([c],Some(c))" methodname="test peek should return the value without removing it from the stream" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="794620549" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000096" asserts="1" />
            <test-case id="5-1442" name="test peek should return the value without removing it from the stream([c; h; a; ... ],Some(c))" fullname="FSharpx.Tests.ListIterateeTest.test peek should return the value without removing it from the stream([c; h; a; ... ],Some(c))" methodname="test peek should return the value without removing it from the stream" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="571491565" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000084" asserts="1" />
          </test-suite>
          <test-suite type="ParameterizedMethod" id="5-1447" name="test peek should return the value without removing it from the stream at once" fullname="FSharpx.Tests.ListIterateeTest.test peek should return the value without removing it from the stream at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.013065" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="3">
            <test-case id="5-1444" name="test peek should return the value without removing it from the stream at once([],null)" fullname="FSharpx.Tests.ListIterateeTest.test peek should return the value without removing it from the stream at once([],null)" methodname="test peek should return the value without removing it from the stream at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="742389177" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000584" asserts="1" />
            <test-case id="5-1445" name="test peek should return the value without removing it from the stream at once([c],Some(c))" fullname="FSharpx.Tests.ListIterateeTest.test peek should return the value without removing it from the stream at once([c],Some(c))" methodname="test peek should return the value without removing it from the stream at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="2108617075" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000091" asserts="1" />
            <test-case id="5-1446" name="test peek should return the value without removing it from the stream at once([c; h; a; ... ],Some(c))" fullname="FSharpx.Tests.ListIterateeTest.test peek should return the value without removing it from the stream at once([c; h; a; ... ],Some(c))" methodname="test peek should return the value without removing it from the stream at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1060470317" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000101" asserts="1" />
          </test-suite>
          <test-suite type="ParameterizedMethod" id="5-1451" name="test peek should return the value without removing it from the stream when chunked" fullname="FSharpx.Tests.ListIterateeTest.test peek should return the value without removing it from the stream when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.012106" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="3">
            <test-case id="5-1448" name="test peek should return the value without removing it from the stream when chunked([],null)" fullname="FSharpx.Tests.ListIterateeTest.test peek should return the value without removing it from the stream when chunked([],null)" methodname="test peek should return the value without removing it from the stream when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1036943761" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000643" asserts="1" />
            <test-case id="5-1449" name="test peek should return the value without removing it from the stream when chunked([c],Some(c))" fullname="FSharpx.Tests.ListIterateeTest.test peek should return the value without removing it from the stream when chunked([c],Some(c))" methodname="test peek should return the value without removing it from the stream when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="2136731256" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000062" asserts="1" />
            <test-case id="5-1450" name="test peek should return the value without removing it from the stream when chunked([c; h; a; ... ],Some(c))" fullname="FSharpx.Tests.ListIterateeTest.test peek should return the value without removing it from the stream when chunked([c; h; a; ... ],Some(c))" methodname="test peek should return the value without removing it from the stream when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="234300655" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000074" asserts="1" />
          </test-suite>
          <test-case id="5-1700" name="test readCsvLine should return the empty byte string when that's all it is passed" fullname="FSharpx.Tests.ListIterateeTest.test readCsvLine should return the empty byte string when that's all it is passed" methodname="test readCsvLine should return the empty byte string when that's all it is passed" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1854647594" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.004367" asserts="1" />
          <test-case id="5-1699" name="test readCsvLine should take chunks until no commas remain" fullname="FSharpx.Tests.ListIterateeTest.test readCsvLine should take chunks until no commas remain" methodname="test readCsvLine should take chunks until no commas remain" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1156146566" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.004769" asserts="1" />
          <test-suite type="ParameterizedMethod" id="5-1562" name="test readLine should split strings on a newline character" fullname="FSharpx.Tests.ListIterateeTest.test readLine should split strings on a newline character" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" testcasecount="8" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.032235" total="8" passed="8" failed="0" inconclusive="0" skipped="0" asserts="8">
            <test-case id="5-1554" name="test readLine should split strings on a newline character(&quot;&quot;,[])" fullname="FSharpx.Tests.ListIterateeTest.test readLine should split strings on a newline character(&quot;&quot;,[])" methodname="test readLine should split strings on a newline character" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="107006344" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000734" asserts="1" />
            <test-case id="5-1555" name="test readLine should split strings on a newline character(&quot;\r&quot;,[])" fullname="FSharpx.Tests.ListIterateeTest.test readLine should split strings on a newline character(&quot;\r&quot;,[])" methodname="test readLine should split strings on a newline character" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="571309160" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000350" asserts="1" />
            <test-case id="5-1556" name="test readLine should split strings on a newline character(&quot;\n&quot;,[])" fullname="FSharpx.Tests.ListIterateeTest.test readLine should split strings on a newline character(&quot;\n&quot;,[])" methodname="test readLine should split strings on a newline character" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1023838963" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000061" asserts="1" />
            <test-case id="5-1557" name="test readLine should split strings on a newline character(&quot;\r\n&quot;,[])" fullname="FSharpx.Tests.ListIterateeTest.test readLine should split strings on a newline character(&quot;\r\n&quot;,[])" methodname="test readLine should split strings on a newline character" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="531136279" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000061" asserts="1" />
            <test-case id="5-1558" name="test readLine should split strings on a newline character(&quot;line1&quot;,[l; i; n; ... ])" fullname="FSharpx.Tests.ListIterateeTest.test readLine should split strings on a newline character(&quot;line1&quot;,[l; i; n; ... ])" methodname="test readLine should split strings on a newline character" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="829530909" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000115" asserts="1" />
            <test-case id="5-1559" name="test readLine should split strings on a newline character(&quot;line1\n&quot;,[l; i; n; ... ])" fullname="FSharpx.Tests.ListIterateeTest.test readLine should split strings on a newline character(&quot;line1\n&quot;,[l; i; n; ... ])" methodname="test readLine should split strings on a newline character" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="252950850" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000070" asserts="1" />
            <test-case id="5-1560" name="test readLine should split strings on a newline character(&quot;line1\r&quot;,[l; i; n; ... ])" fullname="FSharpx.Tests.ListIterateeTest.test readLine should split strings on a newline character(&quot;line1\r&quot;,[l; i; n; ... ])" methodname="test readLine should split strings on a newline character" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="836761858" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000066" asserts="1" />
            <test-case id="5-1561" name="test readLine should split strings on a newline character(&quot;line1\r\n&quot;,[l; i; n; ... ])" fullname="FSharpx.Tests.ListIterateeTest.test readLine should split strings on a newline character(&quot;line1\r\n&quot;,[l; i; n; ... ])" methodname="test readLine should split strings on a newline character" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="304221142" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000085" asserts="1" />
          </test-suite>
          <test-suite type="ParameterizedMethod" id="5-1571" name="test readLine should split strings on a newline character at once" fullname="FSharpx.Tests.ListIterateeTest.test readLine should split strings on a newline character at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" testcasecount="8" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.033250" total="8" passed="8" failed="0" inconclusive="0" skipped="0" asserts="8">
            <test-case id="5-1563" name="test readLine should split strings on a newline character at once(&quot;&quot;,[])" fullname="FSharpx.Tests.ListIterateeTest.test readLine should split strings on a newline character at once(&quot;&quot;,[])" methodname="test readLine should split strings on a newline character at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="159070648" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000500" asserts="1" />
            <test-case id="5-1564" name="test readLine should split strings on a newline character at once(&quot;\r&quot;,[])" fullname="FSharpx.Tests.ListIterateeTest.test readLine should split strings on a newline character at once(&quot;\r&quot;,[])" methodname="test readLine should split strings on a newline character at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1142896541" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000052" asserts="1" />
            <test-case id="5-1565" name="test readLine should split strings on a newline character at once(&quot;\n&quot;,[])" fullname="FSharpx.Tests.ListIterateeTest.test readLine should split strings on a newline character at once(&quot;\n&quot;,[])" methodname="test readLine should split strings on a newline character at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1501693170" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000066" asserts="1" />
            <test-case id="5-1566" name="test readLine should split strings on a newline character at once(&quot;\r\n&quot;,[])" fullname="FSharpx.Tests.ListIterateeTest.test readLine should split strings on a newline character at once(&quot;\r\n&quot;,[])" methodname="test readLine should split strings on a newline character at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="218530787" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000069" asserts="1" />
            <test-case id="5-1567" name="test readLine should split strings on a newline character at once(&quot;line1&quot;,[l; i; n; ... ])" fullname="FSharpx.Tests.ListIterateeTest.test readLine should split strings on a newline character at once(&quot;line1&quot;,[l; i; n; ... ])" methodname="test readLine should split strings on a newline character at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="532335042" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000132" asserts="1" />
            <test-case id="5-1568" name="test readLine should split strings on a newline character at once(&quot;line1\n&quot;,[l; i; n; ... ])" fullname="FSharpx.Tests.ListIterateeTest.test readLine should split strings on a newline character at once(&quot;line1\n&quot;,[l; i; n; ... ])" methodname="test readLine should split strings on a newline character at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="2035834458" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000096" asserts="1" />
            <test-case id="5-1569" name="test readLine should split strings on a newline character at once(&quot;line1\r&quot;,[l; i; n; ... ])" fullname="FSharpx.Tests.ListIterateeTest.test readLine should split strings on a newline character at once(&quot;line1\r&quot;,[l; i; n; ... ])" methodname="test readLine should split strings on a newline character at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1557402491" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000079" asserts="1" />
            <test-case id="5-1570" name="test readLine should split strings on a newline character at once(&quot;line1\r\n&quot;,[l; i; n; ... ])" fullname="FSharpx.Tests.ListIterateeTest.test readLine should split strings on a newline character at once(&quot;line1\r\n&quot;,[l; i; n; ... ])" methodname="test readLine should split strings on a newline character at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1349065489" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000087" asserts="1" />
          </test-suite>
          <test-suite type="ParameterizedMethod" id="5-1587" name="test readLines should return the lines from the input" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" testcasecount="15" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.061886" total="15" passed="15" failed="0" inconclusive="0" skipped="0" asserts="15">
            <test-case id="5-1572" name="test readLines should return the lines from the input(&quot;&quot;,[])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input(&quot;&quot;,[])" methodname="test readLines should return the lines from the input" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1478461012" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.004667" asserts="1" />
            <test-case id="5-1573" name="test readLines should return the lines from the input(&quot;\r&quot;,[])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input(&quot;\r&quot;,[])" methodname="test readLines should return the lines from the input" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="723684161" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.001069" asserts="1" />
            <test-case id="5-1574" name="test readLines should return the lines from the input(&quot;\n&quot;,[])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input(&quot;\n&quot;,[])" methodname="test readLines should return the lines from the input" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1168931336" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000075" asserts="1" />
            <test-case id="5-1575" name="test readLines should return the lines from the input(&quot;\r\n&quot;,[])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input(&quot;\r\n&quot;,[])" methodname="test readLines should return the lines from the input" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1155092643" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000091" asserts="1" />
            <test-case id="5-1576" name="test readLines should return the lines from the input(&quot;line1&quot;,[line1])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input(&quot;line1&quot;,[line1])" methodname="test readLines should return the lines from the input" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="456598401" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000208" asserts="1" />
            <test-case id="5-1577" name="test readLines should return the lines from the input(&quot;line1\n&quot;,[line1])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input(&quot;line1\n&quot;,[line1])" methodname="test readLines should return the lines from the input" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1458246932" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000093" asserts="1" />
            <test-case id="5-1578" name="test readLines should return the lines from the input(&quot;line1\r&quot;,[line1])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input(&quot;line1\r&quot;,[line1])" methodname="test readLines should return the lines from the input" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1651839956" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000107" asserts="1" />
            <test-case id="5-1579" name="test readLines should return the lines from the input(&quot;line1\r\n&quot;,[line1])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input(&quot;line1\r\n&quot;,[line1])" methodname="test readLines should return the lines from the input" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1460762936" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000081" asserts="1" />
            <test-case id="5-1580" name="test readLines should return the lines from the input(&quot;line1\r\nline2&quot;,[line1; line2])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input(&quot;line1\r\nline2&quot;,[line1; line2])" methodname="test readLines should return the lines from the input" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1893281892" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000090" asserts="1" />
            <test-case id="5-1581" name="test readLines should return the lines from the input(&quot;line1\r\nline2\r\n&quot;,[line1; line2])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input(&quot;line1\r\nline2\r\n&quot;,[line1; line2])" methodname="test readLines should return the lines from the input" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="630135788" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000075" asserts="1" />
            <test-case id="5-1582" name="test readLines should return the lines from the input(&quot;line1\r\nline2\r\n\r\n&quot;,[line1; line2; ])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input(&quot;line1\r\nline2\r\n\r\n&quot;,[line1; line2; ])" methodname="test readLines should return the lines from the input" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="351570458" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000084" asserts="1" />
            <test-case id="5-1583" name="test readLines should return the lines from the input(&quot;line1\r\nline2\r\nline3\r\nline4\r\nline5&quot;,[line1; line2; line3; ... ])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input(&quot;line1\r\nline2\r\nline3\r\nline4\r\nline5&quot;,[line1; line2; line3; ... ])" methodname="test readLines should return the lines from the input" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="362167592" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000101" asserts="1" />
            <test-case id="5-1584" name="test readLines should return the lines from the input(&quot;line1\r\nline2\r\nline3\r\nline4\r\nline5\r\n&quot;,[line1; line2; line3; ... ])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input(&quot;line1\r\nline2\r\nline3\r\nline4\r\nline5\r\n&quot;,[line1; line2; line3; ... ])" methodname="test readLines should return the lines from the input" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="396807347" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000100" asserts="1" />
            <test-case id="5-1585" name="test readLines should return the lines from the input(&quot;line1\r\nline2\r\nline3\r\nline4\r\nline5\r\n\r\n&quot;,[line1; line2; line3; ... ])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input(&quot;line1\r\nline2\r\nline3\r\nline4\r\nline5\r\n\r\n&quot;,[line1; line2; line3; ... ])" methodname="test readLines should return the lines from the input" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="625364286" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000110" asserts="1" />
            <test-case id="5-1586" name="test readLines should return the lines from the input(&quot;PUT /file HTTP/1.1\r\nHost: example.com\nUser-Agent: X\nContent-Type: text/plain\r\n\r\n1C\r\nbody line 2\r\n\r\n7&quot;,[PUT /file HTTP/1.1; Host: example.com; User-Agent: X; ... ])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input(&quot;PUT /file HTTP/1.1\r\nHost: example.com\nUser-Agent: X\nContent-Type: text/plain\r\n\r\n1C\r\nbody line 2\r\n\r\n7&quot;,[PUT /file HTTP/1.1; Host: example.com; User-Agent: X; ... ])" methodname="test readLines should return the lines from the input" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="25325754" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000085" asserts="1" />
          </test-suite>
          <test-suite type="ParameterizedMethod" id="5-1619" name="test readLines should return the lines from the input when chunked" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" testcasecount="15" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.059772" total="15" passed="15" failed="0" inconclusive="0" skipped="0" asserts="15">
            <test-case id="5-1604" name="test readLines should return the lines from the input when chunked(&quot;&quot;,[])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input when chunked(&quot;&quot;,[])" methodname="test readLines should return the lines from the input when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1720358726" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000447" asserts="1" />
            <test-case id="5-1605" name="test readLines should return the lines from the input when chunked(&quot;\r&quot;,[])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input when chunked(&quot;\r&quot;,[])" methodname="test readLines should return the lines from the input when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1146817512" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000139" asserts="1" />
            <test-case id="5-1606" name="test readLines should return the lines from the input when chunked(&quot;\n&quot;,[])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input when chunked(&quot;\n&quot;,[])" methodname="test readLines should return the lines from the input when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="572013033" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000078" asserts="1" />
            <test-case id="5-1607" name="test readLines should return the lines from the input when chunked(&quot;\r\n&quot;,[])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input when chunked(&quot;\r\n&quot;,[])" methodname="test readLines should return the lines from the input when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1579530954" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000091" asserts="1" />
            <test-case id="5-1608" name="test readLines should return the lines from the input when chunked(&quot;line1&quot;,[line1])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input when chunked(&quot;line1&quot;,[line1])" methodname="test readLines should return the lines from the input when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="536945184" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000127" asserts="1" />
            <test-case id="5-1609" name="test readLines should return the lines from the input when chunked(&quot;line1\n&quot;,[line1])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input when chunked(&quot;line1\n&quot;,[line1])" methodname="test readLines should return the lines from the input when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1263904848" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000081" asserts="1" />
            <test-case id="5-1610" name="test readLines should return the lines from the input when chunked(&quot;line1\r&quot;,[line1])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input when chunked(&quot;line1\r&quot;,[line1])" methodname="test readLines should return the lines from the input when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="630278790" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000077" asserts="1" />
            <test-case id="5-1611" name="test readLines should return the lines from the input when chunked(&quot;line1\r\n&quot;,[line1])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input when chunked(&quot;line1\r\n&quot;,[line1])" methodname="test readLines should return the lines from the input when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1077339933" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000128" asserts="1" />
            <test-case id="5-1612" name="test readLines should return the lines from the input when chunked(&quot;line1\r\nline2&quot;,[line1; line2])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input when chunked(&quot;line1\r\nline2&quot;,[line1; line2])" methodname="test readLines should return the lines from the input when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1030121500" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000074" asserts="1" />
            <test-case id="5-1613" name="test readLines should return the lines from the input when chunked(&quot;line1\r\nline2\r\n&quot;,[line1; line2])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input when chunked(&quot;line1\r\nline2\r\n&quot;,[line1; line2])" methodname="test readLines should return the lines from the input when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="944183163" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000084" asserts="1" />
            <test-case id="5-1614" name="test readLines should return the lines from the input when chunked(&quot;line1\r\nline2\r\n\r\n&quot;,[line1; line2; ])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input when chunked(&quot;line1\r\nline2\r\n\r\n&quot;,[line1; line2; ])" methodname="test readLines should return the lines from the input when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="997820313" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000082" asserts="1" />
            <test-case id="5-1615" name="test readLines should return the lines from the input when chunked(&quot;line1\r\nline2\r\nline3\r\nline4\r\nline5&quot;,[line1; line2; line3; ... ])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input when chunked(&quot;line1\r\nline2\r\nline3\r\nline4\r\nline5&quot;,[line1; line2; line3; ... ])" methodname="test readLines should return the lines from the input when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="245031979" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000094" asserts="1" />
            <test-case id="5-1616" name="test readLines should return the lines from the input when chunked(&quot;line1\r\nline2\r\nline3\r\nline4\r\nline5\r\n&quot;,[line1; line2; line3; ... ])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input when chunked(&quot;line1\r\nline2\r\nline3\r\nline4\r\nline5\r\n&quot;,[line1; line2; line3; ... ])" methodname="test readLines should return the lines from the input when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1169479470" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000073" asserts="1" />
            <test-case id="5-1617" name="test readLines should return the lines from the input when chunked(&quot;line1\r\nline2\r\nline3\r\nline4\r\nline5\r\n\r\n&quot;,[line1; line2; line3; ... ])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input when chunked(&quot;line1\r\nline2\r\nline3\r\nline4\r\nline5\r\n\r\n&quot;,[line1; line2; line3; ... ])" methodname="test readLines should return the lines from the input when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="380928595" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000085" asserts="1" />
            <test-case id="5-1618" name="test readLines should return the lines from the input when chunked(&quot;PUT /file HTTP/1.1\r\nHost: example.com\nUser-Agent: X\nContent-Type: text/plain\r\n\r\n1C\r\nbody line 2\r\n\r\n7&quot;,[PUT /file HTTP/1.1; Host: example.com; User-Agent: X; ... ])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input when chunked(&quot;PUT /file HTTP/1.1\r\nHost: example.com\nUser-Agent: X\nContent-Type: text/plain\r\n\r\n1C\r\nbody line 2\r\n\r\n7&quot;,[PUT /file HTTP/1.1; Host: example.com; User-Agent: X; ... ])" methodname="test readLines should return the lines from the input when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="228930691" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000075" asserts="1" />
          </test-suite>
          <test-suite type="ParameterizedMethod" id="5-1603" name="test readLines should return the lines from the input when enumerated one char at a time" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input when enumerated one char at a time" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" testcasecount="15" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.060803" total="15" passed="15" failed="0" inconclusive="0" skipped="0" asserts="15">
            <test-case id="5-1588" name="test readLines should return the lines from the input when enumerated one char at a time(&quot;&quot;,[])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input when enumerated one char at a time(&quot;&quot;,[])" methodname="test readLines should return the lines from the input when enumerated one char at a time" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="96653373" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000553" asserts="1" />
            <test-case id="5-1589" name="test readLines should return the lines from the input when enumerated one char at a time(&quot;\r&quot;,[])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input when enumerated one char at a time(&quot;\r&quot;,[])" methodname="test readLines should return the lines from the input when enumerated one char at a time" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="2068551842" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000112" asserts="1" />
            <test-case id="5-1590" name="test readLines should return the lines from the input when enumerated one char at a time(&quot;\n&quot;,[])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input when enumerated one char at a time(&quot;\n&quot;,[])" methodname="test readLines should return the lines from the input when enumerated one char at a time" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1222995397" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000077" asserts="1" />
            <test-case id="5-1591" name="test readLines should return the lines from the input when enumerated one char at a time(&quot;\r\n&quot;,[])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input when enumerated one char at a time(&quot;\r\n&quot;,[])" methodname="test readLines should return the lines from the input when enumerated one char at a time" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="292204221" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000059" asserts="1" />
            <test-case id="5-1592" name="test readLines should return the lines from the input when enumerated one char at a time(&quot;line1&quot;,[line1])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input when enumerated one char at a time(&quot;line1&quot;,[line1])" methodname="test readLines should return the lines from the input when enumerated one char at a time" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1519688117" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000087" asserts="1" />
            <test-case id="5-1593" name="test readLines should return the lines from the input when enumerated one char at a time(&quot;line1\n&quot;,[line1])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input when enumerated one char at a time(&quot;line1\n&quot;,[line1])" methodname="test readLines should return the lines from the input when enumerated one char at a time" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1990246302" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000101" asserts="1" />
            <test-case id="5-1594" name="test readLines should return the lines from the input when enumerated one char at a time(&quot;line1\r&quot;,[line1])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input when enumerated one char at a time(&quot;line1\r&quot;,[line1])" methodname="test readLines should return the lines from the input when enumerated one char at a time" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1364000848" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000081" asserts="1" />
            <test-case id="5-1595" name="test readLines should return the lines from the input when enumerated one char at a time(&quot;line1\r\n&quot;,[line1])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input when enumerated one char at a time(&quot;line1\r\n&quot;,[line1])" methodname="test readLines should return the lines from the input when enumerated one char at a time" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1627657446" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000078" asserts="1" />
            <test-case id="5-1596" name="test readLines should return the lines from the input when enumerated one char at a time(&quot;line1\r\nline2&quot;,[line1; line2])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input when enumerated one char at a time(&quot;line1\r\nline2&quot;,[line1; line2])" methodname="test readLines should return the lines from the input when enumerated one char at a time" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="694863445" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000166" asserts="1" />
            <test-case id="5-1597" name="test readLines should return the lines from the input when enumerated one char at a time(&quot;line1\r\nline2\r\n&quot;,[line1; line2])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input when enumerated one char at a time(&quot;line1\r\nline2\r\n&quot;,[line1; line2])" methodname="test readLines should return the lines from the input when enumerated one char at a time" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="453286022" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000092" asserts="1" />
            <test-case id="5-1598" name="test readLines should return the lines from the input when enumerated one char at a time(&quot;line1\r\nline2\r\n\r\n&quot;,[line1; line2; ])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input when enumerated one char at a time(&quot;line1\r\nline2\r\n\r\n&quot;,[line1; line2; ])" methodname="test readLines should return the lines from the input when enumerated one char at a time" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="899954998" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000142" asserts="1" />
            <test-case id="5-1599" name="test readLines should return the lines from the input when enumerated one char at a time(&quot;line1\r\nline2\r\nline3\r\nline4\r\nline5&quot;,[line1; line2; line3; ... ])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input when enumerated one char at a time(&quot;line1\r\nline2\r\nline3\r\nline4\r\nline5&quot;,[line1; line2; line3; ... ])" methodname="test readLines should return the lines from the input when enumerated one char at a time" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="486788779" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000089" asserts="1" />
            <test-case id="5-1600" name="test readLines should return the lines from the input when enumerated one char at a time(&quot;line1\r\nline2\r\nline3\r\nline4\r\nline5\r\n&quot;,[line1; line2; line3; ... ])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input when enumerated one char at a time(&quot;line1\r\nline2\r\nline3\r\nline4\r\nline5\r\n&quot;,[line1; line2; line3; ... ])" methodname="test readLines should return the lines from the input when enumerated one char at a time" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1733757511" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000216" asserts="1" />
            <test-case id="5-1601" name="test readLines should return the lines from the input when enumerated one char at a time(&quot;line1\r\nline2\r\nline3\r\nline4\r\nline5\r\n\r\n&quot;,[line1; line2; line3; ... ])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input when enumerated one char at a time(&quot;line1\r\nline2\r\nline3\r\nline4\r\nline5\r\n\r\n&quot;,[line1; line2; line3; ... ])" methodname="test readLines should return the lines from the input when enumerated one char at a time" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="991580569" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000100" asserts="1" />
            <test-case id="5-1602" name="test readLines should return the lines from the input when enumerated one char at a time(&quot;PUT /file HTTP/1.1\r\nHost: example.com\nUser-Agent: X\nContent-Type: text/plain\r\n\r\n1C\r\nbody line 2\r\n\r\n7&quot;,[PUT /file HTTP/1.1; Host: example.com; User-Agent: X; ... ])" fullname="FSharpx.Tests.ListIterateeTest.test readLines should return the lines from the input when enumerated one char at a time(&quot;PUT /file HTTP/1.1\r\nHost: example.com\nUser-Agent: X\nContent-Type: text/plain\r\n\r\n1C\r\nbody line 2\r\n\r\n7&quot;,[PUT /file HTTP/1.1; Host: example.com; User-Agent: X; ... ])" methodname="test readLines should return the lines from the input when enumerated one char at a time" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="405216501" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000104" asserts="1" />
          </test-suite>
          <test-case id="5-1552" name="test skipNewline should consume \n for a single newline" fullname="FSharpx.Tests.ListIterateeTest.test skipNewline should consume \n for a single newline" methodname="test skipNewline should consume \n for a single newline" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1300595740" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.003065" asserts="1" />
          <test-case id="5-1551" name="test skipNewline should consume \r for a single newline" fullname="FSharpx.Tests.ListIterateeTest.test skipNewline should consume \r for a single newline" methodname="test skipNewline should consume \r for a single newline" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1756418926" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.001360" asserts="1" />
          <test-case id="5-1553" name="test skipNewline should consume \r\n for a single newline" fullname="FSharpx.Tests.ListIterateeTest.test skipNewline should consume \r\n for a single newline" methodname="test skipNewline should consume \r\n for a single newline" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="75212400" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.001281" asserts="1" />
          <test-suite type="ParameterizedMethod" id="5-1514" name="test take should take the first n items" fullname="FSharpx.Tests.ListIterateeTest.test take should take the first n items" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" testcasecount="11" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.040645" total="11" passed="11" failed="0" inconclusive="0" skipped="0" asserts="11">
            <properties>
              <property name="_JOINTYPE" value="Sequential" />
            </properties>
            <test-case id="5-1503" name="test take should take the first n items(0)" fullname="FSharpx.Tests.ListIterateeTest.test take should take the first n items(0)" methodname="test take should take the first n items" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1620709263" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.001785" asserts="1" />
            <test-case id="5-1504" name="test take should take the first n items(1)" fullname="FSharpx.Tests.ListIterateeTest.test take should take the first n items(1)" methodname="test take should take the first n items" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1513213374" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000955" asserts="1" />
            <test-case id="5-1505" name="test take should take the first n items(2)" fullname="FSharpx.Tests.ListIterateeTest.test take should take the first n items(2)" methodname="test take should take the first n items" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="320478897" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000089" asserts="1" />
            <test-case id="5-1506" name="test take should take the first n items(3)" fullname="FSharpx.Tests.ListIterateeTest.test take should take the first n items(3)" methodname="test take should take the first n items" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="833393162" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000053" asserts="1" />
            <test-case id="5-1507" name="test take should take the first n items(4)" fullname="FSharpx.Tests.ListIterateeTest.test take should take the first n items(4)" methodname="test take should take the first n items" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="828093590" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000115" asserts="1" />
            <test-case id="5-1508" name="test take should take the first n items(5)" fullname="FSharpx.Tests.ListIterateeTest.test take should take the first n items(5)" methodname="test take should take the first n items" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1037204227" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000066" asserts="1" />
            <test-case id="5-1509" name="test take should take the first n items(6)" fullname="FSharpx.Tests.ListIterateeTest.test take should take the first n items(6)" methodname="test take should take the first n items" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1886196141" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000057" asserts="1" />
            <test-case id="5-1510" name="test take should take the first n items(7)" fullname="FSharpx.Tests.ListIterateeTest.test take should take the first n items(7)" methodname="test take should take the first n items" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1643095871" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000072" asserts="1" />
            <test-case id="5-1511" name="test take should take the first n items(8)" fullname="FSharpx.Tests.ListIterateeTest.test take should take the first n items(8)" methodname="test take should take the first n items" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="731891999" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000069" asserts="1" />
            <test-case id="5-1512" name="test take should take the first n items(9)" fullname="FSharpx.Tests.ListIterateeTest.test take should take the first n items(9)" methodname="test take should take the first n items" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="2136470792" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000083" asserts="1" />
            <test-case id="5-1513" name="test take should take the first n items(10)" fullname="FSharpx.Tests.ListIterateeTest.test take should take the first n items(10)" methodname="test take should take the first n items" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1227714484" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000062" asserts="1" />
          </test-suite>
          <test-suite type="ParameterizedMethod" id="5-1526" name="test take should take the first n items at once" fullname="FSharpx.Tests.ListIterateeTest.test take should take the first n items at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" testcasecount="11" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.046221" total="11" passed="11" failed="0" inconclusive="0" skipped="0" asserts="11">
            <properties>
              <property name="_JOINTYPE" value="Sequential" />
            </properties>
            <test-case id="5-1515" name="test take should take the first n items at once(0)" fullname="FSharpx.Tests.ListIterateeTest.test take should take the first n items at once(0)" methodname="test take should take the first n items at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1502670134" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000530" asserts="1" />
            <test-case id="5-1516" name="test take should take the first n items at once(1)" fullname="FSharpx.Tests.ListIterateeTest.test take should take the first n items at once(1)" methodname="test take should take the first n items at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1501199783" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000142" asserts="1" />
            <test-case id="5-1517" name="test take should take the first n items at once(2)" fullname="FSharpx.Tests.ListIterateeTest.test take should take the first n items at once(2)" methodname="test take should take the first n items at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="160902540" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000072" asserts="1" />
            <test-case id="5-1518" name="test take should take the first n items at once(3)" fullname="FSharpx.Tests.ListIterateeTest.test take should take the first n items at once(3)" methodname="test take should take the first n items at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="2025410079" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000056" asserts="1" />
            <test-case id="5-1519" name="test take should take the first n items at once(4)" fullname="FSharpx.Tests.ListIterateeTest.test take should take the first n items at once(4)" methodname="test take should take the first n items at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="200730519" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000057" asserts="1" />
            <test-case id="5-1520" name="test take should take the first n items at once(5)" fullname="FSharpx.Tests.ListIterateeTest.test take should take the first n items at once(5)" methodname="test take should take the first n items at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1759311881" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000069" asserts="1" />
            <test-case id="5-1521" name="test take should take the first n items at once(6)" fullname="FSharpx.Tests.ListIterateeTest.test take should take the first n items at once(6)" methodname="test take should take the first n items at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="782372060" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000058" asserts="1" />
            <test-case id="5-1522" name="test take should take the first n items at once(7)" fullname="FSharpx.Tests.ListIterateeTest.test take should take the first n items at once(7)" methodname="test take should take the first n items at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="167959529" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000059" asserts="1" />
            <test-case id="5-1523" name="test take should take the first n items at once(8)" fullname="FSharpx.Tests.ListIterateeTest.test take should take the first n items at once(8)" methodname="test take should take the first n items at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="490656714" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000061" asserts="1" />
            <test-case id="5-1524" name="test take should take the first n items at once(9)" fullname="FSharpx.Tests.ListIterateeTest.test take should take the first n items at once(9)" methodname="test take should take the first n items at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1964216387" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000062" asserts="1" />
            <test-case id="5-1525" name="test take should take the first n items at once(10)" fullname="FSharpx.Tests.ListIterateeTest.test take should take the first n items at once(10)" methodname="test take should take the first n items at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="2120934597" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000086" asserts="1" />
          </test-suite>
          <test-suite type="ParameterizedMethod" id="5-1538" name="test take should take the first n items when chunked" fullname="FSharpx.Tests.ListIterateeTest.test take should take the first n items when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" testcasecount="11" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.039861" total="11" passed="11" failed="0" inconclusive="0" skipped="0" asserts="11">
            <properties>
              <property name="_JOINTYPE" value="Sequential" />
            </properties>
            <test-case id="5-1527" name="test take should take the first n items when chunked(0)" fullname="FSharpx.Tests.ListIterateeTest.test take should take the first n items when chunked(0)" methodname="test take should take the first n items when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1496085295" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000855" asserts="1" />
            <test-case id="5-1528" name="test take should take the first n items when chunked(1)" fullname="FSharpx.Tests.ListIterateeTest.test take should take the first n items when chunked(1)" methodname="test take should take the first n items when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="2080296648" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000153" asserts="1" />
            <test-case id="5-1529" name="test take should take the first n items when chunked(2)" fullname="FSharpx.Tests.ListIterateeTest.test take should take the first n items when chunked(2)" methodname="test take should take the first n items when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="397940406" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000064" asserts="1" />
            <test-case id="5-1530" name="test take should take the first n items when chunked(3)" fullname="FSharpx.Tests.ListIterateeTest.test take should take the first n items when chunked(3)" methodname="test take should take the first n items when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1107586424" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000082" asserts="1" />
            <test-case id="5-1531" name="test take should take the first n items when chunked(4)" fullname="FSharpx.Tests.ListIterateeTest.test take should take the first n items when chunked(4)" methodname="test take should take the first n items when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1860970941" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000119" asserts="1" />
            <test-case id="5-1532" name="test take should take the first n items when chunked(5)" fullname="FSharpx.Tests.ListIterateeTest.test take should take the first n items when chunked(5)" methodname="test take should take the first n items when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="343298527" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000068" asserts="1" />
            <test-case id="5-1533" name="test take should take the first n items when chunked(6)" fullname="FSharpx.Tests.ListIterateeTest.test take should take the first n items when chunked(6)" methodname="test take should take the first n items when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="453572443" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000068" asserts="1" />
            <test-case id="5-1534" name="test take should take the first n items when chunked(7)" fullname="FSharpx.Tests.ListIterateeTest.test take should take the first n items when chunked(7)" methodname="test take should take the first n items when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1545299584" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000072" asserts="1" />
            <test-case id="5-1535" name="test take should take the first n items when chunked(8)" fullname="FSharpx.Tests.ListIterateeTest.test take should take the first n items when chunked(8)" methodname="test take should take the first n items when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="299239884" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000112" asserts="1" />
            <test-case id="5-1536" name="test take should take the first n items when chunked(9)" fullname="FSharpx.Tests.ListIterateeTest.test take should take the first n items when chunked(9)" methodname="test take should take the first n items when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="629452296" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000053" asserts="1" />
            <test-case id="5-1537" name="test take should take the first n items when chunked(10)" fullname="FSharpx.Tests.ListIterateeTest.test take should take the first n items when chunked(10)" methodname="test take should take the first n items when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="602558706" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000052" asserts="1" />
          </test-suite>
          <test-case id="5-1542" name="test takeUntil should correctly split the input" fullname="FSharpx.Tests.ListIterateeTest.test takeUntil should correctly split the input" methodname="test takeUntil should correctly split the input" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1262109523" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000954" asserts="1" />
          <test-case id="5-1543" name="test takeUntil should correctly split the input at once" fullname="FSharpx.Tests.ListIterateeTest.test takeUntil should correctly split the input at once" methodname="test takeUntil should correctly split the input at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1148263223" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000550" asserts="1" />
          <test-case id="5-1544" name="test takeUntil should correctly split the input when chunked" fullname="FSharpx.Tests.ListIterateeTest.test takeUntil should correctly split the input when chunked" methodname="test takeUntil should correctly split the input when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="839064751" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000609" asserts="1" />
          <test-case id="5-1698" name="test takeUntilComma should take until the first comma" fullname="FSharpx.Tests.ListIterateeTest.test takeUntilComma should take until the first comma" methodname="test takeUntilComma should take until the first comma" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="504042953" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000465" asserts="1" />
          <test-case id="5-1539" name="test takeWhile should take anything before the first space" fullname="FSharpx.Tests.ListIterateeTest.test takeWhile should take anything before the first space" methodname="test takeWhile should take anything before the first space" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1500362461" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000599" asserts="1" />
          <test-case id="5-1540" name="test takeWhile should take anything before the first space at once" fullname="FSharpx.Tests.ListIterateeTest.test takeWhile should take anything before the first space at once" methodname="test takeWhile should take anything before the first space at once" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1246518638" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000513" asserts="1" />
          <test-case id="5-1541" name="test takeWhile should take anything before the first space when chunked" fullname="FSharpx.Tests.ListIterateeTest.test takeWhile should take anything before the first space when chunked" methodname="test takeWhile should take anything before the first space when chunked" classname="FSharpx.Tests.ListIterateeTest" runstate="Runnable" seed="1611767704" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000475" asserts="1" />
        </test-suite>
        <test-suite type="TestFixture" id="5-1738" name="MaybeTest" fullname="FSharpx.Tests.MaybeTest" classname="FSharpx.Tests.MaybeTest" runstate="Runnable" testcasecount="8" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.060155" total="8" passed="8" failed="0" inconclusive="0" skipped="0" asserts="8">
          <test-case id="5-1741" name="Desugared else branch should be None" fullname="FSharpx.Tests.MaybeTest.Desugared else branch should be None" methodname="Desugared else branch should be None" classname="FSharpx.Tests.MaybeTest" runstate="Runnable" seed="536641330" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000277" asserts="1" />
          <test-case id="5-1745" name="for loops enumerate entire sequence and subsequent expressions also run" fullname="FSharpx.Tests.MaybeTest.for loops enumerate entire sequence and subsequent expressions also run" methodname="for loops enumerate entire sequence and subsequent expressions also run" classname="FSharpx.Tests.MaybeTest" runstate="Runnable" seed="1075179352" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.004785" asserts="2" />
          <test-case id="5-1742" name="is delayed" fullname="FSharpx.Tests.MaybeTest.is delayed" methodname="is delayed" classname="FSharpx.Tests.MaybeTest" runstate="Runnable" seed="1542332985" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000279" asserts="1" />
          <test-case id="5-1743" name="monad laws" fullname="FSharpx.Tests.MaybeTest.monad laws" methodname="monad laws" classname="FSharpx.Tests.MaybeTest" runstate="Runnable" seed="1324686082" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.016618" asserts="0">
            <output><![CDATA[left identity-Ok, passed 100 tests.

right identity-Ok, passed 100 tests.

associativity-Ok, passed 100 tests.

]]></output>
          </test-case>
          <test-case id="5-1744" name="monadplus laws" fullname="FSharpx.Tests.MaybeTest.monadplus laws" methodname="monadplus laws" classname="FSharpx.Tests.MaybeTest" runstate="Runnable" seed="425333635" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.007960" asserts="0">
            <output><![CDATA[monoid left identity-Ok, passed 100 tests.

monoid right identity-Ok, passed 100 tests.

monoid associativity-Ok, passed 100 tests.

left zero-Ok, passed 100 tests.

left catch-Ok, passed 100 tests.

]]></output>
          </test-case>
          <test-case id="5-1740" name="When calculating, it should calculate 0.0" fullname="FSharpx.Tests.MaybeTest.When calculating, it should calculate 0.0" methodname="When calculating, it should calculate 0.0" classname="FSharpx.Tests.MaybeTest" runstate="Runnable" seed="1492055159" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.002555" asserts="1" />
          <test-case id="5-1739" name="When calculating, it should calculate 0.009581881533" fullname="FSharpx.Tests.MaybeTest.When calculating, it should calculate 0.009581881533" methodname="When calculating, it should calculate 0.009581881533" classname="FSharpx.Tests.MaybeTest" runstate="Runnable" seed="505419104" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000977" asserts="1" />
          <test-case id="5-1746" name="while loops execute until guard is false and subsequent expressions also run" fullname="FSharpx.Tests.MaybeTest.while loops execute until guard is false and subsequent expressions also run" methodname="while loops execute until guard is false and subsequent expressions also run" classname="FSharpx.Tests.MaybeTest" runstate="Runnable" seed="1361954358" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000926" asserts="2" />
        </test-suite>
        <test-suite type="TestFixture" id="5-1761" name="MonoidTests" fullname="FSharpx.Tests.MonoidTests" classname="FSharpx.Tests.MonoidTests" runstate="Runnable" testcasecount="17" result="Skipped" label="Ignored" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:14Z" duration="0.344239" total="17" passed="16" failed="0" inconclusive="0" skipped="1" asserts="4">
          <reason>
            <message><![CDATA[One or more child tests were ignored]]></message>
          </reason>
          <test-case id="5-1770" name="all monoid" fullname="FSharpx.Tests.MonoidTests.all monoid" methodname="all monoid" classname="FSharpx.Tests.MonoidTests" runstate="Runnable" seed="313810434" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.013181" asserts="0">
            <output><![CDATA[all : monoid left identity-Ok, passed 100 tests.

all : monoid right identity-Ok, passed 100 tests.

all : monoid associativity-Ok, passed 100 tests.

]]></output>
          </test-case>
          <test-case id="5-1769" name="any monoid" fullname="FSharpx.Tests.MonoidTests.any monoid" methodname="any monoid" classname="FSharpx.Tests.MonoidTests" runstate="Runnable" seed="1091410254" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.003405" asserts="0">
            <output><![CDATA[any : monoid left identity-Ok, passed 100 tests.

any : monoid right identity-Ok, passed 100 tests.

any : monoid associativity-Ok, passed 100 tests.

]]></output>
          </test-case>
          <test-case id="5-1775" name="bytestring monoid" fullname="FSharpx.Tests.MonoidTests.bytestring monoid" methodname="bytestring monoid" classname="FSharpx.Tests.MonoidTests" runstate="Ignored" seed="444618133" result="Skipped" label="Ignored" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.000646" asserts="0">
            <properties>
              <property name="_SKIPREASON" value="Ignore temporarily this test" />
            </properties>
            <reason>
              <message><![CDATA[Ignore temporarily this test]]></message>
            </reason>
          </test-case>
          <test-case id="5-1768" name="dual monoid example" fullname="FSharpx.Tests.MonoidTests.dual monoid example" methodname="dual monoid example" classname="FSharpx.Tests.MonoidTests" runstate="Runnable" seed="681228285" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.001254" asserts="2" />
          <test-case id="5-1778" name="endo as dlist" fullname="FSharpx.Tests.MonoidTests.endo as dlist" methodname="endo as dlist" classname="FSharpx.Tests.MonoidTests" runstate="Runnable" seed="1735372201" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.002512" asserts="1" />
          <test-case id="5-1777" name="endo monoid" fullname="FSharpx.Tests.MonoidTests.endo monoid" methodname="endo monoid" classname="FSharpx.Tests.MonoidTests" runstate="Runnable" seed="2033200863" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.002190" asserts="1" />
          <test-case id="5-1762" name="int product monoid" fullname="FSharpx.Tests.MonoidTests.int product monoid" methodname="int product monoid" classname="FSharpx.Tests.MonoidTests" runstate="Runnable" seed="2123895602" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.005843" asserts="0">
            <output><![CDATA[int product : monoid left identity-Ok, passed 100 tests.

int product : monoid right identity-Ok, passed 100 tests.

int product : monoid associativity-Ok, passed 100 tests.

]]></output>
          </test-case>
          <test-case id="5-1763" name="int sum monoid" fullname="FSharpx.Tests.MonoidTests.int sum monoid" methodname="int sum monoid" classname="FSharpx.Tests.MonoidTests" runstate="Runnable" seed="1043695294" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.001546" asserts="0">
            <output><![CDATA[int sum : monoid left identity-Ok, passed 100 tests.

int sum : monoid right identity-Ok, passed 100 tests.

int sum : monoid associativity-Ok, passed 100 tests.

]]></output>
          </test-case>
          <test-case id="5-1764" name="list monoid" fullname="FSharpx.Tests.MonoidTests.list monoid" methodname="list monoid" classname="FSharpx.Tests.MonoidTests" runstate="Runnable" seed="1227645736" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.039620" asserts="0">
            <output><![CDATA[list : monoid left identity-Ok, passed 100 tests.

list : monoid right identity-Ok, passed 100 tests.

list : monoid associativity-Ok, passed 100 tests.

]]></output>
          </test-case>
          <test-case id="5-1766" name="map monoid" fullname="FSharpx.Tests.MonoidTests.map monoid" methodname="map monoid" classname="FSharpx.Tests.MonoidTests" runstate="Runnable" seed="864535084" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.072557" asserts="0">
            <output><![CDATA[map : monoid left identity-Ok, passed 100 tests.

map : monoid right identity-Ok, passed 100 tests.

map : monoid associativity-Ok, passed 100 tests.

]]></output>
          </test-case>
          <test-case id="5-1774" name="max monoid" fullname="FSharpx.Tests.MonoidTests.max monoid" methodname="max monoid" classname="FSharpx.Tests.MonoidTests" runstate="Runnable" seed="316981322" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.001624" asserts="0">
            <output><![CDATA[max : monoid left identity-Ok, passed 100 tests.

max : monoid right identity-Ok, passed 100 tests.

max : monoid associativity-Ok, passed 100 tests.

]]></output>
          </test-case>
          <test-case id="5-1773" name="min monoid" fullname="FSharpx.Tests.MonoidTests.min monoid" methodname="min monoid" classname="FSharpx.Tests.MonoidTests" runstate="Runnable" seed="1853729338" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.003297" asserts="0">
            <output><![CDATA[min : monoid left identity-Ok, passed 100 tests.

min : monoid right identity-Ok, passed 100 tests.

min : monoid associativity-Ok, passed 100 tests.

]]></output>
          </test-case>
          <test-case id="5-1767" name="option monoid" fullname="FSharpx.Tests.MonoidTests.option monoid" methodname="option monoid" classname="FSharpx.Tests.MonoidTests" runstate="Runnable" seed="577185679" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.003884" asserts="0">
            <output><![CDATA[option : monoid left identity-Ok, passed 100 tests.

option : monoid right identity-Ok, passed 100 tests.

option : monoid associativity-Ok, passed 100 tests.

]]></output>
          </test-case>
          <test-case id="5-1765" name="set monoid" fullname="FSharpx.Tests.MonoidTests.set monoid" methodname="set monoid" classname="FSharpx.Tests.MonoidTests" runstate="Runnable" seed="2070811689" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:13Z" duration="0.031456" asserts="0">
            <output><![CDATA[set : monoid left identity-Ok, passed 100 tests.

set : monoid right identity-Ok, passed 100 tests.

set : monoid associativity-Ok, passed 100 tests.

]]></output>
          </test-case>
          <test-case id="5-1771" name="tuple2 monoid" fullname="FSharpx.Tests.MonoidTests.tuple2 monoid" methodname="tuple2 monoid" classname="FSharpx.Tests.MonoidTests" runstate="Runnable" seed="802039666" result="Passed" start-time="2016-08-22 10:23:13Z" end-time="2016-08-22 10:23:14Z" duration="0.049410" asserts="0">
            <output><![CDATA[tuple2 : monoid left identity-Ok, passed 100 tests.

tuple2 : monoid right identity-Ok, passed 100 tests.

tuple2 : monoid associativity-Ok, passed 100 tests.

]]></output>
          </test-case>
          <test-case id="5-1772" name="tuple3 monoid" fullname="FSharpx.Tests.MonoidTests.tuple3 monoid" methodname="tuple3 monoid" classname="FSharpx.Tests.MonoidTests" runstate="Runnable" seed="103021913" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.049292" asserts="0">
            <output><![CDATA[tuple3 : monoid left identity-Ok, passed 100 tests.

tuple3 : monoid right identity-Ok, passed 100 tests.

tuple3 : monoid associativity-Ok, passed 100 tests.

]]></output>
          </test-case>
          <test-case id="5-1776" name="unit monoid" fullname="FSharpx.Tests.MonoidTests.unit monoid" methodname="unit monoid" classname="FSharpx.Tests.MonoidTests" runstate="Runnable" seed="1679412763" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.003825" asserts="0">
            <output><![CDATA[unit : monoid left identity-Ok, passed 100 tests.

unit : monoid right identity-Ok, passed 100 tests.

unit : monoid associativity-Ok, passed 100 tests.

]]></output>
          </test-case>
        </test-suite>
        <test-suite type="TestFixture" id="5-1150" name="OptionTests" fullname="FSharpx.Tests.OptionTests" classname="FSharpx.Tests.OptionTests" runstate="Runnable" testcasecount="9" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.037748" total="9" passed="9" failed="0" inconclusive="0" skipped="0" asserts="12">
          <test-case id="5-1159" name="concat none" fullname="FSharpx.Tests.OptionTests.concat none" methodname="concat none" classname="FSharpx.Tests.OptionTests" runstate="Runnable" seed="950517862" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.000394" asserts="1" />
          <test-case id="5-1158" name="concat some of none" fullname="FSharpx.Tests.OptionTests.concat some of none" methodname="concat some of none" classname="FSharpx.Tests.OptionTests" runstate="Runnable" seed="2069525599" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.000536" asserts="1" />
          <test-case id="5-1157" name="concat some of some" fullname="FSharpx.Tests.OptionTests.concat some of some" methodname="concat some of some" classname="FSharpx.Tests.OptionTests" runstate="Runnable" seed="510777209" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.000503" asserts="1" />
          <test-case id="5-1152" name="from bool and value" fullname="FSharpx.Tests.OptionTests.from bool and value" methodname="from bool and value" classname="FSharpx.Tests.OptionTests" runstate="Runnable" seed="321458473" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.000675" asserts="2" />
          <test-case id="5-1154" name="invalid cast" fullname="FSharpx.Tests.OptionTests.invalid cast" methodname="invalid cast" classname="FSharpx.Tests.OptionTests" runstate="Runnable" seed="6194167" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.000436" asserts="1" />
          <test-case id="5-1151" name="kleisli composition" fullname="FSharpx.Tests.OptionTests.kleisli composition" methodname="kleisli composition" classname="FSharpx.Tests.OptionTests" runstate="Runnable" seed="1108591039" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.000815" asserts="2" />
          <test-case id="5-1156" name="sequence with None" fullname="FSharpx.Tests.OptionTests.sequence with None" methodname="sequence with None" classname="FSharpx.Tests.OptionTests" runstate="Runnable" seed="1542601008" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.001321" asserts="1" />
          <test-case id="5-1155" name="sequence with Some" fullname="FSharpx.Tests.OptionTests.sequence with Some" methodname="sequence with Some" classname="FSharpx.Tests.OptionTests" runstate="Runnable" seed="719683124" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.001574" asserts="1" />
          <test-case id="5-1153" name="valid cast" fullname="FSharpx.Tests.OptionTests.valid cast" methodname="valid cast" classname="FSharpx.Tests.OptionTests" runstate="Runnable" seed="386540672" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.000992" asserts="2" />
        </test-suite>
        <test-suite type="TestFixture" id="5-1130" name="PreludeTests" fullname="FSharpx.Tests.PreludeTests" classname="FSharpx.Tests.PreludeTests" runstate="Runnable" testcasecount="9" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.044654" total="9" passed="9" failed="0" inconclusive="0" skipped="0" asserts="12">
          <test-case id="5-1135" name="Boolean active pattern matches" fullname="FSharpx.Tests.PreludeTests.Boolean active pattern matches" methodname="Boolean active pattern matches" classname="FSharpx.Tests.PreludeTests" runstate="Runnable" seed="997972875" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.000630" asserts="1" />
          <test-case id="5-1133" name="DateTime parse is culture invariant" fullname="FSharpx.Tests.PreludeTests.DateTime parse is culture invariant" methodname="DateTime parse is culture invariant" classname="FSharpx.Tests.PreludeTests" runstate="Runnable" seed="1743604457" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.004179" asserts="1">
            <properties>
              <property name="SetCulture" value="es-AR" />
            </properties>
          </test-case>
          <test-case id="5-1134" name="DateTime parseExact" fullname="FSharpx.Tests.PreludeTests.DateTime parseExact" methodname="DateTime parseExact" classname="FSharpx.Tests.PreludeTests" runstate="Runnable" seed="1149474855" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.001066" asserts="1" />
          <test-case id="5-1137" name="Double active pattern is culture invariant" fullname="FSharpx.Tests.PreludeTests.Double active pattern is culture invariant" methodname="Double active pattern is culture invariant" classname="FSharpx.Tests.PreludeTests" runstate="Runnable" seed="1679307663" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.002830" asserts="2">
            <properties>
              <property name="SetCulture" value="de-DE" />
            </properties>
          </test-case>
          <test-case id="5-1132" name="Double parse is culture invariant" fullname="FSharpx.Tests.PreludeTests.Double parse is culture invariant" methodname="Double parse is culture invariant" classname="FSharpx.Tests.PreludeTests" runstate="Runnable" seed="1496447920" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.000892" asserts="2">
            <properties>
              <property name="SetCulture" value="es-AR" />
            </properties>
          </test-case>
          <test-case id="5-1139" name="fix factabs" fullname="FSharpx.Tests.PreludeTests.fix factabs" methodname="fix factabs" classname="FSharpx.Tests.PreludeTests" runstate="Runnable" seed="1642316694" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.001542" asserts="1" />
          <test-case id="5-1136" name="Int32 active pattern matches" fullname="FSharpx.Tests.PreludeTests.Int32 active pattern matches" methodname="Int32 active pattern matches" classname="FSharpx.Tests.PreludeTests" runstate="Runnable" seed="1046376521" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.000622" asserts="1" />
          <test-case id="5-1138" name="konst 9 0" fullname="FSharpx.Tests.PreludeTests.konst 9 0" methodname="konst 9 0" classname="FSharpx.Tests.PreludeTests" runstate="Runnable" seed="325079734" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.000314" asserts="1" />
          <test-case id="5-1131" name="Single parse is culture invariant" fullname="FSharpx.Tests.PreludeTests.Single parse is culture invariant" methodname="Single parse is culture invariant" classname="FSharpx.Tests.PreludeTests" runstate="Runnable" seed="689719049" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.001304" asserts="2">
            <properties>
              <property name="SetCulture" value="es-AR" />
            </properties>
          </test-case>
        </test-suite>
        <test-suite type="TestFixture" id="5-1721" name="ReaderTest" fullname="FSharpx.Tests.ReaderTest" classname="FSharpx.Tests.ReaderTest" runstate="Runnable" testcasecount="12" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.059795" total="12" passed="12" failed="0" inconclusive="0" skipped="0" asserts="12">
          <test-case id="5-1725" name="Bind should enable let!" fullname="FSharpx.Tests.ReaderTest.Bind should enable let!" methodname="Bind should enable let!" classname="FSharpx.Tests.ReaderTest" runstate="Runnable" seed="1836638455" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.001404" asserts="1" />
          <test-case id="5-1727" name="Combine should combine if statement" fullname="FSharpx.Tests.ReaderTest.Combine should combine if statement" methodname="Combine should combine if statement" classname="FSharpx.Tests.ReaderTest" runstate="Runnable" seed="1258065984" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.002111" asserts="1" />
          <test-case id="5-1733" name="for should increment count" fullname="FSharpx.Tests.ReaderTest.for should increment count" methodname="for should increment count" classname="FSharpx.Tests.ReaderTest" runstate="Runnable" seed="1965240341" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.005558" asserts="1" />
          <test-case id="5-1722" name="Return should enable return" fullname="FSharpx.Tests.ReaderTest.Return should enable return" methodname="Return should enable return" classname="FSharpx.Tests.ReaderTest" runstate="Runnable" seed="1332671348" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.000567" asserts="1" />
          <test-case id="5-1723" name="ReturnFrom should enable return!" fullname="FSharpx.Tests.ReaderTest.ReturnFrom should enable return!" methodname="ReturnFrom should enable return!" classname="FSharpx.Tests.ReaderTest" runstate="Runnable" seed="1741115190" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.000568" asserts="1" />
          <test-case id="5-1724" name="ReturnFrom should enable return! from asks" fullname="FSharpx.Tests.ReaderTest.ReturnFrom should enable return! from asks" methodname="ReturnFrom should enable return! from asks" classname="FSharpx.Tests.ReaderTest" runstate="Runnable" seed="684450528" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.001697" asserts="1" />
          <test-case id="5-1729" name="TryFinally with exception should execute finally" fullname="FSharpx.Tests.ReaderTest.TryFinally with exception should execute finally" methodname="TryFinally with exception should execute finally" classname="FSharpx.Tests.ReaderTest" runstate="Runnable" seed="261882092" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.001877" asserts="1" />
          <test-case id="5-1728" name="TryWith should catch exception" fullname="FSharpx.Tests.ReaderTest.TryWith should catch exception" methodname="TryWith should catch exception" classname="FSharpx.Tests.ReaderTest" runstate="Runnable" seed="1854227657" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.001511" asserts="1" />
          <test-case id="5-1731" name="use! should call Dispose" fullname="FSharpx.Tests.ReaderTest.use! should call Dispose" methodname="use! should call Dispose" classname="FSharpx.Tests.ReaderTest" runstate="Runnable" seed="2124246606" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.001348" asserts="1" />
          <test-case id="5-1730" name="Using should call Dispose" fullname="FSharpx.Tests.ReaderTest.Using should call Dispose" methodname="Using should call Dispose" classname="FSharpx.Tests.ReaderTest" runstate="Runnable" seed="392390983" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.001236" asserts="1" />
          <test-case id="5-1732" name="while should increment count" fullname="FSharpx.Tests.ReaderTest.while should increment count" methodname="while should increment count" classname="FSharpx.Tests.ReaderTest" runstate="Runnable" seed="1774960816" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.001145" asserts="1" />
          <test-case id="5-1726" name="Zero should allow no else branch" fullname="FSharpx.Tests.ReaderTest.Zero should allow no else branch" methodname="Zero should allow no else branch" classname="FSharpx.Tests.ReaderTest" runstate="Runnable" seed="21068490" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.000853" asserts="1" />
        </test-suite>
        <test-suite type="TestFixture" id="5-1096" name="RegexTests" fullname="FSharpx.Tests.RegexTests" classname="FSharpx.Tests.RegexTests" runstate="Runnable" testcasecount="9" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.094698" total="9" passed="9" failed="0" inconclusive="0" skipped="0" asserts="24">
          <test-case id="5-1103" name="all variations yield same match value result" fullname="FSharpx.Tests.RegexTests.all variations yield same match value result" methodname="all variations yield same match value result" classname="FSharpx.Tests.RegexTests" runstate="Runnable" seed="1057453889" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.052083" asserts="10" />
          <test-case id="5-1105" name="Match active pattern is culture invariant" fullname="FSharpx.Tests.RegexTests.Match active pattern is culture invariant" methodname="Match active pattern is culture invariant" classname="FSharpx.Tests.RegexTests" runstate="Runnable" seed="1326508151" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.004492" asserts="1" />
          <test-case id="5-1100" name="match with null input is none" fullname="FSharpx.Tests.RegexTests.match with null input is none" methodname="match with null input is none" classname="FSharpx.Tests.RegexTests" runstate="Runnable" seed="426037302" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.000406" asserts="1" />
          <test-case id="5-1101" name="non match is none" fullname="FSharpx.Tests.RegexTests.non match is none" methodname="non match is none" classname="FSharpx.Tests.RegexTests" runstate="Runnable" seed="539631224" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.000499" asserts="1" />
          <test-case id="5-1098" name="replace with accumulator" fullname="FSharpx.Tests.RegexTests.replace with accumulator" methodname="replace with accumulator" classname="FSharpx.Tests.RegexTests" runstate="Runnable" seed="1606699556" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.002090" asserts="2" />
          <test-case id="5-1099" name="replace with fixed number of replacements" fullname="FSharpx.Tests.RegexTests.replace with fixed number of replacements" methodname="replace with fixed number of replacements" classname="FSharpx.Tests.RegexTests" runstate="Runnable" seed="972874818" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.001750" asserts="1" />
          <test-case id="5-1102" name="successful match with one optional group unsuccessful" fullname="FSharpx.Tests.RegexTests.successful match with one optional group unsuccessful" methodname="successful match with one optional group unsuccessful" classname="FSharpx.Tests.RegexTests" runstate="Runnable" seed="1519793400" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.001881" asserts="5" />
          <test-case id="5-1104" name="tryMatch is culture invariant" fullname="FSharpx.Tests.RegexTests.tryMatch is culture invariant" methodname="tryMatch is culture invariant" classname="FSharpx.Tests.RegexTests" runstate="Runnable" seed="1844805920" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.000453" asserts="1" />
          <test-case id="5-1097" name="tryMatch success" fullname="FSharpx.Tests.RegexTests.tryMatch success" methodname="tryMatch success" classname="FSharpx.Tests.RegexTests" runstate="Runnable" seed="1187655601" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.001609" asserts="2" />
        </test-suite>
        <test-suite type="TestFixture" id="5-1734" name="StateTest" fullname="FSharpx.Tests.StateTest" classname="FSharpx.Tests.StateTest" runstate="Runnable" testcasecount="3" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.017964" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="3">
          <test-case id="5-1737" name="When running the workflow, it should return 4" fullname="FSharpx.Tests.StateTest.When running the workflow, it should return 4" methodname="When running the workflow, it should return 4" classname="FSharpx.Tests.StateTest" runstate="Runnable" seed="1556622523" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.003666" asserts="1" />
          <test-case id="5-1736" name="When starting a ticker at 0 and ticking twice, it should have a state of 2" fullname="FSharpx.Tests.StateTest.When starting a ticker at 0 and ticking twice, it should have a state of 2" methodname="When starting a ticker at 0 and ticking twice, it should have a state of 2" classname="FSharpx.Tests.StateTest" runstate="Runnable" seed="1483600911" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.003048" asserts="1" />
          <test-case id="5-1735" name="When starting a ticker at 0, it should have a state of 0" fullname="FSharpx.Tests.StateTest.When starting a ticker at 0, it should have a state of 0" methodname="When starting a ticker at 0, it should have a state of 0" classname="FSharpx.Tests.StateTest" runstate="Runnable" seed="1776058251" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.000330" asserts="1" />
        </test-suite>
        <test-suite type="TestFixture" id="5-1779" name="StringsTest" fullname="FSharpx.Tests.StringsTest" classname="FSharpx.Tests.StringsTest" runstate="Runnable" testcasecount="14" result="Skipped" label="Ignored" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.080814" total="14" passed="13" failed="0" inconclusive="0" skipped="1" asserts="57">
          <reason>
            <message><![CDATA[One or more child tests were ignored]]></message>
          </reason>
          <test-case id="5-1783" name="Can infer floats" fullname="FSharpx.Tests.StringsTest.Can infer floats" methodname="Can infer floats" classname="FSharpx.Tests.StringsTest" runstate="Runnable" seed="86151125" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.000818" asserts="1" />
          <test-case id="5-1780" name="Can pluralize names" fullname="FSharpx.Tests.StringsTest.Can pluralize names" methodname="Can pluralize names" classname="FSharpx.Tests.StringsTest" runstate="Runnable" seed="2069779995" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.013801" asserts="17" />
          <test-case id="5-1782" name="Can simplify the type names" fullname="FSharpx.Tests.StringsTest.Can simplify the type names" methodname="Can simplify the type names" classname="FSharpx.Tests.StringsTest" runstate="Runnable" seed="1881906295" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.008335" asserts="11" />
          <test-case id="5-1781" name="Can singularize names" fullname="FSharpx.Tests.StringsTest.Can singularize names" methodname="Can singularize names" classname="FSharpx.Tests.StringsTest" runstate="Runnable" seed="668114346" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.002124" asserts="19" />
          <test-case id="5-1785" name="Should merge by newlines" fullname="FSharpx.Tests.StringsTest.Should merge by newlines" methodname="Should merge by newlines" classname="FSharpx.Tests.StringsTest" runstate="Ignored" seed="419913086" result="Skipped" label="Ignored" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.000045" asserts="0">
            <properties>
              <property name="_SKIPREASON" value="Failing on appveyor due to line endings" />
            </properties>
            <reason>
              <message><![CDATA[Failing on appveyor due to line endings]]></message>
            </reason>
          </test-case>
          <test-case id="5-1786" name="Should merge by whitespace" fullname="FSharpx.Tests.StringsTest.Should merge by whitespace" methodname="Should merge by whitespace" classname="FSharpx.Tests.StringsTest" runstate="Runnable" seed="1424473438" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.000468" asserts="1" />
          <test-case id="5-1784" name="Should split by newlines" fullname="FSharpx.Tests.StringsTest.Should split by newlines" methodname="Should split by newlines" classname="FSharpx.Tests.StringsTest" runstate="Runnable" seed="1985937612" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.002433" asserts="1" />
          <test-case id="5-1787" name="Should split by whitespace" fullname="FSharpx.Tests.StringsTest.Should split by whitespace" methodname="Should split by whitespace" classname="FSharpx.Tests.StringsTest" runstate="Runnable" seed="1499905101" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.000736" asserts="1" />
          <test-case id="5-1790" name="Should split by whitespace with \n newlines" fullname="FSharpx.Tests.StringsTest.Should split by whitespace with \n newlines" methodname="Should split by whitespace with \n newlines" classname="FSharpx.Tests.StringsTest" runstate="Runnable" seed="2031960529" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.000533" asserts="1" />
          <test-case id="5-1791" name="Should split by whitespace with \r newlines" fullname="FSharpx.Tests.StringsTest.Should split by whitespace with \r newlines" methodname="Should split by whitespace with \r newlines" classname="FSharpx.Tests.StringsTest" runstate="Runnable" seed="2101478571" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.000643" asserts="1" />
          <test-case id="5-1792" name="Should split by whitespace with \r\n newlines" fullname="FSharpx.Tests.StringsTest.Should split by whitespace with \r\n newlines" methodname="Should split by whitespace with \r\n newlines" classname="FSharpx.Tests.StringsTest" runstate="Runnable" seed="899852839" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.000642" asserts="1" />
          <test-case id="5-1793" name="Should split by whitespace with mixed combinations of \r and \n newlines" fullname="FSharpx.Tests.StringsTest.Should split by whitespace with mixed combinations of \r and \n newlines" methodname="Should split by whitespace with mixed combinations of \r and \n newlines" classname="FSharpx.Tests.StringsTest" runstate="Runnable" seed="703283430" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.000583" asserts="1" />
          <test-case id="5-1789" name="Should split by whitespace with mixed spaces and tabs" fullname="FSharpx.Tests.StringsTest.Should split by whitespace with mixed spaces and tabs" methodname="Should split by whitespace with mixed spaces and tabs" classname="FSharpx.Tests.StringsTest" runstate="Runnable" seed="1073129687" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.000565" asserts="1" />
          <test-case id="5-1788" name="Should split by whitespace with tabs" fullname="FSharpx.Tests.StringsTest.Should split by whitespace with tabs" methodname="Should split by whitespace with tabs" classname="FSharpx.Tests.StringsTest" runstate="Runnable" seed="1716074386" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.000527" asserts="1" />
        </test-suite>
        <test-suite type="TestFixture" id="5-1066" name="TaskBuilderTests" fullname="FSharpx.Tests.TaskBuilderTests" classname="FSharpx.Tests.TaskBuilderTests" runstate="Runnable" testcasecount="17" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.104510" total="17" passed="17" failed="0" inconclusive="0" skipped="0" asserts="19">
          <test-case id="5-1074" name="bind should chain two tasks" fullname="FSharpx.Tests.TaskBuilderTests.bind should chain two tasks" methodname="bind should chain two tasks" classname="FSharpx.Tests.TaskBuilderTests" runstate="Runnable" seed="1970181852" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.013802" asserts="1" />
          <test-case id="5-1076" name="bind should chain two tasks parametrized by CancellationToken" fullname="FSharpx.Tests.TaskBuilderTests.bind should chain two tasks parametrized by CancellationToken" methodname="bind should chain two tasks parametrized by CancellationToken" classname="FSharpx.Tests.TaskBuilderTests" runstate="Runnable" seed="1352144776" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.002340" asserts="1" />
          <test-case id="5-1075" name="bind should pass cancellation token" fullname="FSharpx.Tests.TaskBuilderTests.bind should pass cancellation token" methodname="bind should pass cancellation token" classname="FSharpx.Tests.TaskBuilderTests" runstate="Runnable" seed="1149873988" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.003380" asserts="1" />
          <test-case id="5-1079" name="cancel while" fullname="FSharpx.Tests.TaskBuilderTests.cancel while" methodname="cancel while" classname="FSharpx.Tests.TaskBuilderTests" runstate="Runnable" seed="857347638" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.003723" asserts="1" />
          <test-case id="5-1070" name="canceled task" fullname="FSharpx.Tests.TaskBuilderTests.canceled task" methodname="canceled task" classname="FSharpx.Tests.TaskBuilderTests" runstate="Runnable" seed="1190621350" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.000460" asserts="0" />
          <test-case id="5-1071" name="canceled task 2" fullname="FSharpx.Tests.TaskBuilderTests.canceled task 2" methodname="canceled task 2" classname="FSharpx.Tests.TaskBuilderTests" runstate="Runnable" seed="865813321" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.000414" asserts="0" />
          <test-case id="5-1083" name="combine" fullname="FSharpx.Tests.TaskBuilderTests.combine" methodname="combine" classname="FSharpx.Tests.TaskBuilderTests" runstate="Runnable" seed="1596437667" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.004594" asserts="2" />
          <test-case id="5-1069" name="exception in task" fullname="FSharpx.Tests.TaskBuilderTests.exception in task" methodname="exception in task" classname="FSharpx.Tests.TaskBuilderTests" runstate="Runnable" seed="560010337" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.001124" asserts="1" />
          <test-case id="5-1082" name="for" fullname="FSharpx.Tests.TaskBuilderTests.for" methodname="for" classname="FSharpx.Tests.TaskBuilderTests" runstate="Runnable" seed="612173576" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.005243" asserts="1" />
          <test-case id="5-1072" name="return should return value" fullname="FSharpx.Tests.TaskBuilderTests.return should return value" methodname="return should return value" classname="FSharpx.Tests.TaskBuilderTests" runstate="Runnable" seed="1458806981" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.000434" asserts="1" />
          <test-case id="5-1073" name="return! should accept task parametrized by CancellationToken" fullname="FSharpx.Tests.TaskBuilderTests.return! should accept task parametrized by CancellationToken" methodname="return! should accept task parametrized by CancellationToken" classname="FSharpx.Tests.TaskBuilderTests" runstate="Runnable" seed="1113494848" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.000970" asserts="1" />
          <test-case id="5-1077" name="task should be delayed" fullname="FSharpx.Tests.TaskBuilderTests.task should be delayed" methodname="task should be delayed" classname="FSharpx.Tests.TaskBuilderTests" runstate="Runnable" seed="1143655618" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.001589" asserts="3" />
          <test-case id="5-1067" name="task should return the right value after let!" fullname="FSharpx.Tests.TaskBuilderTests.task should return the right value after let!" methodname="task should return the right value after let!" classname="FSharpx.Tests.TaskBuilderTests" runstate="Runnable" seed="931871602" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.000826" asserts="1" />
          <test-case id="5-1068" name="task should return the right value after return!" fullname="FSharpx.Tests.TaskBuilderTests.task should return the right value after return!" methodname="task should return the right value after return!" classname="FSharpx.Tests.TaskBuilderTests" runstate="Runnable" seed="1899753906" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.000601" asserts="1" />
          <test-case id="5-1081" name="try finally should be cancellable" fullname="FSharpx.Tests.TaskBuilderTests.try finally should be cancellable" methodname="try finally should be cancellable" classname="FSharpx.Tests.TaskBuilderTests" runstate="Runnable" seed="552783500" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.000940" asserts="1" />
          <test-case id="5-1080" name="try finally should execute finally block" fullname="FSharpx.Tests.TaskBuilderTests.try finally should execute finally block" methodname="try finally should execute finally block" classname="FSharpx.Tests.TaskBuilderTests" runstate="Runnable" seed="1807154080" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.002041" asserts="2" />
          <test-case id="5-1078" name="while" fullname="FSharpx.Tests.TaskBuilderTests.while" methodname="while" classname="FSharpx.Tests.TaskBuilderTests" runstate="Runnable" seed="1308988968" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.001442" asserts="1" />
        </test-suite>
        <test-suite type="TestFixture" id="5-1084" name="TaskTests" fullname="FSharpx.Tests.TaskTests" classname="FSharpx.Tests.TaskTests" runstate="Runnable" testcasecount="11" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.080113" total="11" passed="11" failed="0" inconclusive="0" skipped="0" asserts="8">
          <test-case id="5-1088" name="canceled task" fullname="FSharpx.Tests.TaskTests.canceled task" methodname="canceled task" classname="FSharpx.Tests.TaskTests" runstate="Runnable" seed="2141465706" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.001385" asserts="0" />
          <test-case id="5-1089" name="canceled task 2" fullname="FSharpx.Tests.TaskTests.canceled task 2" methodname="canceled task 2" classname="FSharpx.Tests.TaskTests" runstate="Runnable" seed="1246828603" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.002468" asserts="0" />
          <test-case id="5-1087" name="exception in task" fullname="FSharpx.Tests.TaskTests.exception in task" methodname="exception in task" classname="FSharpx.Tests.TaskTests" runstate="Runnable" seed="1452826751" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.000729" asserts="1" />
          <test-case id="5-1095" name="run delay law" fullname="FSharpx.Tests.TaskTests.run delay law" methodname="run delay law" classname="FSharpx.Tests.TaskTests" runstate="Runnable" seed="885233457" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.018281" asserts="0">
            <output><![CDATA[run delay law-Ok, passed 100 tests.

]]></output>
          </test-case>
          <test-case id="5-1085" name="task should return the right value after let!" fullname="FSharpx.Tests.TaskTests.task should return the right value after let!" methodname="task should return the right value after let!" classname="FSharpx.Tests.TaskTests" runstate="Runnable" seed="1283312845" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.002815" asserts="1" />
          <test-case id="5-1086" name="task should return the right value after return!" fullname="FSharpx.Tests.TaskTests.task should return the right value after return!" methodname="task should return the right value after return!" classname="FSharpx.Tests.TaskTests" runstate="Runnable" seed="1696638780" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.000968" asserts="1" />
          <test-case id="5-1091" name="try with should catch exception in the body" fullname="FSharpx.Tests.TaskTests.try with should catch exception in the body" methodname="try with should catch exception in the body" classname="FSharpx.Tests.TaskTests" runstate="Runnable" seed="1186361715" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.001354" asserts="1" />
          <test-case id="5-1092" name="try with should catch exception in the continuation" fullname="FSharpx.Tests.TaskTests.try with should catch exception in the continuation" methodname="try with should catch exception in the continuation" classname="FSharpx.Tests.TaskTests" runstate="Runnable" seed="1981375175" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.002973" asserts="1" />
          <test-case id="5-1093" name="try with should catch exception only by type" fullname="FSharpx.Tests.TaskTests.try with should catch exception only by type" methodname="try with should catch exception only by type" classname="FSharpx.Tests.TaskTests" runstate="Runnable" seed="2065438584" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.000831" asserts="1" />
          <test-case id="5-1094" name="try with should do unwrapping of exception to original type if it was raised in continuation" fullname="FSharpx.Tests.TaskTests.try with should do unwrapping of exception to original type if it was raised in continuation" methodname="try with should do unwrapping of exception to original type if it was raised in continuation" classname="FSharpx.Tests.TaskTests" runstate="Runnable" seed="417769170" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.001269" asserts="1" />
          <test-case id="5-1090" name="while" fullname="FSharpx.Tests.TaskTests.while" methodname="while" classname="FSharpx.Tests.TaskTests" runstate="Runnable" seed="525227095" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:14Z" duration="0.003191" asserts="1" />
        </test-suite>
        <test-suite type="TestFixture" id="5-1106" name="TimeMeasurementTests" fullname="FSharpx.Tests.TimeMeasurementTests" classname="FSharpx.Tests.TimeMeasurementTests" runstate="Runnable" testcasecount="2" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:15Z" duration="1.119273" total="2" passed="2" failed="0" inconclusive="0" skipped="0" asserts="2">
          <test-case id="5-1108" name="When using a stopwatch the average time should be measured " fullname="FSharpx.Tests.TimeMeasurementTests.When using a stopwatch the average time should be measured " methodname="When using a stopwatch the average time should be measured " classname="FSharpx.Tests.TimeMeasurementTests" runstate="Runnable" seed="87308229" result="Passed" start-time="2016-08-22 10:23:14Z" end-time="2016-08-22 10:23:15Z" duration="1.010706" asserts="1" />
          <test-case id="5-1107" name="When using a stopwatch the elapsed time should be measured" fullname="FSharpx.Tests.TimeMeasurementTests.When using a stopwatch the elapsed time should be measured" methodname="When using a stopwatch the elapsed time should be measured" classname="FSharpx.Tests.TimeMeasurementTests" runstate="Runnable" seed="770612184" result="Passed" start-time="2016-08-22 10:23:15Z" end-time="2016-08-22 10:23:15Z" duration="0.101287" asserts="1" />
        </test-suite>
        <test-suite type="TestFixture" id="5-1713" name="UndoTest" fullname="FSharpx.Tests.UndoTest" classname="FSharpx.Tests.UndoTest" runstate="Runnable" testcasecount="7" result="Passed" start-time="2016-08-22 10:23:15Z" end-time="2016-08-22 10:23:15Z" duration="0.056095" total="7" passed="7" failed="0" inconclusive="0" skipped="0" asserts="12">
          <test-case id="5-1714" name="When starting a text editior with empty string, it should have a empty string in history" fullname="FSharpx.Tests.UndoTest.When starting a text editior with empty string, it should have a empty string in history" methodname="When starting a text editior with empty string, it should have a empty string in history" classname="FSharpx.Tests.UndoTest" runstate="Runnable" seed="1536153974" result="Passed" start-time="2016-08-22 10:23:15Z" end-time="2016-08-22 10:23:15Z" duration="0.010119" asserts="1" />
          <test-case id="5-1718" name="When starting a text editor with &quot;&quot; and adding a string, it should allow two undos" fullname="FSharpx.Tests.UndoTest.When starting a text editor with &quot;&quot; and adding a string, it should allow two undos" methodname="When starting a text editor with &quot;&quot; and adding a string, it should allow two undos" classname="FSharpx.Tests.UndoTest" runstate="Runnable" seed="260810420" result="Passed" start-time="2016-08-22 10:23:15Z" end-time="2016-08-22 10:23:15Z" duration="0.006193" asserts="2" />
          <test-case id="5-1720" name="When starting a text editor with &quot;&quot; and adding a string, it should not allow a redo without an undo" fullname="FSharpx.Tests.UndoTest.When starting a text editor with &quot;&quot; and adding a string, it should not allow a redo without an undo" methodname="When starting a text editor with &quot;&quot; and adding a string, it should not allow a redo without an undo" classname="FSharpx.Tests.UndoTest" runstate="Runnable" seed="511000451" result="Passed" start-time="2016-08-22 10:23:15Z" end-time="2016-08-22 10:23:15Z" duration="0.004805" asserts="2" />
          <test-case id="5-1719" name="When starting a text editor with &quot;&quot; and adding a string, it should not allow three undos" fullname="FSharpx.Tests.UndoTest.When starting a text editor with &quot;&quot; and adding a string, it should not allow three undos" methodname="When starting a text editor with &quot;&quot; and adding a string, it should not allow three undos" classname="FSharpx.Tests.UndoTest" runstate="Runnable" seed="1512004578" result="Passed" start-time="2016-08-22 10:23:15Z" end-time="2016-08-22 10:23:15Z" duration="0.002759" asserts="2" />
          <test-case id="5-1717" name="When starting a text editor with &quot;&quot; and adding three strings and undoing two and redoing two, it should contain all three strings" fullname="FSharpx.Tests.UndoTest.When starting a text editor with &quot;&quot; and adding three strings and undoing two and redoing two, it should contain all three strings" methodname="When starting a text editor with &quot;&quot; and adding three strings and undoing two and redoing two, it should contain all three strings" classname="FSharpx.Tests.UndoTest" runstate="Runnable" seed="2121320999" result="Passed" start-time="2016-08-22 10:23:15Z" end-time="2016-08-22 10:23:15Z" duration="0.003464" asserts="2" />
          <test-case id="5-1716" name="When starting a text editor with &quot;&quot; and adding three strings and undoing two, it should contain the first string" fullname="FSharpx.Tests.UndoTest.When starting a text editor with &quot;&quot; and adding three strings and undoing two, it should contain the first string" methodname="When starting a text editor with &quot;&quot; and adding three strings and undoing two, it should contain the first string" classname="FSharpx.Tests.UndoTest" runstate="Runnable" seed="914741239" result="Passed" start-time="2016-08-22 10:23:15Z" end-time="2016-08-22 10:23:15Z" duration="0.002832" asserts="2" />
          <test-case id="5-1715" name="When starting a text editor with &quot;&quot; and adding two strings, it should contain both string" fullname="FSharpx.Tests.UndoTest.When starting a text editor with &quot;&quot; and adding two strings, it should contain both string" methodname="When starting a text editor with &quot;&quot; and adding two strings, it should contain both string" classname="FSharpx.Tests.UndoTest" runstate="Runnable" seed="988514657" result="Passed" start-time="2016-08-22 10:23:15Z" end-time="2016-08-22 10:23:15Z" duration="0.001481" asserts="1" />
        </test-suite>
        <test-suite type="TestFixture" id="5-1162" name="ValidationExample" fullname="FSharpx.Tests.ValidationExample" classname="FSharpx.Tests.ValidationExample" runstate="Runnable" testcasecount="3" result="Passed" start-time="2016-08-22 10:23:15Z" end-time="2016-08-22 10:23:15Z" duration="0.041586" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="9">
          <test-case id="5-1163" name="part1" fullname="FSharpx.Tests.ValidationExample.part1" methodname="part1" classname="FSharpx.Tests.ValidationExample" runstate="Runnable" seed="1178528210" result="Passed" start-time="2016-08-22 10:23:15Z" end-time="2016-08-22 10:23:15Z" duration="0.013795" asserts="5" />
          <test-case id="5-1164" name="part2" fullname="FSharpx.Tests.ValidationExample.part2" methodname="part2" classname="FSharpx.Tests.ValidationExample" runstate="Runnable" seed="418954531" result="Passed" start-time="2016-08-22 10:23:15Z" end-time="2016-08-22 10:23:15Z" duration="0.011203" asserts="2" />
          <test-case id="5-1165" name="part3" fullname="FSharpx.Tests.ValidationExample.part3" methodname="part3" classname="FSharpx.Tests.ValidationExample" runstate="Runnable" seed="452030156" result="Passed" start-time="2016-08-22 10:23:15Z" end-time="2016-08-22 10:23:15Z" duration="0.005818" asserts="2" />
        </test-suite>
        <test-suite type="TestFixture" id="5-1166" name="ValidationTests" fullname="FSharpx.Tests.ValidationTests" classname="FSharpx.Tests.ValidationTests" runstate="Runnable" testcasecount="4" result="Passed" start-time="2016-08-22 10:23:15Z" end-time="2016-08-22 10:23:15Z" duration="0.061537" total="4" passed="4" failed="0" inconclusive="0" skipped="0" asserts="7">
          <test-case id="5-1168" name="using ap" fullname="FSharpx.Tests.ValidationTests.using ap" methodname="using ap" classname="FSharpx.Tests.ValidationTests" runstate="Runnable" seed="1152876906" result="Passed" start-time="2016-08-22 10:23:15Z" end-time="2016-08-22 10:23:15Z" duration="0.006557" asserts="2">
            <output><![CDATA[Invalid customer. Errors:
seq ["Surname can't be null"]
]]></output>
          </test-case>
          <test-case id="5-1167" name="ValidateCustomer" fullname="FSharpx.Tests.ValidationTests.ValidateCustomer" methodname="ValidateCustomer" classname="FSharpx.Tests.ValidationTests" runstate="Runnable" seed="729035997" result="Passed" start-time="2016-08-22 10:23:15Z" end-time="2016-08-22 10:23:15Z" duration="0.023677" asserts="4">
            <output><![CDATA[Invalid customer. Errors:
seq
  ["Surname can't be foo"; "Cost for product 'Bar' can't be negative";
   "Product name can't be null"]
]]></output>
          </test-case>
          <test-case id="5-1169" name="validation with sum monoid" fullname="FSharpx.Tests.ValidationTests.validation with sum monoid" methodname="validation with sum monoid" classname="FSharpx.Tests.ValidationTests" runstate="Runnable" seed="1589353314" result="Passed" start-time="2016-08-22 10:23:15Z" end-time="2016-08-22 10:23:15Z" duration="0.010803" asserts="1" />
          <test-case id="5-1170" name="validation with unit monoid" fullname="FSharpx.Tests.ValidationTests.validation with unit monoid" methodname="validation with unit monoid" classname="FSharpx.Tests.ValidationTests" runstate="Runnable" seed="1593288493" result="Passed" start-time="2016-08-22 10:23:15Z" end-time="2016-08-22 10:23:15Z" duration="0.007341" asserts="0" />
        </test-suite>
        <test-suite type="TestFixture" id="5-1015" name="WebClientTests" fullname="FSharpx.Tests.WebClientTests" classname="FSharpx.Tests.WebClientTests" runstate="Runnable" testcasecount="3" result="Passed" start-time="2016-08-22 10:23:15Z" end-time="2016-08-22 10:23:17Z" duration="1.326528" total="3" passed="3" failed="0" inconclusive="0" skipped="0" asserts="3">
          <test-case id="5-1018" name="AsyncDownloadData" fullname="FSharpx.Tests.WebClientTests.AsyncDownloadData" methodname="AsyncDownloadData" classname="FSharpx.Tests.WebClientTests" runstate="Runnable" seed="344277779" result="Passed" start-time="2016-08-22 10:23:15Z" end-time="2016-08-22 10:23:16Z" duration="0.624252" asserts="1" />
          <test-case id="5-1017" name="AsyncDownloadFile" fullname="FSharpx.Tests.WebClientTests.AsyncDownloadFile" methodname="AsyncDownloadFile" classname="FSharpx.Tests.WebClientTests" runstate="Runnable" seed="573459874" result="Passed" start-time="2016-08-22 10:23:16Z" end-time="2016-08-22 10:23:17Z" duration="0.537894" asserts="1" />
          <test-case id="5-1016" name="AsyncOpenRead" fullname="FSharpx.Tests.WebClientTests.AsyncOpenRead" methodname="AsyncOpenRead" classname="FSharpx.Tests.WebClientTests" runstate="Runnable" seed="1594477487" result="Passed" start-time="2016-08-22 10:23:17Z" end-time="2016-08-22 10:23:17Z" duration="0.154269" asserts="1" />
        </test-suite>
        <test-suite type="TestFixture" id="5-1711" name="WriterTest" fullname="FSharpx.Tests.WriterTest" classname="FSharpx.Tests.WriterTest" runstate="Runnable" testcasecount="1" result="Passed" start-time="2016-08-22 10:23:17Z" end-time="2016-08-22 10:23:17Z" duration="0.014015" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="1">
          <test-case id="5-1712" name="When processing files, it should log messages" fullname="FSharpx.Tests.WriterTest.When processing files, it should log messages" methodname="When processing files, it should log messages" classname="FSharpx.Tests.WriterTest" runstate="Runnable" seed="610977956" result="Passed" start-time="2016-08-22 10:23:17Z" end-time="2016-08-22 10:23:17Z" duration="0.010392" asserts="1">
            <output><![CDATA[C:\Test1.txt
C:\Test2.txt
]]></output>
          </test-case>
        </test-suite>
        <test-suite type="TestFixture" id="5-1160" name="ZipListTests" fullname="FSharpx.Tests.ZipListTests" classname="FSharpx.Tests.ZipListTests" runstate="Runnable" testcasecount="1" result="Passed" start-time="2016-08-22 10:23:17Z" end-time="2016-08-22 10:23:17Z" duration="0.014984" total="1" passed="1" failed="0" inconclusive="0" skipped="0" asserts="1">
          <test-case id="5-1161" name="zipping" fullname="FSharpx.Tests.ZipListTests.zipping" methodname="zipping" classname="FSharpx.Tests.ZipListTests" runstate="Runnable" seed="1900515313" result="Passed" start-time="2016-08-22 10:23:17Z" end-time="2016-08-22 10:23:17Z" duration="0.011364" asserts="1" />
        </test-suite>
      </test-suite>
    </test-suite>
  </test-suite>
</test-run>